{
    "version": 3,
    "file": "validations.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/validations.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {filter} from './tpl';\nconst isExisty = (value: any) => value !== null && value !== undefined;\nconst isEmpty = (value: any) => value === '';\nconst makeRegexp = (reg: string | RegExp) => {\n  if (reg instanceof RegExp) {\n    return reg;\n  } else if (/^(?:matchRegexp\\:)?\\/(.+)\\/([gimuy]*)$/.test(reg)) {\n    return new RegExp(RegExp.$1, RegExp.$2 || '');\n  } else if (typeof reg === 'string') {\n    return new RegExp(reg);\n  }\n\n  return /^$/;\n};\n\nexport interface ValidateFn {\n  (\n    values: {[propsName: string]: any},\n    value: any,\n    arg1?: any,\n    arg2?: any,\n    arg3?: any\n  ): boolean;\n}\n\nexport const validations: {\n  [propsName: string]: ValidateFn;\n} = {\n  isRequired: function (values, value: any) {\n    return (\n      value !== undefined &&\n      value !== '' &&\n      value !== null &&\n      (!Array.isArray(value) || !!value.length)\n    );\n  },\n  isExisty: function (values, value) {\n    return isExisty(value);\n  },\n  matchRegexp: function (values, value, regexp) {\n    return !isExisty(value) || isEmpty(value) || makeRegexp(regexp).test(value);\n  },\n  isUndefined: function (values, value) {\n    return value === undefined;\n  },\n  isEmptyString: function (values, value) {\n    return isEmpty(value);\n  },\n  isEmail: function (values, value) {\n    return validations.matchRegexp(\n      values,\n      value,\n      /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i\n    );\n  },\n  isUrl: function (values, value) {\n    return validations.matchRegexp(\n      values,\n      value,\n      /^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n    );\n  },\n  isTrue: function (values, value) {\n    return value === true;\n  },\n  isFalse: function (values, value) {\n    return value === false;\n  },\n  isNumeric: function (values, value) {\n    if (typeof value === 'number') {\n      return true;\n    }\n    return validations.matchRegexp(values, value, /^[-+]?(?:\\d*[.])?\\d+$/);\n  },\n  isAlpha: function (values, value) {\n    return validations.matchRegexp(values, value, /^[A-Z]+$/i);\n  },\n  isAlphanumeric: function (values, value) {\n    return validations.matchRegexp(values, value, /^[0-9A-Z]+$/i);\n  },\n  isInt: function (values, value) {\n    return validations.matchRegexp(values, value, /^(?:[-+]?(?:0|[1-9]\\d*))$/);\n  },\n  isFloat: function (values, value) {\n    return validations.matchRegexp(\n      values,\n      value,\n      /^(?:[-+]?(?:\\d+))?(?:\\.\\d*)?(?:[eE][\\+\\-]?(?:\\d+))?$/\n    );\n  },\n  isWords: function (values, value) {\n    return validations.matchRegexp(values, value, /^[A-Z\\s]+$/i);\n  },\n  isSpecialWords: function (values, value) {\n    return validations.matchRegexp(values, value, /^[A-Z\\s\\u00C0-\\u017F]+$/i);\n  },\n  isLength: function (values, value, length) {\n    return !isExisty(value) || isEmpty(value) || value.length === length;\n  },\n  equals: function (values, value, eql) {\n    return !isExisty(value) || isEmpty(value) || value == eql;\n  },\n  equalsField: function (values, value, field) {\n    return value == values[field];\n  },\n  maxLength: function (values, value, length) {\n    return !isExisty(value) || value.length <= length;\n  },\n  minLength: function (values, value, length) {\n    return !isExisty(value) || isEmpty(value) || value.length >= length;\n  },\n  isUrlPath: function (values, value, regexp) {\n    return !isExisty(value) || isEmpty(value) || /^[a-z0-9_\\\\-]+$/i.test(value);\n  },\n  maximum: function (values, value, maximum) {\n    return (\n      !isExisty(value) ||\n      isEmpty(value) ||\n      (parseFloat(value) || 0) <= (parseFloat(maximum) || 0)\n    );\n  },\n  lt: function (values, value, maximum) {\n    return (\n      !isExisty(value) ||\n      isEmpty(value) ||\n      (parseFloat(value) || 0) < (parseFloat(maximum) || 0)\n    );\n  },\n  minimum: function (values, value, minimum) {\n    return (\n      !isExisty(value) ||\n      isEmpty(value) ||\n      (parseFloat(value) || 0) >= (parseFloat(minimum) || 0)\n    );\n  },\n  gt: function (values, value, minimum) {\n    return (\n      !isExisty(value) ||\n      isEmpty(value) ||\n      (parseFloat(value) || 0) > (parseFloat(minimum) || 0)\n    );\n  },\n  isJson: function (values, value, minimum) {\n    if (isExisty(value) && !isEmpty(value)) {\n      try {\n        JSON.parse(value);\n      } catch (e) {\n        return false;\n      }\n    }\n    return true;\n  },\n  isPhoneNumber: function (values, value) {\n    return (\n      !isExisty(value) || isEmpty(value) || /^[1]([3-9])[0-9]{9}$/.test(value)\n    );\n  },\n  isTelNumber: function (values, value) {\n    return (\n      !isExisty(value) ||\n      isEmpty(value) ||\n      /^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/.test(value)\n    );\n  },\n  isZipcode: function (values, value) {\n    return (\n      !isExisty(value) || isEmpty(value) || /^[1-9]{1}(\\d+){5}$/.test(value)\n    );\n  },\n  isId: function (values, value) {\n    return (\n      !isExisty(value) ||\n      isEmpty(value) ||\n      /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)/.test(\n        value\n      )\n    );\n  },\n  notEmptyString: function (values, value) {\n    return !isExisty(value) || !(String(value) && String(value).trim() === '');\n  },\n  matchRegexp1: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp2: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp3: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp4: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp5: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp6: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp7: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp8: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  },\n  matchRegexp9: function (values, value, regexp) {\n    return validations.matchRegexp(values, value, regexp);\n  }\n};\n\nexport function addRule(\n  ruleName: string,\n  fn: ValidateFn,\n  message: string = ''\n) {\n  validations[ruleName] = fn;\n  validateMessages[ruleName] = message;\n}\n\nexport const validateMessages: {\n  [propName: string]: string;\n} = {\n  isEmail: 'Email 格式不正确',\n  isRequired: '这是必填项',\n  isUrl: 'Url 格式不正确',\n  isInt: '请输入整型数字',\n  isAlpha: '请输入字母',\n  isNumeric: '请输入数字',\n  isAlphanumeric: '请输入字母或者数字',\n  isFloat: '请输入浮点型数值',\n  isWords: '请输入字母',\n  isUrlPath: '只能输入字母、数字、`-` 和 `_`.',\n  matchRegexp: '格式不正确, 请输入符合规则为 `${1|raw}` 的内容。',\n  minLength: '请输入更多的内容，至少输入 $1 个字符。',\n  maxLength: '请控制内容长度, 不要输入 $1 个字符以上',\n  maximum: '当前输入值超出最大值 $1，请检查',\n  lt: '请输入小于 $1 的值',\n  minimum: '当前输入值低于最小值 $1，请检查',\n  gt: '请输入大于 $1 的值',\n  isJson: '请检查 Json 格式。',\n  isLength: '请输入长度为 $1 的内容',\n  notEmptyString: '请不要全输入空白字符',\n  equalsField: '输入的数据与 $1 值不一致',\n  equals: '输入的数据与 $1 不一致',\n  isPhoneNumber: '请输入合法的手机号码',\n  isTelNumber: '请输入合法的电话号码',\n  isZipcode: '请输入合法的邮编地址',\n  isId: '请输入合法的身份证号'\n};\n\nexport function validate(\n  value: any,\n  values: {[propName: string]: any},\n  rules: {[propName: string]: any},\n  messages?: {[propName: string]: string},\n  __ = (str: string) => str\n): Array<string> {\n  const errors: Array<string> = [];\n\n  rules &&\n    Object.keys(rules).forEach(ruleName => {\n      if (!rules[ruleName] && rules[ruleName] !== 0) {\n        return;\n      } else if (typeof validations[ruleName] !== 'function') {\n        throw new Error('Validation `' + ruleName + '` not exists!');\n      }\n\n      const fn = validations[ruleName];\n\n      if (\n        !fn(\n          values,\n          value,\n          ...(Array.isArray(rules[ruleName])\n            ? rules[ruleName]\n            : [rules[ruleName]])\n        )\n      ) {\n        errors.push(\n          filter(\n            __((messages && messages[ruleName]) || validateMessages[ruleName]),\n            {\n              ...[''].concat(rules[ruleName])\n            }\n          )\n        );\n      }\n    });\n\n  return errors;\n}\n\nexport function validateObject(\n  values: {[propName: string]: any},\n  rules: {[propName: string]: any},\n  messages?: {[propName: string]: string},\n  __ = (str: string) => str\n) {\n  const ret: {\n    [propName: string]: string[];\n  } = {};\n\n  Object.keys(rules).forEach(key => {\n    const msgs = validate(\n      values[key],\n      values,\n      rules[key] === true\n        ? {\n            isRequired: true\n          }\n        : rules[key],\n      messages,\n      __\n    );\n\n    if (msgs.length) {\n      ret[key] = msgs;\n    }\n  });\n\n  return ret;\n}\n\nconst splitValidations = function (str: string): Array<string> {\n  let i = 0;\n  const placeholder: {[propName: string]: string} = {};\n\n  return str\n    .replace(/matchRegexp\\d*\\s*\\:\\s*\\/.*?\\/[igm]*/g, raw => {\n      placeholder[`__${i}`] = raw;\n      return `__${i++}`;\n    })\n    .split(/,(?![^{\\[]*[}\\]])/g)\n    .map(str => (/^__\\d+$/.test(str) ? placeholder[str] : str.trim()));\n};\n\nexport function str2rules(\n  validations: string | {[propName: string]: any}\n): {[propName: string]: any} {\n  if (typeof validations === 'string') {\n    return validations\n      ? splitValidations(validations).reduce(function (\n          validations: {[propName: string]: any},\n          validation\n        ) {\n          const idx = validation.indexOf(':');\n          let validateMethod = validation;\n          let args = [];\n\n          if (~idx) {\n            validateMethod = validation.substring(0, idx);\n            args = /^matchRegexp/.test(validateMethod)\n              ? [validation.substring(idx + 1).trim()]\n              : validation\n                  .substring(idx + 1)\n                  .split(',')\n                  .map(function (arg) {\n                    try {\n                      return JSON.parse(arg);\n                    } catch (e) {\n                      return arg;\n                    }\n                  });\n          }\n\n          validations[validateMethod] = args.length ? args : true;\n          return validations;\n        },\n        {})\n      : {};\n  }\n\n  return validations || {};\n}\n"
    ]
}