{
    "version": 3,
    "file": "Progress.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Progress.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,sCAAmD;AAiDnD;IAAmC,yCAAsC;IAAzE;;IAwDA,CAAC;IA/CC,qCAAa,GAAb,UAAc,KAAa;QACzB,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;QACnD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QACrD,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC;IAED,8BAAM,GAAN;QACQ,IAAA,KAQF,IAAI,CAAC,KAAK,EAPZ,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,iBAAiB,uBAAA,EACjB,oBAAoB,0BAAA,EACpB,GAAG,SAAA,EACH,SAAS,eAAA,EACG,EAAE,gBACF,CAAC;QAEf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7B,IAAI,SAAS,GAAoB,CAC/B,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAClD,CAAC;QAEF,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC7B,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,SAAS,GAAG;gBACV,uCAAK,GAAG,EAAC,UAAU,EAAC,SAAS,EAAE,EAAE,CAAC,UAAU,EAAE,iBAAiB,CAAC;oBAC9D,uCACE,SAAS,EAAE,EAAE,CACX,cAAc,EACd,oBAAoB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAClD,EACD,KAAK,EAAK,KAAK,MAAG,EAClB,KAAK,EAAE;4BACL,KAAK,EAAK,KAAK,MAAG;yBACnB,GACD,CACE;gBACN,SAAS,CAAC,CAAC,CAAC,uCAAK,GAAG,EAAC,OAAO;oBAAE,KAAK;wBAAQ,CAAC,CAAC,CAAC,IAAI;aACnD,CAAC;SACH;QAED,OAAO,wCAAM,SAAS,EAAE,EAAE,CAAC,eAAe,EAAE,SAAS,CAAC,IAAG,SAAS,CAAQ,CAAC;IAC7E,CAAC;IAtDM,0BAAY,GAAG;QACpB,WAAW,EAAE,GAAG;QAChB,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,EAAE;QACxB,GAAG,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC;QACvE,SAAS,EAAE,IAAI;KAChB,CAAC;IAiDJ,oBAAC;CAAA,AAxDD,CAAmC,eAAK,CAAC,SAAS,GAwDjD;AAxDY,sCAAa;AA8D1B;IAA2C,iDAAa;IAAxD;;IAA0D,CAAC;IAA9C,qBAAqB;QAJjC,kBAAQ,CAAC;YACR,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,qBAAqB,CAAyB;IAAD,4BAAC;CAAA,AAA3D,CAA2C,aAAa,GAAG;AAA9C,sDAAqB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {ServiceStore, IServiceStore} from '../store/service';\nimport {Api, SchemaNode, PlainObject} from '../types';\nimport {filter} from '../utils/tpl';\nimport cx from 'classnames';\nimport {BaseSchema, SchemaClassName} from '../Schema';\n\n/**\n * 进度展示控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/progress\n */\nexport interface ProgressSchema extends BaseSchema {\n  type: 'progress';\n\n  /**\n   * 关联字段名。\n   */\n  name?: string;\n\n  /**\n   * 进度条 CSS 类名\n   */\n  progressClassName?: SchemaClassName;\n\n  /**\n   * 进度外层 CSS 类名\n   */\n  progressBarClassName?: SchemaClassName;\n\n  /**\n   * 配置不通的值段，用不通的样式提示用户\n   */\n  map?: Array<SchemaClassName>;\n\n  /**\n   * 是否显示值\n   */\n  showLabel?: boolean;\n\n  /**\n   * 占位符\n   */\n  placeholder?: string;\n}\n\nexport interface ProgressProps extends RendererProps, ProgressSchema {\n  map: Array<SchemaClassName>;\n}\n\nexport class ProgressField extends React.Component<ProgressProps, object> {\n  static defaultProps = {\n    placeholder: '-',\n    progressClassName: '',\n    progressBarClassName: '',\n    map: ['bg-danger', 'bg-warning', 'bg-info', 'bg-success', 'bg-success'],\n    showLabel: true\n  };\n\n  autoClassName(value: number) {\n    const map = this.props.map;\n    let index = Math.floor((value * map.length) / 100);\n    index = Math.max(0, Math.min(map.length - 1, index));\n    return map[index];\n  }\n\n  render() {\n    const {\n      className,\n      placeholder,\n      progressClassName,\n      progressBarClassName,\n      map,\n      showLabel,\n      classnames: cx\n    } = this.props;\n\n    let value = this.props.value;\n    let viewValue: React.ReactNode = (\n      <span className=\"text-muted\">{placeholder}</span>\n    );\n\n    if (/^\\d*\\.?\\d+$/.test(value)) {\n      value = parseFloat(value);\n    }\n\n    if (typeof value === 'number') {\n      viewValue = [\n        <div key=\"progress\" className={cx('Progress', progressClassName)}>\n          <div\n            className={cx(\n              'Progress-bar',\n              progressBarClassName || this.autoClassName(value)\n            )}\n            title={`${value}%`}\n            style={{\n              width: `${value}%`\n            }}\n          />\n        </div>,\n        showLabel ? <div key=\"value\">{value}%</div> : null\n      ];\n    }\n\n    return <span className={cx('ProgressField', className)}>{viewValue}</span>;\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)progress$/,\n  name: 'progress'\n})\nexport class ProgressFieldRenderer extends ProgressField {}\n"
    ]
}