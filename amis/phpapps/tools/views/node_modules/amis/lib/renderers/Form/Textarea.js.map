{
    "version": 3,
    "file": "Textarea.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Textarea.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport Textarea from '../../components/Textarea';\nimport {findDOMNode} from 'react-dom';\nimport {autobind} from '../../utils/helper';\n/**\n * TextArea 多行文本输入框。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/textarea\n */\nexport interface TextareaControlSchema extends FormBaseControl {\n  /**\n   * 指定为多行文本输入框\n   */\n  type: 'textarea';\n\n  /**\n   * 最大行数\n   */\n  maxRows?: number;\n\n  /**\n   * 最小行数\n   */\n  minRows?: number;\n}\n\nexport interface TextAreaProps extends FormControlProps {\n  placeholder?: string;\n  minRows?: number;\n  maxRows?: number;\n}\n\nexport default class TextAreaControl extends React.Component<\n  TextAreaProps,\n  any\n> {\n  static defaultProps: Partial<TextAreaProps> = {\n    minRows: 3,\n    maxRows: 20\n  };\n\n  input?: HTMLInputElement;\n  inputRef = (ref: any) => (this.input = findDOMNode(ref) as HTMLInputElement);\n\n  focus() {\n    if (!this.input) {\n      return;\n    }\n\n    this.input.focus();\n\n    // 光标放到最后\n    const len = this.input.value.length;\n    len && this.input.setSelectionRange(len, len);\n  }\n\n  @autobind\n  handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const {onChange} = this.props;\n\n    let value = e.currentTarget.value;\n\n    onChange(value);\n  }\n\n  @autobind\n  handleFocus(e: React.FocusEvent<HTMLTextAreaElement>) {\n    const {onFocus} = this.props;\n\n    onFocus && onFocus(e);\n  }\n\n  @autobind\n  handleBlur(e: React.FocusEvent<HTMLTextAreaElement>) {\n    const {onBlur, trimContents, value, onChange} = this.props;\n\n    if (trimContents && value && typeof value === 'string') {\n      onChange(value.trim());\n    }\n\n    onBlur && onBlur(e);\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      value,\n      type,\n      placeholder,\n      disabled,\n      minRows,\n      maxRows,\n      name\n    } = this.props;\n    return (\n      <Textarea\n        autoComplete=\"off\"\n        ref={this.inputRef}\n        name={name}\n        disabled={disabled}\n        type={type}\n        className={cx(`${ns}TextareaControl`, className)}\n        value={\n          typeof value === 'undefined' || value === null\n            ? ''\n            : typeof value === 'string'\n            ? value\n            : JSON.stringify(value)\n        }\n        placeholder={placeholder}\n        minRows={minRows}\n        maxRows={maxRows}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n      />\n    );\n  }\n}\n\n@FormItem({\n  type: 'textarea'\n})\nexport class TextAreaControlRenderer extends TextAreaControl {}\n"
    ]
}