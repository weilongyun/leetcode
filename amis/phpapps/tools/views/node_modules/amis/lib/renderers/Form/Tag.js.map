{
    "version": 3,
    "file": "Tag.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Tag.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {\n  OptionsControl,\n  OptionsControlProps,\n  Option,\n  FormOptionsControl\n} from './Options';\nimport Downshift from 'downshift';\nimport find from 'lodash/find';\nimport {findDOMNode} from 'react-dom';\nimport ResultBox from '../../components/ResultBox';\nimport {autobind, filterTree} from '../../utils/helper';\nimport Spinner from '../../components/Spinner';\nimport Overlay from '../../components/Overlay';\nimport PopOver from '../../components/PopOver';\nimport ListMenu from '../../components/ListMenu';\n\n/**\n * Tag 输入框\n * 文档：https://baidu.gitee.io/amis/docs/components/form/tag\n */\nexport interface TagControlSchema extends FormOptionsControl {\n  type: 'tag';\n\n  /**\n   * 选项提示信息\n   */\n  optionsTip?: string;\n\n  /**\n   * 是否为下拉模式\n   */\n  dropdown?: boolean;\n}\n\n// declare function matchSorter(items:Array<any>, input:any, options:any): Array<any>;\n\nexport interface TagProps extends OptionsControlProps {\n  placeholder?: string;\n  clearable: boolean;\n  resetValue?: any;\n  optionsTip: string;\n  dropdown?: boolean;\n}\n\nexport interface TagState {\n  inputValue: string;\n  isFocused?: boolean;\n  isOpened?: boolean;\n}\n\nexport default class TagControl extends React.PureComponent<\n  TagProps,\n  TagState\n> {\n  input: React.RefObject<any> = React.createRef();\n\n  static defaultProps = {\n    resetValue: '',\n    labelField: 'label',\n    valueField: 'value',\n    multiple: true,\n    placeholder: '暂无标签',\n    optionsTip: '最近您使用的标签'\n  };\n\n  state = {\n    isOpened: false,\n    inputValue: '',\n    isFocused: false\n  };\n\n  componentWillReceiveProps(nextProps: TagProps) {\n    const props = this.props;\n\n    if (props.value !== nextProps.value) {\n      this.setState({\n        inputValue: ''\n      });\n    }\n  }\n\n  addItem(option: Option) {\n    const {\n      selectedOptions,\n      onChange,\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField\n    } = this.props;\n    const newValue = selectedOptions.concat();\n\n    if (find(newValue, item => item.value == option.value)) {\n      return;\n    }\n\n    newValue.push(option);\n\n    onChange(\n      joinValues\n        ? newValue\n            .map(item => item[valueField || 'value'])\n            .join(delimiter || ',')\n        : extractValue\n        ? newValue.map(item => item[valueField || 'value'])\n        : newValue\n    );\n  }\n\n  @autobind\n  handleFocus(e: any) {\n    this.setState({\n      isFocused: true,\n      isOpened: true\n    });\n\n    this.props.onFocus?.(e);\n  }\n\n  @autobind\n  handleBlur(e: any) {\n    const {\n      selectedOptions,\n      onChange,\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField\n    } = this.props;\n\n    const value = this.state.inputValue.trim();\n    this.props.onBlur?.(e);\n    this.setState(\n      {\n        isFocused: false,\n        isOpened: false,\n        inputValue: ''\n      },\n      value\n        ? () => {\n            const newValue = selectedOptions.concat();\n            if (!find(newValue, item => item.value === value)) {\n              const option = {\n                label: value,\n                value: value\n              };\n              newValue.push(option);\n              onChange(\n                joinValues\n                  ? newValue\n                      .map(item => item[valueField || 'value'])\n                      .join(delimiter || ',')\n                  : extractValue\n                  ? newValue.map(item => item[valueField || 'value'])\n                  : newValue\n              );\n            }\n          }\n        : undefined\n    );\n  }\n\n  @autobind\n  close() {\n    this.setState({\n      isOpened: false\n    });\n  }\n\n  @autobind\n  handleInputChange(text: string) {\n    this.setState({\n      inputValue: text\n    });\n  }\n\n  @autobind\n  handleChange(value: Array<Option>) {\n    const {\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField,\n      onChange\n    } = this.props;\n\n    let newValue: any = Array.isArray(value) ? value.concat() : [];\n\n    if (joinValues || extractValue) {\n      newValue = value.map(item => item[valueField || 'value']);\n    }\n\n    if (joinValues) {\n      newValue = newValue.join(delimiter || ',');\n    }\n\n    onChange(newValue);\n  }\n\n  @autobind\n  renderItem(item: Option): any {\n    const {labelField} = this.props;\n    return `${item[labelField || 'label']}`;\n  }\n\n  @autobind\n  handleKeyDown(evt: React.KeyboardEvent<HTMLInputElement>) {\n    const {\n      selectedOptions,\n      onChange,\n      joinValues,\n      extractValue,\n      delimiter,\n      valueField\n    } = this.props;\n\n    const value = this.state.inputValue.trim();\n\n    if (selectedOptions.length && !value && evt.key == 'Backspace') {\n      const newValue = selectedOptions.concat();\n      newValue.pop();\n\n      onChange(\n        joinValues\n          ? newValue\n              .map(item => item[valueField || 'value'])\n              .join(delimiter || ',')\n          : extractValue\n          ? newValue.map(item => item[valueField || 'value'])\n          : newValue\n      );\n    } else if (value && (evt.key === 'Enter' || evt.key === delimiter)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const newValue = selectedOptions.concat();\n\n      if (!find(newValue, item => item.value == value)) {\n        newValue.push({\n          label: value,\n          value: value\n        });\n\n        onChange(\n          joinValues\n            ? newValue\n                .map(item => item[valueField || 'value'])\n                .join(delimiter || ',')\n            : extractValue\n            ? newValue.map(item => item[valueField || 'value'])\n            : newValue\n        );\n      }\n\n      this.setState({\n        inputValue: ''\n      });\n    }\n  }\n\n  @autobind\n  handleOptionChange(option: Option) {\n    if (this.state.inputValue || !option) {\n      return;\n    }\n    this.addItem(option);\n  }\n\n  @autobind\n  getTarget() {\n    return this.input.current;\n  }\n\n  @autobind\n  getParent() {\n    return this.input.current && findDOMNode(this.input.current)!.parentElement;\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload?.();\n  }\n\n  render() {\n    const {\n      className,\n      classnames: cx,\n      disabled,\n      placeholder,\n      name,\n      clearable,\n      selectedOptions,\n      loading,\n      popOverContainer,\n      dropdown,\n      options,\n      optionsTip,\n      translate: __\n    } = this.props;\n\n    const finnalOptions = Array.isArray(options)\n      ? filterTree(\n          options,\n          item =>\n            (Array.isArray(item.children) && !!item.children.length) ||\n            (item.value !== undefined && !~selectedOptions.indexOf(item)),\n          0,\n          true\n        )\n      : [];\n\n    return (\n      <Downshift\n        selectedItem={selectedOptions}\n        isOpen={this.state.isFocused}\n        inputValue={this.state.inputValue}\n        onChange={this.handleOptionChange}\n        itemToString={this.renderItem}\n      >\n        {({isOpen, highlightedIndex, getItemProps, getInputProps}) => {\n          return (\n            <div className={cx(className, `TagControl`)}>\n              <ResultBox\n                {...getInputProps({\n                  name,\n                  ref: this.input,\n                  placeholder: __(placeholder || '暂无标签'),\n                  value: this.state.inputValue,\n                  onKeyDown: this.handleKeyDown,\n                  onFocus: this.handleFocus,\n                  onBlur: this.handleBlur,\n                  disabled\n                })}\n                onChange={this.handleInputChange}\n                className={cx('TagControl-input')}\n                result={selectedOptions}\n                onResultChange={this.handleChange}\n                itemRender={this.renderItem}\n                clearable={clearable}\n                allowInput\n              >\n                {loading ? <Spinner size=\"sm\" /> : undefined}\n              </ResultBox>\n\n              {dropdown !== false ? (\n                <Overlay\n                  container={popOverContainer || this.getParent}\n                  target={this.getTarget}\n                  placement={'auto'}\n                  show={isOpen && !!finnalOptions.length}\n                >\n                  <PopOver\n                    overlay\n                    className={cx('TagControl-popover')}\n                    onHide={this.close}\n                  >\n                    <ListMenu\n                      options={finnalOptions}\n                      itemRender={this.renderItem}\n                      highlightIndex={highlightedIndex}\n                      getItemProps={({item, index}) => ({\n                        ...getItemProps({\n                          index,\n                          item,\n                          disabled: item.disabled\n                        })\n                      })}\n                    />\n                  </PopOver>\n                </Overlay>\n              ) : (\n                // 保留原来的展现方式，不推荐\n                <div className={cx('TagControl-sug')}>\n                  {optionsTip ? (\n                    <div className={cx('TagControl-sugTip')}>\n                      {__(optionsTip)}\n                    </div>\n                  ) : null}\n                  {options.map((item, index) => (\n                    <div\n                      className={cx('TagControl-sugItem', {\n                        'is-disabled': item.disabled || disabled\n                      })}\n                      key={index}\n                      onClick={this.addItem.bind(this, item)}\n                    >\n                      {item.label}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        }}\n      </Downshift>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'tag'\n})\nexport class TagControlRenderer extends TagControl {}\n"
    ]
}