{
    "version": 3,
    "file": "Remark.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Remark.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Api, SchemaNode, Schema, Action} from '../types';\nimport cx from 'classnames';\nimport TooltipWrapper from '../components/TooltipWrapper';\nimport {filter} from '../utils/tpl';\nimport {themeable} from '../theme';\nimport {hasIcon, Icon} from '../components/icons';\nimport {BaseSchema, SchemaClassName, SchemaIcon, SchemaTpl} from '../Schema';\n\n/**\n * 提示渲染器，默认会显示个小图标，鼠标放上来的时候显示配置的内容。\n */\nexport interface RemarkSchema extends BaseSchema {\n  /**\n   * 指定为提示类型\n   */\n  type: 'remark';\n\n  label?: string;\n\n  icon?: SchemaIcon;\n\n  tooltipClassName?: SchemaClassName;\n\n  /**\n   * 触发规则\n   */\n  trigger?: Array<'click' | 'hover' | 'focus'>;\n\n  /**\n   * 提示标题\n   */\n  title?: string;\n\n  /**\n   * 提示内容\n   */\n  content: SchemaTpl;\n\n  /**\n   * 显示位置\n   */\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n\n  /**\n   * 点击其他内容时是否关闭弹框信息\n   */\n  rootClose?: boolean;\n}\n\nexport type SchemaRemark = string | Omit<RemarkSchema, 'type'>;\n\nexport function filterContents(\n  tooltip:\n    | string\n    | undefined\n    | {title?: string; render?: any; content?: string; body?: string},\n  data: any\n) {\n  if (typeof tooltip === 'string') {\n    return filter(tooltip, data);\n  } else if (tooltip) {\n    return tooltip.title\n      ? {\n          render: tooltip.render ? () => tooltip.render(data) : undefined,\n          title: filter(tooltip.title, data),\n          content:\n            tooltip.content || tooltip.body\n              ? filter(tooltip.content || tooltip.body || '', data)\n              : undefined\n        }\n      : tooltip.content || tooltip.body\n      ? filter(tooltip.content || tooltip.body || '', data)\n      : undefined;\n  }\n  return tooltip;\n}\n\nexport interface RemarkProps extends RendererProps, RemarkSchema {\n  icon: string;\n  trigger: Array<'hover' | 'click' | 'focus'>;\n}\n\nclass Remark extends React.Component<RemarkProps> {\n  static propsList: Array<string> = [];\n  static defaultProps = {\n    icon: '',\n    trigger: ['hover', 'focus'] as Array<'hover' | 'click' | 'focus'>\n  };\n\n  render() {\n    const {\n      className,\n      icon,\n      label,\n      tooltip,\n      placement,\n      rootClose,\n      trigger,\n      container,\n      classPrefix: ns,\n      classnames: cx,\n      content,\n      data,\n      env,\n      tooltipClassName\n    } = this.props;\n\n    const finalIcon = tooltip?.icon ?? icon;\n    const finalLabel = tooltip?.label ?? label;\n\n    return (\n      <TooltipWrapper\n        classPrefix={ns}\n        classnames={cx}\n        tooltip={filterContents(tooltip || content, data)}\n        tooltipClassName={\n          (tooltip && tooltip.tooltipClassName) || tooltipClassName\n        }\n        placement={(tooltip && tooltip.placement) || placement}\n        rootClose={(tooltip && tooltip.rootClose) || rootClose}\n        trigger={(tooltip && tooltip.trigger) || trigger}\n        container={container || env.getModalContainer}\n        delay={tooltip && tooltip.delay}\n      >\n        <div\n          className={cx(\n            `Remark`,\n            (tooltip && tooltip.className) || className || `Remark--warning`\n          )}\n        >\n          {finalLabel ? <span>{finalLabel}</span> : null}\n          {finalIcon ? (\n            hasIcon(finalIcon) ? (\n              <span className={cx('Remark-icon')}>\n                <Icon icon={finalIcon} />\n              </span>\n            ) : (\n              <i className={cx('Remark-icon', finalIcon)} />\n            )\n          ) : finalIcon === false && finalLabel ? null : (\n            <span className={cx('Remark-icon icon')}>\n              <Icon icon=\"question-mark\" />\n            </span>\n          )}\n        </div>\n      </TooltipWrapper>\n    );\n  }\n}\n\nexport default themeable(Remark);\n\n@Renderer({\n  test: /(^|\\/)remark$/,\n  name: 'remark'\n})\nexport class RemarkRenderer extends Remark {}\n"
    ]
}