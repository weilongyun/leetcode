{
    "version": 3,
    "file": "Tasks.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Tasks.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {ServiceStore, IServiceStore} from '../store/service';\nimport cx from 'classnames';\nimport getExprProperties from '../utils/filter-schema';\nimport {Api, ApiObject, Payload} from '../types';\nimport update from 'immutability-helper';\nimport {isEffectiveApi, isApiOutdated} from '../utils/api';\nimport {ScopedContext, IScopedContext} from '../Scoped';\nimport Spinner from '../components/Spinner';\nimport {BaseSchema, SchemaApi, SchemaClassName, SchemaName} from '../Schema';\nimport {createObject} from '../utils/helper';\n\n/**\n * Tasks 渲染器，格式说明\n * 文档：https://baidu.gitee.io/amis/docs/components/tasks\n */\nexport interface TasksSchema extends BaseSchema {\n  /** 指定为任务类型 */\n  type: 'tasks';\n\n  btnClassName?: SchemaClassName;\n\n  /**\n   * 操作按钮文字\n   * @default 上线\n   */\n  btnText?: string;\n\n  /**\n   * 用来获取任务状态的 API，当没有进行时任务时不会发送。\n   */\n  checkApi?: SchemaApi;\n\n  /**\n   * 当有任务进行中，会每隔一段时间再次检测，而时间间隔就是通过此项配置，默认 3s。\n   * @default 3000\n   */\n  interval?: number;\n\n  items?: Array<{\n    /**\n     * 任务键值，请唯一区分\n     */\n    key?: string;\n\n    /**\n     * 任务名称\n     */\n    label?: string;\n\n    /**\n     * 当前任务状态，支持 html\n     */\n    remark?: string;\n\n    /**\n     * 任务状态：\n     * 0: 初始状态，不可操作。\n     * 1: 就绪，可操作状态。\n     * 2: 进行中，还没有结束。\n     * 3：有错误，不可重试。\n     * 4: 已正常结束。\n     * 5：有错误，且可以重试。\n     */\n    status?: 0 | 1 | 2 | 3 | 4 | 5;\n  }>;\n\n  name?: SchemaName;\n\n  /**\n   * 操作列说明\n   */\n  operationLabel?: string;\n\n  /**\n   * 如果任务失败，且可以重试，提交的时候会使用此 API\n   */\n  reSubmitApi?: SchemaApi;\n\n  /**\n   * 备注列说明\n   * @default 备注\n   */\n  remarkLabel?: string;\n\n  /**\n   * 配置容器重试按钮 className\n   * @default btn-sm btn-danger\n   */\n  retryBtnClassName?: SchemaClassName;\n\n  /**\n   * 重试操作按钮文字\n   * @default 重试\n   */\n  retryBtnText?: string;\n\n  /**\n   * 状态列说明\n   * @default 状态\n   */\n  statusLabel?: string;\n\n  /**\n   * 状态显示对应的类名配置。\n   * @default [ \"label-warning\", \"label-info\", \"label-success\", \"label-danger\", \"label-default\", \"label-danger\" ]\n   */\n  statusLabelMap?: Array<string>;\n\n  /**\n   * 状态显示对应的文字显示配置。\n   * @default [\"未开始\", \"就绪\", \"进行中\", \"出错\", \"已完成\", \"出错\"],\n   */\n  statusTextMap?: Array<string>;\n\n  /**\n   * 提交任务使用的 API\n   */\n  submitApi?: SchemaApi;\n\n  /**\n   * 配置 table className\n   */\n  tableClassName?: SchemaClassName;\n\n  /**\n   * 任务名称列说明\n   * @default 任务名称\n   */\n  taskNameLabel?: string;\n\n  initialStatusCode?: number;\n  readyStatusCode?: number;\n  loadingStatusCode?: number;\n  canRetryStatusCode?: number;\n  finishStatusCode?: number;\n  errorStatusCode?: number;\n}\n\nexport interface TaskProps extends RendererProps, TasksSchema {}\n\nexport interface TaskItem {\n  label?: string;\n  key?: string;\n  remark?: string;\n  status?: any;\n}\n\nexport interface TaskState {\n  error?: string;\n  items: Array<TaskItem>;\n}\n\nexport default class Task extends React.Component<TaskProps, TaskState> {\n  static defaultProps: Partial<TaskProps> = {\n    className: 'b-a bg-white table-responsive',\n    tableClassName: 'table table-striped m-b-none',\n    taskNameLabel: '任务名称',\n    operationLabel: '操作',\n    statusLabel: '状态',\n    remarkLabel: '备注说明',\n    btnText: '上线',\n    retryBtnText: '重试',\n    btnClassName: 'btn-sm btn-default',\n    retryBtnClassName: 'btn-sm btn-danger',\n    statusLabelMap: [\n      'label-warning',\n      'label-info',\n      'label-info',\n      'label-danger',\n      'label-success',\n      'label-danger'\n    ],\n    statusTextMap: ['未开始', '就绪', '进行中', '出错', '已完成', '出错'],\n    initialStatusCode: 0,\n    readyStatusCode: 1,\n    loadingStatusCode: 2,\n    errorStatusCode: 3,\n    finishStatusCode: 4,\n    canRetryStatusCode: 5,\n    interval: 3000\n  };\n\n  timer: any;\n\n  constructor(props: TaskProps) {\n    super(props);\n    this.state = {\n      items: props.items ? props.items.concat() : []\n    };\n\n    this.handleLoaded = this.handleLoaded.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    this.tick(!!this.props.checkApi);\n  }\n\n  componentWillReceiveProps(nextProps: TaskProps) {\n    const props = this.props;\n\n    if (props.items !== nextProps.items) {\n      this.setState({\n        items: nextProps.items ? nextProps.items.concat() : []\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: TaskProps) {\n    const props = this.props;\n\n    if (\n      isApiOutdated(\n        prevProps.checkApi,\n        props.checkApi,\n        prevProps.data,\n        props.data\n      )\n    ) {\n      this.tick(true);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  reload() {\n    this.tick(true);\n  }\n\n  tick(force = false) {\n    const {loadingStatusCode, data, interval, checkApi, env} = this.props;\n    const items = this.state.items;\n    clearTimeout(this.timer);\n\n    // 如果每个 task 都完成了, 则不需要取查看状态.\n    if (!force && !items.some(item => item.status === loadingStatusCode)) {\n      return;\n    }\n\n    if (interval && !isEffectiveApi(checkApi)) {\n      return env.alert('checkApi 没有设置, 不能及时获取任务状态');\n    }\n\n    isEffectiveApi(checkApi, data) &&\n      env &&\n      env\n        .fetcher(checkApi, data)\n        .then(this.handleLoaded)\n        .catch(e => this.setState({error: e}));\n  }\n\n  handleLoaded(ret: Payload) {\n    if (!Array.isArray(ret.data)) {\n      return this.props.env.alert(\n        '返回格式不正确, 期望 response.data 为数组, 包含每个 task 的状态信息'\n      );\n    }\n\n    this.setState({\n      items: ret.data\n    });\n\n    const interval = this.props.interval;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(this.tick, interval);\n  }\n\n  submitTask(item: TaskItem, index: number, retry = false) {\n    const {\n      submitApi,\n      reSubmitApi,\n      loadingStatusCode,\n      errorStatusCode,\n      data,\n      env\n    } = this.props;\n\n    if (!retry && !isEffectiveApi(submitApi)) {\n      return env.alert('submitApi 没有配置');\n    } else if (retry && !isEffectiveApi(reSubmitApi)) {\n      return env.alert('reSubmitApi 没有配置');\n    }\n\n    this.setState(\n      update(this.state, {\n        items: {\n          $splice: [\n            [\n              index,\n              1,\n              {\n                ...item,\n                status: loadingStatusCode\n              }\n            ]\n          ]\n        }\n      } as any)\n    );\n\n    const api = retry ? reSubmitApi : submitApi;\n    isEffectiveApi(api, data) &&\n      env &&\n      env\n        .fetcher(api, createObject(data, item))\n        .then((ret: Payload) => {\n          if (ret && ret.data) {\n            if (Array.isArray(ret.data)) {\n              this.handleLoaded(ret);\n            } else {\n              let replace = api && (api as any).replaceData;\n              const items = this.state.items.map(item =>\n                item.key === ret.data.key\n                  ? {\n                      ...((api as any).replaceData ? {} : item),\n                      ...ret.data\n                    }\n                  : item\n              );\n              this.handleLoaded({\n                ...ret,\n                data: items\n              });\n            }\n            return;\n          }\n\n          clearTimeout(this.timer);\n          this.timer = setTimeout(this.tick, 4);\n        })\n        .catch(e =>\n          this.setState(\n            update(this.state, {\n              items: {\n                $splice: [\n                  [\n                    index,\n                    1,\n                    {\n                      ...item,\n                      status: errorStatusCode,\n                      remark: e.message || e\n                    }\n                  ]\n                ]\n              }\n            } as any)\n          )\n        );\n  }\n\n  render() {\n    const {\n      className,\n      tableClassName,\n      taskNameLabel,\n      operationLabel,\n      statusLabel,\n      remarkLabel,\n      btnText,\n      retryBtnText,\n      btnClassName,\n      retryBtnClassName,\n      statusLabelMap,\n      statusTextMap,\n      readyStatusCode,\n      loadingStatusCode,\n      canRetryStatusCode,\n      render\n    } = this.props;\n    const items = this.state.items;\n    const error = this.state.error;\n\n    return (\n      <div className={className}>\n        <table className={tableClassName}>\n          <thead>\n            <tr>\n              <th>{taskNameLabel}</th>\n              <th>{operationLabel}</th>\n              <th>{statusLabel}</th>\n              <th>{remarkLabel}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {error ? (\n              <tr>\n                <td colSpan={4}>\n                  <div className=\"text-danger\">{error}</div>\n                </td>\n              </tr>\n            ) : (\n              items.map((item, key) => (\n                <tr key={key}>\n                  <td>{item.label}</td>\n                  <td>\n                    {item.status == loadingStatusCode ? (\n                      <Spinner\n                        show\n                        icon=\"reload\"\n                        spinnerClassName={cx('Task-spinner')}\n                      />\n                    ) : item.status == canRetryStatusCode ? (\n                      <a\n                        onClick={() => this.submitTask(item, key, true)}\n                        className={cx('btn', retryBtnClassName || btnClassName)}\n                      >\n                        {retryBtnText || btnText}\n                      </a>\n                    ) : (\n                      <a\n                        onClick={() => this.submitTask(item, key)}\n                        className={cx('btn', btnClassName, {\n                          disabled: item.status !== readyStatusCode\n                        })}\n                      >\n                        {btnText}\n                      </a>\n                    )}\n                  </td>\n                  <td>\n                    <span\n                      className={cx(\n                        'label',\n                        statusLabelMap && statusLabelMap[item.status || 0]\n                      )}\n                    >\n                      {statusTextMap && statusTextMap[item.status || 0]}\n                    </span>\n                  </td>\n                  <td>\n                    {item.remark ? render(`${key}/remark`, item.remark) : null}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)tasks$/,\n  name: 'tasks'\n})\nexport class TaskRenderer extends Task {\n  static contextType = ScopedContext;\n\n  componentWillMount() {\n    // super.componentWillMount();\n    const scoped = this.context as IScopedContext;\n    scoped.registerComponent(this);\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    const scoped = this.context as IScopedContext;\n    scoped.unRegisterComponent(this);\n  }\n}\n"
    ]
}