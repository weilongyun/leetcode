{
    "version": 3,
    "file": "Control.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Control.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {IFormStore, IFormItemStore} from '../../store/form';\nimport debouce from 'lodash/debounce';\n\nimport {\n  RendererProps,\n  Renderer,\n  RootStoreContext,\n  withRootStore\n} from '../../factory';\nimport {ComboStore, IComboStore, IUniqueGroup} from '../../store/combo';\nimport {\n  anyChanged,\n  promisify,\n  isObject,\n  getVariable,\n  guid\n} from '../../utils/helper';\nimport {Schema} from '../../types';\nimport {IIRendererStore, IRendererStore} from '../../store';\nimport {ScopedContext, IScopedContext} from '../../Scoped';\nimport {reaction} from 'mobx';\nimport {FormItemStore} from '../../store/formItem';\nimport {isAlive} from 'mobx-state-tree';\n\nexport interface ControlProps extends RendererProps {\n  control: {\n    id?: string;\n    name?: string;\n    value?: any;\n    required?: boolean;\n    validations: string | {[propsName: string]: any};\n    validationErrors: {[propsName: string]: any};\n    validateOnChange: boolean;\n    multiple?: boolean;\n    delimiter?: string;\n    joinValues?: boolean;\n    extractValue?: boolean;\n    valueField?: string;\n    labelField?: string;\n    unique?: boolean;\n    pipeIn?: (value: any, data: any) => any;\n    pipeOut?: (value: any, originValue: any, data: any) => any;\n    validate?: (value: any, values: any, name: string) => any;\n  } & Schema;\n  rootStore: IRendererStore;\n  formStore: IFormStore;\n  store: IIRendererStore;\n  addHook: (fn: () => any, type?: 'validate' | 'init' | 'flush') => void;\n  removeHook: (fn: () => any, type?: 'validate' | 'init' | 'flush') => void;\n}\n\ninterface ControlState {\n  value: any;\n}\n\nexport default class FormControl extends React.PureComponent<\n  ControlProps,\n  ControlState\n> {\n  static propsList: any = ['control'];\n  public model: IFormItemStore | undefined;\n  control: any;\n  value?: any = undefined;\n  hook?: () => any;\n  hook2?: () => any;\n  hook3?: () => any;\n  reaction?: () => void;\n\n  static defaultProps = {};\n\n  lazyValidate = debouce(this.validate.bind(this), 250, {\n    trailing: true,\n    leading: false\n  });\n  lazyEmitChange = debouce(this.emitChange.bind(this), 250, {\n    trailing: true,\n    leading: false\n  });\n  state = {value: this.value = this.props.control.value};\n  componentWillMount() {\n    const {\n      formStore: form,\n      rootStore,\n      control: {\n        name,\n        id,\n        type,\n        required,\n        validations,\n        validationErrors,\n        unique,\n        value,\n        multiple,\n        delimiter,\n        valueField,\n        labelField,\n        joinValues,\n        extractValue\n      }\n    } = this.props;\n\n    this.getValue = this.getValue.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBulkChange = this.handleBulkChange.bind(this);\n    this.setPrinstineValue = this.setPrinstineValue.bind(this);\n    this.controlRef = this.controlRef.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    if (!name) {\n      return;\n    }\n\n    const model = rootStore.addStore({\n      id: guid(),\n      path: this.props.$path,\n      storeType: FormItemStore.name,\n      parentId: form.id,\n      name\n    }) as IFormItemStore;\n    this.model = model;\n    form.addFormItem(model);\n    model.config({\n      id,\n      type,\n      required,\n      unique,\n      value,\n      rules: validations,\n      messages: validationErrors,\n      multiple,\n      delimiter,\n      valueField,\n      labelField,\n      joinValues,\n      extractValue\n    });\n\n    if (this.model.unique && form.parentStore?.storeType === ComboStore.name) {\n      const combo = form.parentStore as IComboStore;\n      combo.bindUniuqueItem(model);\n    }\n\n    // 同步 value\n    this.setState({\n      value: this.value = model.value\n    });\n    this.reaction = reaction(\n      () => model.value,\n      value => this.setState({value: this.value = value})\n    );\n  }\n\n  componentDidMount() {\n    const {\n      store,\n      formStore: form,\n      control: {name, validate},\n      addHook\n    } = this.props;\n\n    // 提交前先把之前的 lazyEmit 执行一下。\n    this.hook3 = () => {\n      this.lazyEmitChange.flush();\n      this.lazyValidate.flush();\n    };\n    addHook(this.hook3, 'flush');\n\n    const formItem = this.model as IFormItemStore;\n    if (formItem && validate) {\n      let finalValidate = promisify(validate.bind(formItem));\n      this.hook2 = function () {\n        formItem.clearError('control:valdiate');\n        return finalValidate(form.data, formItem.value, formItem.name).then(\n          (ret: any) => {\n            if ((typeof ret === 'string' || Array.isArray(ret)) && ret) {\n              formItem.addError(ret, 'control:valdiate');\n            }\n          }\n        );\n      };\n      addHook(this.hook2);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: ControlProps) {\n    const props = this.props;\n    const form = nextProps.formStore;\n\n    // if (!nextProps.control.name) {\n    //   // 把 name 删了, 对 model 做清理\n    //   this.model && this.disposeModel();\n    //   this.reaction && this.reaction();\n    //   this.model = undefined;\n    //   return;\n    // } else if (nextProps.control.name !== props.control.name || !this.model) {\n    //   // 对 model 做清理\n    //   this.model && this.disposeModel();\n    //   this.reaction && this.reaction();\n\n    //   // name 是后面才有的，比如编辑模式下就会出现。\n    //   const model = (this.model = form.registryItem(nextProps.control.name, {\n    //     id: nextProps.control.id,\n    //     type: nextProps.control.type,\n    //     required: nextProps.control.required,\n    //     unique: nextProps.control.unique,\n    //     value: nextProps.control.value,\n    //     rules: nextProps.control.validations,\n    //     multiple: nextProps.control.multiple,\n    //     delimiter: nextProps.control.delimiter,\n    //     valueField: nextProps.control.valueField,\n    //     labelField: nextProps.control.labelField,\n    //     joinValues: nextProps.control.joinValues,\n    //     extractValue: nextProps.control.extractValue,\n    //     messages: nextProps.control.validationErrors\n    //   }));\n    //   // this.forceUpdate();\n    //   this.setState({\n    //     value: model.value\n    //   });\n\n    //   this.reaction = reaction(\n    //     () => model.value,\n    //     value => this.setState({value})\n    //   );\n    // }\n\n    if (\n      this.model &&\n      anyChanged(\n        [\n          'id',\n          'validations',\n          'validationErrors',\n          'value',\n          'required',\n          'unique',\n          'multiple',\n          'delimiter',\n          'valueField',\n          'labelField',\n          'joinValues',\n          'extractValue'\n        ],\n        props.control,\n        nextProps.control\n      )\n    ) {\n      this.model.config({\n        required: nextProps.control.required,\n        id: nextProps.control.id,\n        unique: nextProps.control.unique,\n        value: nextProps.control.value,\n        rules: nextProps.control.validations,\n        multiple: nextProps.control.multiple,\n        delimiter: nextProps.control.delimiter,\n        valueField: nextProps.control.valueField,\n        labelField: nextProps.control.labelField,\n        joinValues: nextProps.control.joinValues,\n        extractValue: nextProps.control.extractValue,\n        messages: nextProps.control.validationErrors\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.hook && this.props.removeHook(this.hook);\n    this.hook2 && this.props.removeHook(this.hook2);\n    this.hook3 && this.props.removeHook(this.hook3, 'flush');\n    this.lazyValidate.cancel();\n    // this.lazyEmitChange.flush();\n    this.lazyEmitChange.cancel();\n    this.reaction && this.reaction();\n    this.disposeModel();\n  }\n\n  disposeModel() {\n    const {formStore: form} = this.props;\n\n    if (\n      this.model &&\n      this.model.unique &&\n      form.parentStore &&\n      form.parentStore.storeType === ComboStore.name\n    ) {\n      const combo = form.parentStore as IComboStore;\n      combo.unBindUniuqueItem(this.model);\n    }\n\n    this.model && form.removeFormItem(this.model);\n  }\n\n  controlRef(control: any) {\n    const {addHook, removeHook, formStore: form} = this.props;\n\n    // 因为 control 有可能被 n 层 hoc 包裹。\n    while (control && control.getWrappedInstance) {\n      control = control.getWrappedInstance();\n    }\n\n    if (control && control.validate && this.model) {\n      const formItem = this.model as IFormItemStore;\n      let validate = promisify(control.validate.bind(control));\n      this.hook = function () {\n        formItem.clearError('component:valdiate');\n\n        return validate(form.data, formItem.value, formItem.name).then(ret => {\n          if ((typeof ret === 'string' || Array.isArray(ret)) && ret) {\n            formItem.setError(ret, 'component:valdiate');\n          }\n        });\n      };\n      addHook(this.hook);\n    } else if (!control && this.hook) {\n      removeHook(this.hook);\n      this.hook = undefined;\n    }\n\n    this.control = control;\n  }\n\n  validate() {\n    const {formStore: form} = this.props;\n\n    if (this.model) {\n      if (\n        this.model.unique &&\n        form.parentStore &&\n        form.parentStore.storeType === ComboStore.name\n      ) {\n        const combo = form.parentStore as IComboStore;\n        const group = combo.uniques.get(this.model.name) as IUniqueGroup;\n        group.items.forEach(item => item.validate());\n      } else {\n        this.model.validate(this.hook);\n        form\n          .getItemsByName(this.model.name)\n          .forEach(item => item !== this.model && item.validate());\n      }\n    }\n  }\n\n  handleChange(\n    value: any,\n    submitOnChange: boolean = this.props.control.submitOnChange,\n    changeImmediately: boolean = false\n  ) {\n    const {\n      formStore: form,\n      onChange,\n      control: {type, pipeOut, changeImmediately: conrolChangeImmediately},\n      formInited\n    } = this.props;\n\n    if (\n      !this.model ||\n      // todo 以后想办法不要強耦合类型。\n      ~['service', 'group', 'hbox', 'panel', 'grid'].indexOf(type)\n    ) {\n      onChange && onChange(...(arguments as any));\n      return;\n    }\n\n    if (pipeOut) {\n      const oldValue = this.model.value;\n      value = pipeOut(value, oldValue, form.data);\n    }\n\n    this.setState({\n      value: this.value = value\n    });\n    changeImmediately || conrolChangeImmediately || !formInited\n      ? this.emitChange(submitOnChange)\n      : this.lazyEmitChange(submitOnChange);\n  }\n\n  emitChange(submitOnChange: boolean = this.props.control.submitOnChange) {\n    const {\n      formStore: form,\n      onChange,\n      control: {validateOnChange, name, onChange: onFormItemChange}\n    } = this.props;\n\n    if (!this.model) {\n      return;\n    }\n    const value = this.value; // value 跟 this.state.value 更及时。\n    const oldValue = this.model.value;\n\n    if (oldValue === value) {\n      return;\n    }\n\n    this.model.changeValue(value);\n\n    if (\n      validateOnChange === true ||\n      (validateOnChange !== false &&\n        (form.submited || (isAlive(this.model) && this.model.validated)))\n    ) {\n      this.lazyValidate();\n    } else if (validateOnChange === false) {\n      this.model.reset();\n    }\n\n    onFormItemChange && onFormItemChange(value, oldValue, this.model, form);\n    onChange && onChange(value, name, submitOnChange === true);\n  }\n\n  handleBlur(e: any) {\n    const {\n      onBlur,\n      control: {validateOnBlur}\n    } = this.props;\n\n    if (validateOnBlur && this.model) {\n      this.validate();\n    }\n\n    onBlur && onBlur(e);\n  }\n\n  handleBulkChange(\n    values: any,\n    submitOnChange: boolean = this.props.control.submitOnChange\n  ) {\n    const {\n      formStore: form,\n      onChange,\n      control: {validateOnChange, type},\n      onBulkChange\n    } = this.props;\n\n    if (!isObject(values)) {\n      return;\n    } else if (\n      !this.model ||\n      // todo 以后想办法不要強耦合类型。\n      ~['service', 'group', 'hbox', 'panel', 'grid'].indexOf(type)\n    ) {\n      onBulkChange && onBulkChange(values);\n      return;\n    }\n\n    let lastKey: string = '';\n    let lastValue: any;\n\n    Object.keys(values).forEach(key => {\n      const value = values[key];\n      lastKey = key;\n      lastValue = value;\n    });\n\n    // is empty\n    if (!lastKey) {\n      return;\n    }\n\n    form.setValues(values);\n\n    if (validateOnChange !== false && (form.submited || this.model.validated)) {\n      this.lazyValidate();\n    }\n\n    onChange && onChange(lastValue, lastKey, submitOnChange === true);\n  }\n\n  setPrinstineValue(value: any) {\n    if (!this.model) {\n      return;\n    }\n\n    const {\n      formStore: form,\n      control: {pipeOut}\n    } = this.props;\n\n    if (pipeOut) {\n      const oldValue = this.model.value;\n      value = pipeOut(value, oldValue, form.data);\n    }\n\n    this.model.changeValue(value, true);\n  }\n\n  getValue() {\n    const {formStore: form, control} = this.props;\n    let value: any = this.state.value;\n\n    if (control.pipeIn) {\n      value = control.pipeIn(value, form.data);\n    }\n\n    return value;\n  }\n\n  // 兼容老版本用法，新版本直接用 onChange 就可以。\n  setValue(value: any, key?: string) {\n    const {\n      control: {name}\n    } = this.props;\n\n    if (!key || key === name) {\n      this.handleChange(value);\n    } else {\n      this.handleBulkChange({\n        [key]: value\n      });\n    }\n  }\n\n  render() {\n    const {\n      render,\n      control: {pipeIn, pipeOut, onChange, ...control},\n      formMode,\n      controlWidth,\n      type,\n      store,\n      data,\n      disabled,\n      onChange: superOnChange,\n      ...rest\n    } = this.props;\n\n    const model = this.model;\n    const value = this.getValue();\n\n    return render('', control, {\n      ...rest,\n      defaultSize: controlWidth,\n      disabled: disabled || control.disabled,\n      formItem: model,\n      formMode: control.mode || formMode,\n      ref: this.controlRef,\n      defaultValue: control.value,\n      data: store ? store.data : data,\n      value,\n      formItemValue: value, // 为了兼容老版本的自定义组件\n      onChange:\n        control.type === 'input-group' ? superOnChange : this.handleChange,\n      onBlur: this.handleBlur,\n      setValue: this.setValue,\n      getValue: this.getValue,\n      onBulkChange: this.handleBulkChange,\n      prinstine: model ? model.prinstine : undefined,\n      setPrinstineValue: this.setPrinstineValue\n    }) as JSX.Element;\n  }\n}\n\n@Renderer({\n  test: (path: string) =>\n    /(^|\\/)form(?:\\/.*)?\\/control$/i.test(path) &&\n    !/\\/control\\/control$/i.test(path),\n  name: 'control'\n})\n// @ts-ignore\n@withRootStore\nexport class FormControlRenderer extends FormControl {\n  static displayName = 'Control';\n  static contextType = ScopedContext;\n\n  controlRef(ref: any) {\n    const originRef = this.control;\n    super.controlRef(ref);\n    const scoped = this.context as IScopedContext;\n\n    if (!this.control) {\n      return;\n    }\n\n    if (ref) {\n      scoped.registerComponent(this.control);\n    } else {\n      scoped.unRegisterComponent(originRef);\n    }\n  }\n}\n"
    ]
}