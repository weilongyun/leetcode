{
    "version": 3,
    "file": "Service.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Service.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Renderer, RendererProps} from '../../factory';\nimport BasicService, {ServiceProps, ServiceSchema} from '../Service';\nimport {Schema, Payload} from '../../types';\nimport Scoped, {ScopedContext, IScopedContext} from '../../Scoped';\nimport {observer} from 'mobx-react';\nimport {ServiceStore, IServiceStore} from '../../store/service';\nimport {IFormStore} from '../../store/form';\nimport {isObject} from '../../utils/helper';\nimport {FormBaseControl, FormControlSchema} from './Item';\n\n/**\n * Sevice\n * 文档：https://baidu.gitee.io/amis/docs/components/form/sevice\n */\nexport interface ServiceControlSchema extends FormBaseControl, ServiceSchema {\n  type: 'service';\n\n  /**\n   * 表单项集合\n   */\n  controls?: Array<FormControlSchema>;\n\n  /**\n   * @deprecated 请用类型 tabs\n   */\n  tabs?: any;\n\n  /**\n   * @deprecated 请用类型 fieldSet\n   */\n  fieldSet?: any;\n}\n\n@Renderer({\n  test: /(^|\\/)form\\/(.*)\\/service$/,\n  weight: -100,\n  storeType: ServiceStore.name,\n  storeExtendsData: false,\n  name: 'service-control'\n})\nexport class ServiceRenderer extends BasicService {\n  static propsList: Array<string> = ['onChange'];\n  static contextType = ScopedContext;\n\n  componentWillMount() {\n    const scoped = this.context as IScopedContext;\n    scoped.registerComponent(this);\n  }\n\n  componentDidMount() {\n    const {formInited, addHook} = this.props;\n    this.mounted = true;\n\n    // form层级下的所有service应该都会走这里\n    // 但是传入props有可能是undefined，所以做个处理\n    if (formInited !== false) {\n      super.componentDidMount();\n    } else {\n      addHook && addHook(this.initFetch, 'init');\n    }\n  }\n\n  componentDidUpdate(prevProps: ServiceProps) {\n    const {formInited} = this.props;\n    if (formInited !== false) {\n      super.componentDidUpdate(prevProps);\n    }\n  }\n\n  componentWillUnmount() {\n    const scoped = this.context as IScopedContext;\n    scoped.unRegisterComponent(this);\n\n    const removeHook = this.props.removeHook;\n    removeHook && removeHook(this.initFetch, 'init');\n    super.componentWillUnmount();\n  }\n\n  afterDataFetch(payload: Payload) {\n    const formStore: IFormStore = this.props.formStore;\n    const onChange = this.props.onChange;\n\n    // 有可能有很多层 serivce，这里需要注意。\n    if (formStore && this.isFormMode()) {\n      const keys = isObject(payload?.data) ? Object.keys(payload.data) : [];\n\n      if (keys.length) {\n        formStore.setValues(payload.data);\n        onChange(payload.data[keys[0]], keys[0]);\n      }\n    }\n\n    return super.afterDataFetch(payload);\n  }\n\n  // schema 接口可能会返回数据，需要把它同步到表单上，否则会没用。\n  afterSchemaFetch(schema: any) {\n    const formStore: IFormStore = this.props.formStore;\n    const onChange = this.props.onChange;\n\n    // 有可能有很多层 serivce，这里需要注意。\n    if (formStore && this.isFormMode()) {\n      const keys = isObject(schema?.data) ? Object.keys(schema.data) : [];\n\n      if (keys.length) {\n        formStore.setValues(schema.data);\n        onChange(schema.data[keys[0]], keys[0]);\n      }\n    }\n\n    return super.afterSchemaFetch(schema);\n  }\n\n  isFormMode() {\n    const {\n      store,\n      body: schema,\n      controls,\n      tabs,\n      feildSet,\n      renderFormItems,\n      classnames: cx\n    } = this.props;\n\n    const finnalSchema = store.schema ||\n      schema || {\n        controls,\n        tabs,\n        feildSet\n      };\n\n    return (\n      finnalSchema &&\n      !finnalSchema.type &&\n      (finnalSchema.controls || finnalSchema.tabs || finnalSchema.feildSet) &&\n      renderFormItems\n    );\n  }\n\n  renderBody(): JSX.Element {\n    const {\n      render,\n      store,\n      body: schema,\n      controls,\n      tabs,\n      feildSet,\n      renderFormItems,\n      formMode,\n      classnames: cx\n    } = this.props;\n\n    if (this.isFormMode()) {\n      const finnalSchema = store.schema ||\n        schema || {\n          controls,\n          tabs,\n          feildSet\n        };\n\n      return (\n        <div\n          key={store.schemaKey || 'forms'}\n          className={cx(`Form--${formMode || 'normal'}`)}\n        >\n          {renderFormItems(finnalSchema, 'controls', {\n            store,\n            data: store.data,\n            render\n          })}\n        </div>\n      );\n    }\n\n    return super.renderBody();\n  }\n}\n"
    ]
}