{
    "version": 3,
    "file": "Select.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Select.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport cx from 'classnames';\nimport {\n  OptionsControl,\n  OptionsControlProps,\n  Option,\n  FormOptionsControl\n} from './Options';\nimport Select from '../../components/Select';\nimport find from 'lodash/find';\nimport debouce from 'lodash/debounce';\nimport {Api} from '../../types';\nimport {isEffectiveApi} from '../../utils/api';\nimport {isEmpty, createObject} from '../../utils/helper';\nimport {dataMapping} from '../../utils/tpl-builtin';\nimport {SchemaApi} from '../../Schema';\n\n/**\n * Select 下拉选择框。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/select\n */\nexport interface SelectControlSchema extends FormOptionsControl {\n  type: 'select' | 'multi-select';\n\n  /**\n   * 自动完成 API，当输入部分文字的时候，会将这些文字通过 ${term} 可以取到，发送给接口。\n   * 接口可以返回匹配到的选项，帮助用户输入。\n   */\n  autoComplete?: SchemaApi;\n\n  /**\n   * 是否可以搜索值\n   */\n  searchable?: boolean;\n}\n\nexport interface SelectProps extends OptionsControlProps {\n  autoComplete?: Api;\n  searchable?: boolean;\n  defaultOpen?: boolean;\n}\n\nexport default class SelectControl extends React.Component<SelectProps, any> {\n  static defaultProps: Partial<SelectProps> = {\n    clearable: false,\n    searchable: false\n  };\n\n  input: any;\n  unHook: Function;\n  constructor(props: SelectProps) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.loadRemote = debouce(this.loadRemote.bind(this), 250, {\n      trailing: true,\n      leading: false\n    });\n    this.inputRef = this.inputRef.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.unHook && this.unHook();\n  }\n\n  inputRef(ref: any) {\n    this.input = ref;\n  }\n\n  foucs() {\n    this.input && this.input.focus();\n  }\n\n  changeValue(value: Option | Array<Option> | void) {\n    const {\n      joinValues,\n      extractValue,\n      delimiter,\n      multiple,\n      type,\n      valueField,\n      onChange,\n      setOptions,\n      options,\n      autoFill,\n      onBulkChange\n    } = this.props;\n\n    let newValue: string | Option | Array<Option> | void = value;\n    let additonalOptions: Array<any> = [];\n\n    (Array.isArray(value) ? value : value ? [value] : []).forEach(\n      (option: any) => {\n        let resolved = find(\n          options,\n          (item: any) =>\n            item[valueField || 'value'] == option[valueField || 'value']\n        );\n        resolved || additonalOptions.push(option);\n      }\n    );\n\n    if (joinValues) {\n      if (multiple) {\n        newValue = Array.isArray(value)\n          ? (value\n              .map(item => item[valueField || 'value'])\n              .join(delimiter) as string)\n          : value\n          ? (value as Option)[valueField || 'value']\n          : '';\n      } else {\n        newValue = newValue ? (newValue as Option)[valueField || 'value'] : '';\n      }\n    } else if (extractValue) {\n      if (multiple) {\n        newValue = Array.isArray(value)\n          ? value.map(item => item[valueField || 'value'])\n          : value\n          ? [(value as Option)[valueField || 'value']]\n          : [''];\n      } else {\n        newValue = newValue ? (newValue as Option)[valueField || 'value'] : '';\n      }\n    }\n\n    // 不设置没法回显\n    additonalOptions.length && setOptions(options.concat(additonalOptions));\n\n    const sendTo =\n      !multiple &&\n      autoFill &&\n      !isEmpty(autoFill) &&\n      dataMapping(autoFill, value as Option);\n    sendTo && onBulkChange(sendTo);\n    onChange(newValue);\n  }\n\n  loadRemote(input: string) {\n    const {\n      autoComplete,\n      env,\n      data,\n      setOptions,\n      setLoading,\n      formInited,\n      addHook\n    } = this.props;\n\n    if (!env || !env.fetcher) {\n      throw new Error('fetcher is required');\n    }\n\n    if (!formInited) {\n      this.unHook && this.unHook();\n      return (this.unHook = addHook(this.loadRemote.bind(this, input), 'init'));\n    }\n\n    const ctx = createObject(data, {\n      term: input,\n      value: input\n    });\n\n    if (!isEffectiveApi(autoComplete, ctx)) {\n      return Promise.resolve({\n        options: []\n      });\n    }\n\n    setLoading(true);\n    return env\n      .fetcher(autoComplete, ctx)\n      .then(ret => {\n        let options = (ret.data && (ret.data as any).options) || ret.data || [];\n        let combinedOptions = this.mergeOptions(options);\n        setOptions(combinedOptions);\n\n        return {\n          options: combinedOptions\n        };\n      })\n      .finally(() => setLoading(false));\n  }\n\n  mergeOptions(options: Array<object>) {\n    const {selectedOptions} = this.props;\n    let combinedOptions = options.concat();\n\n    if (Array.isArray(selectedOptions) && selectedOptions.length) {\n      selectedOptions.forEach(option => {\n        if (\n          !find(combinedOptions, (item: Option) => item.value == option.value)\n        ) {\n          combinedOptions.push({\n            ...option,\n            hidden: true\n          });\n        }\n      });\n    }\n    return combinedOptions;\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  render() {\n    let {\n      autoComplete,\n      searchable,\n      options,\n      className,\n      loading,\n      value,\n      selectedOptions,\n      multi,\n      multiple,\n      placeholder,\n      id,\n      classPrefix,\n      classnames,\n      creatable,\n      inline,\n      noResultsText,\n      render,\n      ...rest\n    } = this.props;\n\n    if (noResultsText && /<\\w+/.test(noResultsText)) {\n      noResultsText = render('noResultText', noResultsText);\n    }\n\n    return (\n      <div className={cx(`${classPrefix}SelectControl`, className)}>\n        <Select\n          {...rest}\n          placeholder={placeholder}\n          multiple={multiple || multi}\n          ref={this.inputRef}\n          value={selectedOptions}\n          options={options}\n          loadOptions={\n            isEffectiveApi(autoComplete) ? this.loadRemote : undefined\n          }\n          creatable={creatable}\n          searchable={searchable || !!autoComplete}\n          onChange={this.changeValue}\n          loading={loading}\n          noResultsText={noResultsText}\n        />\n      </div>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'select'\n})\nexport class SelectControlRenderer extends SelectControl {}\n\n@OptionsControl({\n  type: 'multi-select'\n})\nexport class MultiSelectControlRenderer extends SelectControl {\n  static defaultProps = {\n    multiple: true\n  };\n}\n"
    ]
}