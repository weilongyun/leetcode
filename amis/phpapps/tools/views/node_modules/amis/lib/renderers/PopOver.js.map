{
    "version": 3,
    "file": "PopOver.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/PopOver.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file scoped.jsx.\n * @author fex\n */\n\nimport React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport {RendererProps} from '../factory';\nimport cx from 'classnames';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {RootCloseWrapper} from 'react-overlays';\nimport PopOver, {Offset} from '../components/PopOver';\nimport Overlay from '../components/Overlay';\nimport {Icon} from '../components/icons';\nimport {SchemaCollection} from '../Schema';\n\nexport interface SchemaPopOverObject {\n  /**\n   * 类名\n   */\n  className?: string;\n\n  /**\n   * 弹出模式\n   */\n  mode?: 'dialog' | 'drawer' | 'popOver';\n\n  /**\n   * 是弹窗形式的时候有用。\n   */\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n\n  /**\n   * 弹出位置\n   */\n  position?:\n    | 'center'\n    | 'left-top'\n    | 'right-top'\n    | 'left-bottom'\n    | 'right-bottom'\n    | 'fixed-center'\n    | 'fixed-left-top'\n    | 'fixed-right-top'\n    | 'fixed-left-bottom'\n    | 'fixed-right-bottom';\n\n  /**\n   * 偏移量\n   */\n  offset?: {\n    top?: number;\n    left?: number;\n  };\n\n  /**\n   * 标题\n   */\n  title?: string;\n\n  body?: SchemaCollection;\n}\n\nexport type SchemaPopOver = boolean | SchemaPopOverObject;\n\nexport interface PopOverProps extends RendererProps {\n  name?: string;\n  label?: string;\n  popOver: boolean | SchemaPopOverObject;\n  onPopOverOpened: (popover: any) => void;\n  onPopOverClosed: (popover: any) => void;\n}\n\nexport interface PopOverState {\n  isOpened: boolean;\n}\n\nexport const HocPopOver = (config: Partial<SchemaPopOverObject> = {}) => (\n  Component: React.ComponentType<any>\n): any => {\n  class PopOverComponent extends React.Component<PopOverProps, PopOverState> {\n    target: HTMLElement;\n    static ComposedComponent = Component;\n    constructor(props: PopOverProps) {\n      super(props);\n\n      this.openPopOver = this.openPopOver.bind(this);\n      this.closePopOver = this.closePopOver.bind(this);\n      this.targetRef = this.targetRef.bind(this);\n      // this.handleClickOutside = this.handleClickOutside.bind(this);\n      this.state = {\n        isOpened: false\n      };\n    }\n\n    targetRef(ref: any) {\n      this.target = ref;\n    }\n\n    openPopOver() {\n      const onPopOverOpened = this.props.onPopOverOpened;\n      this.setState(\n        {\n          isOpened: true\n        },\n        () => onPopOverOpened && onPopOverOpened(this.props.popOver)\n      );\n    }\n\n    closePopOver() {\n      if (!this.state.isOpened) {\n        return;\n      }\n\n      const onPopOverClosed = this.props.onPopOverClosed;\n      this.setState(\n        {\n          isOpened: false\n        },\n        () => onPopOverClosed && onPopOverClosed(this.props.popOver)\n      );\n    }\n\n    buildSchema() {\n      const {popOver, name, label, translate: __} = this.props;\n\n      let schema;\n\n      if (popOver === true) {\n        schema = {\n          type: 'panel',\n          body: '${name}'\n        };\n      } else if (\n        popOver &&\n        (popOver.mode === 'dialog' || popOver.mode === 'drawer')\n      ) {\n        schema = {\n          type: popOver.mode,\n          actions: [\n            {\n              label: __('关闭'),\n              type: 'button',\n              actionType: 'cancel'\n            }\n          ],\n          ...popOver\n        };\n      } else if (popOver) {\n        schema = {\n          type: 'panel',\n          ...popOver\n        };\n      }\n\n      return schema || 'error';\n    }\n\n    renderPopOver() {\n      let {\n        popOver,\n        render,\n        popOverContainer,\n        classnames: cx,\n        classPrefix: ns\n      } = this.props;\n      if (\n        popOver &&\n        ((popOver as SchemaPopOverObject).mode === 'dialog' ||\n          (popOver as SchemaPopOverObject).mode === 'drawer')\n      ) {\n        return render('popover-detail', this.buildSchema(), {\n          show: true,\n          onClose: this.closePopOver,\n          onConfirm: this.closePopOver\n        });\n      }\n\n      const content = render('popover-detail', this.buildSchema(), {\n        className: cx((popOver as SchemaPopOverObject).className)\n      }) as JSX.Element;\n\n      if (!popOverContainer) {\n        popOverContainer = () => findDOMNode(this);\n      }\n\n      const position =\n        (popOver && (popOver as SchemaPopOverObject).position) || '';\n      const isFixed = /^fixed\\-/.test(position);\n\n      return isFixed ? (\n        // @ts-ignore\n        <RootCloseWrapper\n          disabled={!this.state.isOpened}\n          onRootClose={this.closePopOver}\n        >\n          <div className={cx(`PopOverAble--fixed PopOverAble--${position}`)}>\n            {content}\n          </div>\n        </RootCloseWrapper>\n      ) : (\n        <Overlay\n          container={popOverContainer}\n          placement={position || 'center'}\n          target={() => this.target}\n          onHide={this.closePopOver}\n          rootClose\n          show\n        >\n          <PopOver\n            classPrefix={ns}\n            className={cx('PopOverAble-popover')}\n            offset={(popOver as SchemaPopOverObject).offset}\n          >\n            {content}\n          </PopOver>\n        </Overlay>\n      );\n    }\n\n    render() {\n      const {\n        popOver,\n        popOverEnabled,\n        className,\n        noHoc,\n        classnames: cx\n      } = this.props;\n\n      if (!popOver || popOverEnabled === false || noHoc) {\n        return <Component {...this.props} />;\n      }\n\n      return (\n        <Component\n          {...this.props}\n          className={cx(`Field--popOverAble`, className, {\n            in: this.state.isOpened\n          })}\n        >\n          <Component\n            {...this.props}\n            wrapperComponent={''}\n            noHoc\n            ref={this.targetRef}\n          />\n          <span\n            key=\"popover-btn\"\n            className={cx('Field-popOverBtn')}\n            onClick={this.openPopOver}\n          >\n            <Icon icon=\"zoom-in\" className=\"icon\" />\n          </span>\n          {this.state.isOpened ? this.renderPopOver() : null}\n        </Component>\n      );\n    }\n  }\n\n  hoistNonReactStatic(PopOverComponent, Component);\n\n  return PopOverComponent;\n};\n\nexport default HocPopOver;\n"
    ]
}