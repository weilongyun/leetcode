{
    "version": 3,
    "file": "Formula.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Formula.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport {evalJS, filter} from '../../utils/tpl';\nimport {isObjectShallowModified} from '../../utils/helper';\n\n/**\n * 公式功能控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/formula\n */\nexport interface FormulaControlSchema extends FormBaseControl {\n  /**\n   * 指定为公式功能控件。\n   */\n  type: 'formula';\n\n  /**\n   * 当某个按钮的目标指定为此值后，会触发一次公式应用。这个机制可以在 autoSet 为 false 时用来手动触发\n   */\n  id?: string;\n\n  /**\n   * 触发公式的作用条件，如 data.xxx == \\\"a\\\" 或者 ${xx}\n   */\n  condition?: string;\n\n  /**\n   * 是否自动应用\n   */\n  autoSet?: boolean;\n\n  /**\n   * 公式\n   */\n  formula?: string;\n\n  /**\n   * 是否初始应用\n   */\n  initSet?: boolean;\n\n  /**\n   * 字段名，公式结果将作用到此处指定的变量中去\n   */\n  name?: string;\n}\n\nexport interface FormulaProps\n  extends FormControlProps,\n    Omit<FormulaControlSchema, 'type'> {}\n\nexport default class FormulaControl extends React.Component<\n  FormControlProps,\n  any\n> {\n  componentDidMount() {\n    const {formula, data, setPrinstineValue, initSet, condition} = this.props;\n\n    if (!formula || initSet === false) {\n      return;\n    } else if (\n      condition &&\n      !~condition.indexOf('$') &&\n      !~condition.indexOf('<%') &&\n      !evalJS(condition, data as object)\n    ) {\n      return;\n    }\n\n    const result: any = evalJS(formula, data as object);\n    result !== null && setPrinstineValue(result);\n  }\n\n  componentWillReceiveProps(nextProps: FormControlProps) {\n    const {formula, data, onChange, autoSet, value, condition} = this.props;\n\n    if (\n      autoSet !== false &&\n      formula &&\n      nextProps.formula &&\n      isObjectShallowModified(data, nextProps.data, false) &&\n      value === nextProps.value\n    ) {\n      const nextResult: any = evalJS(\n        nextProps.formula,\n        nextProps.data as object\n      );\n\n      if (condition && nextProps.condition) {\n        if (!!~condition.indexOf('$') || !!~condition.indexOf('<%')) {\n          // 使用${xxx}，来监听某个变量的变化\n          if (\n            filter(condition, data) !==\n            filter(nextProps.condition, nextProps.data)\n          ) {\n            onChange(nextResult);\n          }\n        } else if (evalJS(nextProps.condition, nextProps.data as object)) {\n          // 使用 data.xxx == 'a' 表达式形式来判断\n          onChange(nextResult);\n        }\n      } else {\n        const prevResult: any = evalJS(formula, data as object);\n        if (JSON.stringify(prevResult) !== JSON.stringify(nextResult)) {\n          onChange(nextResult || '');\n        }\n      }\n    }\n  }\n\n  doAction() {\n    // 不细化具体是啥动作了，先重新计算，并把值运用上。\n\n    const {formula, data, onChange, autoSet, value} = this.props;\n\n    const result: any = evalJS(formula, data as object);\n    onChange(result);\n  }\n\n  render() {\n    return null;\n  }\n}\n\n@FormItem({\n  type: 'formula',\n  wrap: false,\n  strictMode: false,\n  sizeMutable: false\n})\nexport class FormulaControlRenderer extends FormulaControl {}\n"
    ]
}