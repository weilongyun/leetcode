{
    "version": 3,
    "file": "Checkbox.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Checkbox.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,+BAAmE;AACnE,kEAA4B;AAC5B,+EAAiD;AAgCjD;IAA6C,2CAG5C;IAHD;;IAoCA,CAAC;IA5BC,gCAAM,GAAN;QACQ,IAAA,KAUF,IAAI,CAAC,KAAK,EATZ,SAAS,eAAA,EACT,KAAK,WAAA,EACL,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,MAAM,YAAA,EACO,EAAE,iBACH,CAAC;QAEf,OAAO,CACL,uCAAK,SAAS,EAAE,oBAAE,CAAI,EAAE,oBAAiB,EAAE,SAAS,CAAC;YACnD,8BAAC,kBAAQ,IACP,MAAM,QACN,KAAK,EAAE,KAAK,IAAI,EAAE,EAClB,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,UAAC,KAAU,IAAK,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe,IAExC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAChC,CACP,CACP,CAAC;IACJ,CAAC;IA/BM,4BAAY,GAA2B;QAC5C,SAAS,EAAE,IAAI;QACf,UAAU,EAAE,KAAK;KAClB,CAAC;IA6BJ,sBAAC;CAAA,AApCD,CAA6C,eAAK,CAAC,SAAS,GAoC3D;kBApCoB,eAAe;AA0CpC;IAA6C,mDAAe;IAA5D;;IAA8D,CAAC;IAAlD,uBAAuB;QAJnC,eAAQ,CAAC;YACR,IAAI,EAAE,UAAU;YAChB,WAAW,EAAE,KAAK;SACnB,CAAC;OACW,uBAAuB,CAA2B;IAAD,8BAAC;CAAA,AAA/D,CAA6C,eAAe,GAAG;AAAlD,0DAAuB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport Checkbox from '../../components/Checkbox';\n\n/**\n * Checkbox 勾选框。\n * 文档：https://baidu.gitee.io/amis/docs/components/form/checkbox\n */\nexport interface CheckboxControlSchema extends FormBaseControl {\n  /**\n   * 指定为多行文本输入框\n   */\n  type: 'checkbox';\n\n  /**\n   * 勾选值\n   */\n  trueValue?: any;\n\n  /**\n   * 未勾选值\n   */\n  falseValue?: any;\n\n  /**\n   * 选项说明\n   */\n  option?: string;\n}\n\nexport interface CheckboxProps\n  extends FormControlProps,\n    CheckboxControlSchema {}\n\nexport default class CheckboxControl extends React.Component<\n  CheckboxProps,\n  any\n> {\n  static defaultProps: Partial<CheckboxProps> = {\n    trueValue: true,\n    falseValue: false\n  };\n  render() {\n    const {\n      className,\n      value,\n      trueValue,\n      falseValue,\n      option,\n      onChange,\n      disabled,\n      render,\n      classPrefix: ns\n    } = this.props;\n\n    return (\n      <div className={cx(`${ns}CheckboxControl`, className)}>\n        <Checkbox\n          inline\n          value={value || ''}\n          trueValue={trueValue}\n          falseValue={falseValue}\n          disabled={disabled}\n          onChange={(value: any) => onChange(value)}\n        >\n          {option ? render('option', option) : null}\n        </Checkbox>\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'checkbox',\n  sizeMutable: false\n})\nexport class CheckboxControlRenderer extends CheckboxControl {}\n"
    ]
}