{
    "version": 3,
    "file": "RichText.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/RichText.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport LazyComponent from '../../components/LazyComponent';\nimport {noop} from '../../utils/helper';\n\n/**\n * RichText\n * 文档：https://baidu.gitee.io/amis/docs/components/form/rich-text\n */\nexport interface RichTextControlSchema extends FormBaseControl {\n  type: 'rich-text';\n\n  vendor?: 'froala' | 'tinymce';\n\n  reciever?: string;\n  videoReciever?: string;\n\n  options?: any;\n}\n\nexport interface RichTextProps extends FormControlProps {\n  options?: any;\n  vendor?: 'froala' | 'tinymce';\n}\n\nfunction loadRichText(\n  type: 'tinymce' | 'froala' = 'froala'\n): () => Promise<React.ReactType> {\n  return () =>\n    new Promise(resolve =>\n      type === 'tinymce'\n        ? (require as any)(['../../components/Tinymce'], (component: any) =>\n            resolve(component.default)\n          )\n        : (require as any)(['../../components/RichText'], (component: any) =>\n            resolve(component.default)\n          )\n    );\n}\n\nexport default class RichTextControl extends React.Component<\n  RichTextProps,\n  any\n> {\n  static defaultProps: Partial<RichTextProps> = {\n    imageEditable: true,\n    reciever: '/api/upload/image',\n    videoReciever: '/api/upload/video',\n    placeholder: '请输入',\n    options: {\n      toolbarButtonsSM: [\n        'paragraphFormat',\n        'quote',\n        'color',\n        '|',\n        'bold',\n        'italic',\n        'underline',\n        'strikeThrough',\n        '|',\n        'formatOL',\n        'formatUL',\n        'align',\n        '|',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        '|',\n        'undo',\n        'redo',\n        'html'\n      ],\n      toolbarButtonsMD: [\n        'paragraphFormat',\n        'quote',\n        'color',\n        '|',\n        'bold',\n        'italic',\n        'underline',\n        'strikeThrough',\n        '|',\n        'formatOL',\n        'formatUL',\n        'align',\n        '|',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        '|',\n        'undo',\n        'redo',\n        'html'\n      ],\n      toolbarButtons: [\n        'paragraphFormat',\n        'quote',\n        'color',\n        '|',\n        'bold',\n        'italic',\n        'underline',\n        'strikeThrough',\n        '|',\n        'formatOL',\n        'formatUL',\n        'align',\n        '|',\n        'insertLink',\n        'insertImage',\n        'insertEmotion',\n        'insertTable',\n        '|',\n        'undo',\n        'redo',\n        'html'\n      ]\n    }\n  };\n\n  state = {\n    focused: false\n  };\n  config: any = null;\n  constructor(props: RichTextProps) {\n    super(props);\n\n    const finnalVendor =\n      props.vendor || (props.env.richTextToken ? 'froala' : 'tinymce');\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    if (finnalVendor === 'froala') {\n      this.config = {\n        imageAllowedTypes: ['jpeg', 'jpg', 'png', 'gif'],\n        imageDefaultAlign: 'left',\n        imageEditButtons: props.imageEditable\n          ? [\n              'imageReplace',\n              'imageAlign',\n              'imageRemove',\n              '|',\n              'imageLink',\n              'linkOpen',\n              'linkEdit',\n              'linkRemove',\n              '-',\n              'imageDisplay',\n              'imageStyle',\n              'imageAlt',\n              'imageSize'\n            ]\n          : [],\n        key: props.env.richTextToken,\n        ...props.options,\n        editorClass: props.editorClass,\n        placeholderText: props.placeholder,\n        imageUploadURL: props.reciever,\n        imageUploadParams: {\n          from: 'rich-text'\n        },\n        videoUploadURL: props.videoReciever,\n        videoUploadParams: {\n          from: 'rich-text'\n        },\n        events: {\n          ...(props.options && props.options.events),\n          'froalaEditor.focus': this.handleFocus,\n          'froalaEditor.blur': this.handleBlur\n        },\n        language:\n          !this.props.locale || this.props.locale === 'zh-cn' ? 'zh_cn' : ''\n      };\n\n      if (props.buttons) {\n        this.config.toolbarButtonsSM = props.buttons;\n        this.config.toolbarButtonsMD = props.buttons;\n        this.config.toolbarButtonsXS = props.buttons;\n        this.config.toolbarButtons = props.buttons;\n      }\n    } else {\n      const fetcher = props.env.fetcher;\n      this.config = {\n        ...props.options,\n        images_upload_url: props.reciever,\n        images_upload_handler: async (\n          blobInfo: any,\n          ok: (locaiton: string) => void,\n          fail: (reason: string) => void\n        ) => {\n          const formData = new FormData();\n          formData.append('file', blobInfo.blob(), blobInfo.filename());\n          try {\n            const response = await fetcher(props.reciever, formData, {\n              method: 'post'\n            });\n            if (response.ok) {\n              ok(\n                response.data?.link ||\n                  response.data?.url ||\n                  response.data?.value ||\n                  (response as any).link\n              );\n            }\n          } catch (e) {\n            fail(e);\n          }\n        }\n      };\n    }\n  }\n\n  handleFocus() {\n    this.setState({\n      focused: true\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      focused: false\n    });\n  }\n\n  handleChange(\n    value: any,\n    submitOnChange?: boolean,\n    changeImmediately?: boolean\n  ) {\n    const {onChange, disabled} = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    onChange?.(value, submitOnChange, changeImmediately);\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      value,\n      onChange,\n      disabled,\n      size,\n      vendor,\n      env,\n      locale,\n      translate\n    } = this.props;\n\n    const finnalVendor = vendor || (env.richTextToken ? 'froala' : 'tinymce');\n\n    return (\n      <div\n        className={cx(`${ns}RichTextControl`, className, {\n          'is-focused': this.state.focused,\n          'is-disabled': disabled\n        })}\n      >\n        <LazyComponent\n          getComponent={loadRichText(finnalVendor)}\n          model={value}\n          onModelChange={this.handleChange}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          config={this.config}\n          disabled={disabled}\n          locale={locale}\n          translate={translate}\n        />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'rich-text',\n  sizeMutable: false\n})\nexport class RichTextControlRenderer extends RichTextControl {}\n"
    ]
}