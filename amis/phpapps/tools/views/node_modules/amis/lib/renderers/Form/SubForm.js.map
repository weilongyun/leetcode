{
    "version": 3,
    "file": "SubForm.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/SubForm.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport {createObject} from '../../utils/helper';\nimport {Icon} from '../../components/icons';\nimport {SchemaClassName} from '../../Schema';\nimport {FormSchema} from '.';\n\n/**\n * SubForm 子表单\n * 文档：https://baidu.gitee.io/amis/docs/components/form/subform\n */\nexport interface SubFormControlSchema extends FormBaseControl {\n  /**\n   * 指定为 SubForm 子表单\n   */\n  type: 'form';\n\n  /**\n   * 占位符\n   */\n  placeholder?: string;\n\n  /**\n   * 是否多选\n   */\n  multiple?: boolean;\n\n  /**\n   * 最少个数\n   */\n  minLength?: number;\n\n  /**\n   * 最多个数\n   */\n  maxLength?: number;\n\n  /**\n   * 当值中存在这个字段，则按钮名称将使用此字段的值来展示。\n   */\n  labelField?: string;\n\n  /**\n   * 按钮默认名称\n   * @default 设置\n   */\n  btnLabel?: string;\n\n  /**\n   * 新增按钮 CSS 类名\n   */\n  addButtonClassName?: SchemaClassName;\n\n  /**\n   * 修改按钮 CSS 类名\n   */\n  editButtonClassName?: SchemaClassName;\n\n  /**\n   * 子表单详情\n   */\n  form?: Omit<FormSchema, 'type'>;\n}\n\nexport interface SubFormProps extends FormControlProps {\n  placeholder?: string;\n  multiple?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  labelField?: string;\n}\n\nexport interface SubFormState {\n  openedIndex: number;\n  optionIndex: number;\n}\n\nlet dom: HTMLElement;\nconst stripTag = (value: string) => {\n  if (!value) {\n    return value;\n  }\n  dom = dom || document.createElement('div');\n  dom.innerHTML = value;\n  return dom.innerText;\n};\n\nexport default class SubFormControl extends React.PureComponent<\n  SubFormProps,\n  SubFormState\n> {\n  static defaultProps: Partial<SubFormProps> = {\n    minLength: 0,\n    maxLength: 0,\n    multiple: false,\n    btnClassName: '',\n    addButtonClassName: '',\n    editButtonClassName: '',\n    labelField: 'label',\n    btnLabel: '设置'\n  };\n\n  state: SubFormState = {\n    openedIndex: -1,\n    optionIndex: -1\n  };\n  constructor(props: SubFormProps) {\n    super(props);\n\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.handleDialogConfirm = this.handleDialogConfirm.bind(this);\n  }\n\n  addItem() {\n    let value = this.props.value;\n\n    if (!Array.isArray(value)) {\n      value = [];\n    } else {\n      value = value.concat();\n    }\n\n    value.push({});\n    this.props.onChange(value);\n  }\n\n  removeItem(key: number, e: React.UIEvent<any>) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    let value = this.props.value;\n\n    if (!Array.isArray(value)) {\n      return;\n    }\n\n    value = value.concat();\n    value.splice(key, 1);\n    this.props.onChange(value);\n  }\n\n  open(index: number = 0) {\n    this.setState({\n      openedIndex: index\n    });\n  }\n\n  close() {\n    this.setState({\n      openedIndex: -1\n    });\n  }\n\n  handleDialogConfirm(values: Array<object>) {\n    const {multiple, onChange, value} = this.props;\n\n    if (multiple) {\n      let newValue = Array.isArray(value) ? value.concat() : [];\n      newValue[this.state.openedIndex] = {\n        ...newValue[this.state.openedIndex],\n        ...values[0]\n      };\n      onChange(newValue);\n    } else {\n      onChange({\n        ...value,\n        ...values[0]\n      });\n    }\n\n    this.close();\n  }\n\n  buildDialogSchema() {\n    let {form} = this.props;\n\n    const dialogProps = [\n      'title',\n      'actions',\n      'name',\n      'size',\n      'closeOnEsc',\n      'showCloseButton',\n      'bodyClassName',\n      'type'\n    ];\n\n    return {\n      ...pick(form, dialogProps),\n      type: 'dialog',\n      body: {\n        type: 'form',\n        ...omit(form, dialogProps)\n      }\n    };\n  }\n\n  renderMultipe() {\n    const {\n      classPrefix: ns,\n      addButtonClassName,\n      editButtonClassName,\n      disabled,\n      labelField,\n      value,\n      btnLabel,\n      render,\n      data,\n      translate: __\n    } = this.props;\n\n    return [\n      <div className={`${ns}SubForm-values`} key=\"values\">\n        {Array.isArray(value)\n          ? value.map((value: any, key) => (\n              <div\n                className={cx(\n                  `${ns}SubForm-value`,\n                  {\n                    'is-disabled': disabled\n                  },\n                  editButtonClassName\n                )}\n                key={key}\n              >\n                <span\n                  data-tooltip={__('删除')}\n                  data-position=\"bottom\"\n                  className={`${ns}Select-valueIcon`}\n                  onClick={this.removeItem.bind(this, key)}\n                >\n                  ×\n                </span>\n                <span\n                  onClick={this.open.bind(this, key)}\n                  className={`${ns}SubForm-valueLabel`}\n                  data-tooltip={__('编辑详情')}\n                  data-position=\"bottom\"\n                >\n                  {(value &&\n                    labelField &&\n                    value[labelField] &&\n                    stripTag(value[labelField])) ||\n                    render(\n                      'label',\n                      {\n                        type: 'tpl',\n                        tpl: __(btnLabel)\n                      },\n                      {\n                        data: createObject(data, value)\n                      }\n                    )}\n                </span>\n              </div>\n            ))\n          : null}\n      </div>,\n      <button\n        key=\"add\"\n        type=\"button\"\n        onClick={this.addItem}\n        className={cx(`${ns}Button ${ns}SubForm-addBtn`, addButtonClassName)}\n        disabled={disabled}\n        data-tooltip={__('新增一条数据')}\n      >\n        <Icon icon=\"plus\" className=\"icon\" />\n        <span>{__('新增')}</span>\n      </button>\n    ];\n  }\n\n  renderSingle() {\n    const {\n      classPrefix: ns,\n      btnClassName,\n      disabled,\n      value,\n      labelField,\n      btnLabel,\n      render,\n      data,\n      translate: __\n    } = this.props;\n\n    return (\n      <div className={`${ns}SubForm-values`} key=\"values\">\n        <div\n          className={cx(\n            `${ns}SubForm-value`,\n            {\n              'is-disabled': disabled\n            },\n            btnClassName\n          )}\n          onClick={this.open.bind(this, 0)}\n          data-tooltip={__('编辑详情')}\n          data-position=\"bottom\"\n        >\n          <span className={`${ns}SubForm-valueLabel`}>\n            {(value &&\n              labelField &&\n              value[labelField] &&\n              stripTag(value[labelField])) ||\n              render(\n                'label',\n                {\n                  type: 'tpl',\n                  tpl: __(btnLabel)\n                },\n                {\n                  data: createObject(data, value)\n                }\n              )}\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      multiple,\n      classPrefix: ns,\n      className,\n      render,\n      value,\n      data\n    } = this.props;\n    const openedIndex = this.state.openedIndex;\n\n    return (\n      <div className={cx(`${ns}SubFormControl`, className)}>\n        {multiple ? this.renderMultipe() : this.renderSingle()}\n        {render(`dalog/${openedIndex}`, this.buildDialogSchema(), {\n          show: openedIndex !== -1,\n          onClose: this.close,\n          onConfirm: this.handleDialogConfirm,\n          data: createObject(\n            data,\n            (multiple ? Array.isArray(value) && value[openedIndex] : value) ||\n              {}\n          )\n        })}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'form',\n  sizeMutable: false\n})\nexport class SubFormControlRenderer extends SubFormControl {}\n"
    ]
}