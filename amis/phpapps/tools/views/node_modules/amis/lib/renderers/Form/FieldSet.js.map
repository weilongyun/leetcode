{
    "version": 3,
    "file": "FieldSet.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/FieldSet.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAE1B,yCAAsD;AAEtD,iEAAqD;AA6CrD;IAA6C,2CAG5C;IACC,yBAAY,KAAoB;QAAhC,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC/C,CAAC;IAQD,oCAAU,GAAV;QACQ,IAAA,KAaF,IAAI,CAAC,KAAK,EAZZ,eAAe,qBAAA,EACf,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,KAAK,WAAA,EACO,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,aAAa,mBACD,CAAC;QAEf,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,MAAM,CAAC,MAAM,EAAE,IAAK,CAAgB,CAAC;SAC7C;QAED,IAAI,KAAK,GAAQ;YACf,KAAK,OAAA;YACL,IAAI,EAAE,KAAM,CAAC,IAAI;YACjB,MAAM,QAAA;SACP,CAAC;QACF,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QAC5B,OAAO,WAAW,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC;QACxE,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;QAE9C,OAAO,CACL,uCACE,SAAS,EAAE,EAAE,CACX,YAAS,KAAK,CAAC,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAE,EAC7C,aAAa,CACd,IAEA,eAAe,CACd,EAAC,QAAQ,UAAA,EAAC,EACT,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAC1C,KAAK,CACN,CACG,CACP,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN;QACE,IAAM,KAA6C,IAAI,CAAC,KAAK,EAAtD,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,IAAI,UAAA,EAAE,IAAI,UAAA,EAAK,IAAI,sBAAzC,yCAA0C,CAAa,CAAC;QAE9D,OAAO,CACL,8BAAC,kBAAQ,uBACH,IAAI,IACR,IAAI,EAAE,IAAK,EACX,SAAS,EAAE,SAAS,EACpB,QAAQ,EAAE,IAAI,CAAC,UAAU,EACzB,gBAAgB,EAAC,UAAU,EAC3B,gBAAgB,EAAE,IAAI,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,IACpE,CACH,CAAC;IACJ,CAAC;IAhEM,4BAAY,GAAG;QACpB,aAAa,EAAE,KAAK;QACpB,gBAAgB,EAAE,EAAE;QACpB,WAAW,EAAE,KAAK;KACnB,CAAC;IA6DJ,sBAAC;CAAA,AA1ED,CAA6C,eAAK,CAAC,SAAS,GA0E3D;kBA1EoB,eAAe;AAiFpC;IAAsC,4CAAe;IAArD;;IAAuD,CAAC;IAA3C,gBAAgB;QAL5B,kBAAQ,CAAC;YACR,IAAI,EAAE,wCAAwC;YAC9C,MAAM,EAAE,CAAC,GAAG;YACZ,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,gBAAgB,CAA2B;IAAD,uBAAC;CAAA,AAAxD,CAAsC,eAAe,GAAG;AAA3C,4CAAgB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormSchemaHorizontal} from '.';\nimport {Renderer, RendererProps} from '../../factory';\nimport {SchemaCollection, SchemaTpl} from '../../Schema';\nimport Collapse, {CollapseSchema} from '../Collapse';\nimport {FormBaseControl, FormControlSchema} from './Item';\n\n/**\n * FieldSet 表单项集合\n * 文档：https://baidu.gitee.io/amis/docs/components/form/fieldset\n */\nexport interface FieldSetControlSchema\n  extends Omit<FormBaseControl, 'size'>,\n    Omit<CollapseSchema, 'type' | 'body'> {\n  /**\n   * 指定为表单项集合\n   */\n  type: 'fieldset' | 'fieldSet';\n\n  /**\n   * 标题展示位置\n   */\n  titlePosition: 'top' | 'bottom';\n\n  /**\n   * 表单项集合\n   */\n  controls?: Array<FormControlSchema>;\n\n  /**\n   * 内容区域\n   */\n  body?: SchemaCollection;\n\n  /**\n   * 标题\n   */\n  title?: SchemaTpl;\n\n  /**\n   * 收起的标题\n   */\n  collapseTitle?: SchemaTpl;\n}\n\nexport interface FieldSetProps\n  extends RendererProps,\n    Omit<FieldSetControlSchema, 'type'> {}\n\nexport default class FieldSetControl extends React.Component<\n  FieldSetProps,\n  any\n> {\n  constructor(props: FieldSetProps) {\n    super(props);\n    this.renderBody = this.renderBody.bind(this);\n  }\n\n  static defaultProps = {\n    titlePosition: 'top',\n    headingClassName: '',\n    collapsable: false\n  };\n\n  renderBody(): JSX.Element {\n    const {\n      renderFormItems,\n      controls,\n      body,\n      collapsable,\n      horizontal,\n      render,\n      mode,\n      formMode,\n      $path,\n      classnames: cx,\n      store,\n      formClassName\n    } = this.props;\n\n    if (!controls) {\n      return render('body', body!) as JSX.Element;\n    }\n\n    let props: any = {\n      store,\n      data: store!.data,\n      render\n    };\n    mode && (props.mode = mode);\n    typeof collapsable !== 'undefined' && (props.collapsable = collapsable);\n    horizontal && (props.horizontal = horizontal);\n\n    return (\n      <div\n        className={cx(\n          `Form--${props.mode || formMode || 'normal'}`,\n          formClassName\n        )}\n      >\n        {renderFormItems(\n          {controls},\n          ($path as string).replace(/^.*form\\//, ''),\n          props\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {controls, className, mode, body, ...rest} = this.props;\n\n    return (\n      <Collapse\n        {...rest}\n        body={body!}\n        className={className}\n        children={this.renderBody}\n        wrapperComponent=\"fieldset\"\n        headingComponent={rest.titlePosition === 'bottom' ? 'div' : 'legend'}\n      />\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)form(?:.+)?\\/control\\/fieldSet$/i,\n  weight: -100,\n  name: 'fieldset'\n})\nexport class FieldSetRenderer extends FieldSetControl {}\n"
    ]
}