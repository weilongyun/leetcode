{
    "version": 3,
    "file": "Json.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Json.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport { Renderer, RendererProps } from '../factory';\n\nimport JSONTree from 'react-json-tree';\nimport { autobind } from '../utils/helper';\nimport { BaseSchema } from '../Schema';\nimport { resolveVariableAndFilter, isPureVariable } from '../utils/tpl-builtin';\n/**\n * JSON 数据展示控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/json\n */\nexport interface JsonSchema extends BaseSchema {\n  /**\n   * 指定为Json展示类型\n   */\n  type: 'json' | 'static-json';\n\n  /**\n   * 默认展开的级别\n   */\n  levelExpand?: number;\n\n  /**\n   * 是否隐藏根节点\n   */\n  hideRoot?: boolean;\n\n  /**\n   * 支持从数据链取值\n   */\n  source?: string;\n}\n\nexport interface JSONProps extends RendererProps, JsonSchema {\n  levelExpand: number;\n  className?: string;\n  placeholder?: string;\n  jsonTheme: string;\n  hideRoot?: boolean;\n  source?: string;\n}\n\nconst twilight = {\n  scheme: 'twilight',\n  author: 'david hart (http://hart-dev.com)',\n  base00: '#1e1e1e',\n  base01: '#323537',\n  base02: '#464b50',\n  base03: '#5f5a60',\n  base04: '#838184',\n  base05: '#a7a7a7',\n  base06: '#c3c3c3',\n  base07: '#ffffff',\n  base08: '#cf6a4c',\n  base09: '#cda869',\n  base0A: '#f9ee98',\n  base0B: '#8f9d6a',\n  base0C: '#afc4db',\n  base0D: '#7587a6',\n  base0E: '#9b859d',\n  base0F: '#9b703f',\n  tree: {\n    border: 0,\n    padding: '0 0.625em 0.425em',\n    marginTop: '-0.25em',\n    marginBottom: '0',\n    marginLeft: '0',\n    marginRight: 0,\n    listStyle: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none',\n    backgroundColor: 'rgba(255, 255, 255, 0.4)',\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n    width: '100%'\n  }\n};\n\nconst eighties = {\n  scheme: 'eighties',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#2d2d2d',\n  base01: '#393939',\n  base02: '#515151',\n  base03: '#747369',\n  base04: '#a09f93',\n  base05: '#d3d0c8',\n  base06: '#e8e6df',\n  base07: '#f2f0ec',\n  base08: '#f2777a',\n  base09: '#f99157',\n  base0A: '#ffcc66',\n  base0B: '#99cc99',\n  base0C: '#66cccc',\n  base0D: '#6699cc',\n  base0E: '#cc99cc',\n  base0F: '#d27b53',\n  tree: {\n    border: 0,\n    padding: '0 0.625em 0.425em',\n    marginTop: '-0.25em',\n    marginBottom: '0',\n    marginLeft: '0',\n    marginRight: 0,\n    listStyle: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none',\n    backgroundColor: '#2D2D2D',\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n    width: '100%'\n  }\n};\n\nconst themes: any = {\n  twilight,\n  eighties\n};\n\nexport class JSONField extends React.Component<JSONProps, object> {\n  static defaultProps: Partial<JSONProps> = {\n    placeholder: '-',\n    levelExpand: 1,\n    jsonTheme: 'twilight',\n    hideRoot: false,\n    source: ''\n  };\n\n  @autobind\n  valueRenderer(raw: any) {\n    const cx = this.props.classnames;\n    if (typeof raw === 'string' && /^\\\"?https?:\\/\\//.test(raw)) {\n      return (\n        <a\n          className={cx('JsonField-nodeValue')}\n          href={raw.replace(/^\\\"(.*)\\\"$/, '$1')}\n          target=\"_blank\"\n        >\n          {raw}\n        </a>\n      );\n    }\n    return <span className={cx('JsonField-nodeValue')}>{raw}</span>;\n  }\n\n  shouldExpandNode = (keyName: any, data: any, level: any) => {\n    const { levelExpand } = this.props;\n    return level < levelExpand;\n  };\n\n  render() {\n    const { className, value, jsonTheme, classnames: cx, hideRoot, source } = this.props;\n\n    let data = value;\n    if (source !== undefined && isPureVariable(source)) {\n      data = resolveVariableAndFilter(source, this.props.data, '| raw')\n    } else if (typeof value === 'string') {\n      try {\n        data = JSON.parse(value);\n      } catch (e) {\n        data = {\n          error: e.message\n        };\n      }\n    }\n\n    const theme = themes[jsonTheme] ? themes[jsonTheme] : themes['twilight'];\n\n    return (\n      <div className={cx('JsonField', className)}>\n        <JSONTree\n          data={data}\n          theme={theme}\n          shouldExpandNode={this.shouldExpandNode}\n          valueRenderer={this.valueRenderer}\n          hideRoot={hideRoot}\n        />\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)json$/,\n  name: 'json'\n})\nexport class JSONFieldRenderer extends JSONField { }\n"
    ]
}