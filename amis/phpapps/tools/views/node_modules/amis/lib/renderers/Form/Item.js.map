{
    "version": 3,
    "file": "Item.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Item.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,4FAA0D;AAE1D,6BAA8B;AAE9B,yCAMuB;AACvB,6CAA+E;AAC/E,yCAAoC;AAEpC,qCAAmC;AACnC,uCAAuC;AAqkBvC;IAAkC,wCAA8B;IAAhE;;IA6kBA,CAAC;IA1kBC,yCAAkB,GAAlB;QAAA,iBASC;QARQ,IAAU,KAAK,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QAErC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,eAAQ,CACtB,cAAM,OAAA,KAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,UAAY,EAA/D,CAA+D,EACrE,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CACzB,CAAC;SACH;IACH,CAAC;IAED,2CAAoB,GAApB;QACE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IAGD,kCAAW,GAAX,UAAY,CAAM;QACT,IAAU,KAAK,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QACrC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAGD,iCAAU,GAAV,UAAW,CAAM;QACR,IAAU,KAAK,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QACrC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGK,uCAAgB,GAAtB,UAAuB,MAAc,EAAE,IAAS;;;;gBAC7B,KAAK,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;gBACrC,IAAI,CAAC,KAAK,EAAE;oBACV,sBAAO;iBACR;gBAED,sBAAO,IAAI,OAAO,CAAC,UAAA,OAAO;wBACxB,OAAA,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,UAAC,MAAY,IAAK,OAAA,OAAO,CAAC,MAAM,CAAC,EAAf,CAAe,CAAC;oBAAjE,CAAiE,CAClE,EAAC;;;KACH;IAGD,0CAAmB,GAAnB,UAAoB,EAAoB;YAAnB,MAAM,QAAA;QAClB,IAAU,KAAK,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QACrC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAED,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAGD,wCAAiB,GAAjB;QACS,IAAU,KAAK,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QACrC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QACD,KAAK,CAAC,WAAW,EAAE,CAAC;IACtB,CAAC;IAED,oCAAa,GAAb;;QACE,IAAM,KAYF,IAAI,CAAC,KAAK,EAXZ,cAAc,oBAAA,EACJ,KAAK,cAAA,EACH,EAAE,gBAAA,EACd,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,aAAa,mBAAA,EACb,cAAc,oBAAA,EACd,WAAW,iBAAA,EACX,IAAI,UAAA,EACJ,WAAW,iBAAA,EACR,IAAI,sBAXH,yIAYL,CAAa,CAAC;QAEf,IAAI,aAAa,EAAE;YACjB,IAAM,WAAW,GAAG,IAAI,IAAI,WAAW,CAAC;YACxC,OAAO,aAAa,uCACf,IAAI,KACP,YAAY,EAAE,IAAI,CAAC,gBAAgB,EACnC,IAAI,MAAA,EACJ,UAAU,EAAE,EAAE,EACd,QAAQ,EAAE,KAAK,EACf,SAAS,EAAE,EAAE,CACX,cAAc;wBAEZ,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM;wBAC1B,UAAU,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK;;oBACjC,GAAC,8CAA4C,gBAAO,CAClD,WAAW,CACV,IACD,WAAW,KAAK,KAAK;wBACrB,OAAO,WAAW,KAAK,QAAQ;wBAC/B,CAAC,CAAC,WAAW;wBACb,WAAW,KAAK,MAAM;yBAE1B,cAAc,CACf,IACD,CAAC;SACJ;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,uCAAgB,GAAhB;;QACM,IAAA,KAqBA,IAAI,CAAC,KAAK,EApBZ,SAAS,eAAA,EACG,EAAE,gBAAA,EACd,WAAW,iBAAA,EACX,oBAAoB,0BAAA,EACpB,gBAAgB,sBAAA,EAChB,IAAI,UAAA,EACJ,KAAK,WAAA,EACL,cAAc,oBAAA,EACd,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,GAAG,SAAA,EACO,KAAK,cAAA,EACf,WAAW,iBAAA,EACX,iBAAiB,uBAAA,EACjB,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,YAAY,kBACA,CAAC;QAEf,iBAAiB;QACjB,IAAI,WAAW,KAAK,KAAK,EAAE;YACzB,KAAK,GAAG,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;SACtC;QAED,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC;QAClC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QACtE,IAAM,IAAI,GAAG,qBAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAM,KAAK,GAAG,qBAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAE7C,OAAO,CACL,oDACY,WAAW,EACrB,SAAS,EAAE,EAAE,CAAC,iCAAiC,EAAE,SAAS;gBACxD,GAAC,UAAU,IAAG,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK;gBACnC,GAAC,aAAa,IAAG,QAAQ;oBACzB;YAED,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CACjB,yCACE,SAAS,EAAE,EAAE,CACX,YAAY;oBAEV,GAAC,uBACC,OAAO,UAAU,CAAC,SAAS,KAAK,QAAQ;wBACtC,CAAC,CAAC,UAAU,CAAC,SAAS;wBACtB,CAAC,CAAC,QAAQ,CACZ,IAAG,UAAU,CAAC,SAAS;oBACzB,GAAC,sBAAoB,IAAM,IAAG,CAAC,UAAU,CAAC,SAAS;yBAErD,cAAc,CACf;gBAED;oBACG,YAAM,CAAC,KAAK,EAAE,IAAI,CAAC;oBACnB,QAAQ,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CACpC,wCAAM,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,QAAU,CAC3C,CAAC,CAAC,CAAC,IAAI;oBACP,WAAW;wBACV,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;4BACrB,IAAI,EAAE,QAAQ;4BACd,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,cAAc;4BACxC,OAAO,EAAE,WAAW;4BACpB,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC;4BACjC,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;gCAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;gCACvB,CAAC,CAAC,SAAS;yBAChB,CAAC;wBACJ,CAAC,CAAC,IAAI,CACH,CACD,CACT,CAAC,CAAC,CAAC,IAAI;YAER,uCACE,SAAS,EAAE,EAAE,CAAC,YAAY;oBACxB,4FAA4F;oBAC5F,GAAC,sBAAoB,KAAO,IAAG,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,GAAG,IAAI;wBAC7D;gBAED,IAAI,CAAC,aAAa,EAAE;gBAEpB,OAAO;oBACN,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;wBACzB,SAAS,EAAE,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;qBAChD,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,MAAM;oBACL,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;wBACf,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,cAAc;wBACnC,OAAO,EAAE,MAAM;wBACf,SAAS,EAAE,EAAE,CAAC,aAAa,CAAC;wBAC5B,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;4BAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;4BACvB,CAAC,CAAC,SAAS;qBAChB,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS;oBAC/B,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;wBACnB,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC;qBAC3B,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,KAAK;oBACN,CAAC,KAAK,CAAC,KAAK;oBACZ,YAAY,KAAK,KAAK;oBACtB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC5B,sCAAI,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAC/B,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,GAAW,EAAE,GAAW,IAAK,OAAA,CAC9C,sCAAI,GAAG,EAAE,GAAG,IAAG,GAAG,CAAM,CACzB,EAF+C,CAE/C,CAAC,CACC,CACN,CAAC,CAAC,CAAC,IAAI;gBAEP,iBAAiB,KAAK,KAAK,IAAI,WAAW;oBACzC,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,EAAE;wBACjC,SAAS,EAAE,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;qBACxD,CAAC;oBACJ,CAAC,CAAC,IAAI,CACJ,CACF,CACP,CAAC;IACJ,CAAC;IAED,mCAAY,GAAZ;;QACM,IAAA,KAsBA,IAAI,CAAC,KAAK,EArBZ,SAAS,eAAA,EACG,EAAE,gBAAA,EACd,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,KAAK,WAAA,EACL,cAAc,oBAAA,EACd,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,GAAG,SAAA,EACH,oBAAoB,0BAAA,EACpB,gBAAgB,sBAAA,EACN,KAAK,cAAA,EACf,WAAW,iBAAA,EACX,iBAAiB,uBAAA,EACjB,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,YAAY,kBACA,CAAC;QAEf,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC;QAElC,OAAO,CACL,oDACY,WAAW,EACrB,SAAS,EAAE,EAAE,CAAC,0BAAwB,QAAU,EAAE,SAAS;oBACzD,UAAU,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK;;gBACjC,GAAC,aAAa,IAAG,QAAQ;oBACzB;YAED,KAAK,IAAI,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC,CAChC,yCAAO,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;gBAChD;oBACG,YAAM,CAAC,KAAK,EAAE,IAAI,CAAC;oBACnB,QAAQ,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CACpC,wCAAM,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,QAAU,CAC3C,CAAC,CAAC,CAAC,IAAI;oBACP,WAAW;wBACV,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;4BACrB,IAAI,EAAE,QAAQ;4BACd,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,cAAc;4BACxC,OAAO,EAAE,WAAW;4BACpB,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC;4BACjC,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;gCAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;gCACvB,CAAC,CAAC,SAAS;yBAChB,CAAC;wBACJ,CAAC,CAAC,IAAI,CACH,CACD,CACT,CAAC,CAAC,CAAC,IAAI;YAEP,IAAI,CAAC,aAAa,EAAE;YAEpB,OAAO;gBACN,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;oBACzB,SAAS,EAAE,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;iBAChD,CAAC;gBACJ,CAAC,CAAC,IAAI;YAEP,MAAM;gBACL,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;oBACf,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,cAAc;oBACnC,SAAS,EAAE,EAAE,CAAC,aAAa,CAAC;oBAC5B,OAAO,EAAE,MAAM;oBACf,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS;iBACnE,CAAC;gBACJ,CAAC,CAAC,IAAI;YAEP,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS;gBAC/B,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;oBACnB,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC;iBAC3B,CAAC;gBACJ,CAAC,CAAC,IAAI;YAEP,KAAK;gBACN,CAAC,KAAK,CAAC,KAAK;gBACZ,YAAY,KAAK,KAAK;gBACtB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC5B,sCAAI,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAC/B,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,GAAW,EAAE,GAAW,IAAK,OAAA,CAC9C,sCAAI,GAAG,EAAE,GAAG,IAAG,GAAG,CAAM,CACzB,EAF+C,CAE/C,CAAC,CACC,CACN,CAAC,CAAC,CAAC,IAAI;YAEP,iBAAiB,KAAK,KAAK,IAAI,WAAW;gBACzC,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,EAAE;oBACjC,SAAS,EAAE,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;iBACxD,CAAC;gBACJ,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;IACJ,CAAC;IAED,mCAAY,GAAZ;;QACM,IAAA,KAqBA,IAAI,CAAC,KAAK,EApBZ,SAAS,eAAA,EACG,EAAE,gBAAA,EACd,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,KAAK,WAAA,EACL,cAAc,oBAAA,EACd,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,oBAAoB,0BAAA,EACpB,gBAAgB,sBAAA,EACN,KAAK,cAAA,EACf,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,GAAG,SAAA,EACH,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,iBAAiB,uBAAA,EACjB,IAAI,UAAA,EACJ,YAAY,kBACA,CAAC;QAEf,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC;QAElC,OAAO,CACL,oDACY,WAAW,EACrB,SAAS,EAAE,EAAE,CAAC,6BAA6B,EAAE,SAAS;oBACpD,UAAU,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK;;gBACjC,GAAC,aAAa,IAAG,QAAQ;oBACzB;YAED,KAAK,IAAI,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC,CAChC,yCAAO,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;gBAChD;oBACG,YAAM,CAAC,KAAK,EAAE,IAAI,CAAC;oBACnB,QAAQ,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CACpC,wCAAM,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,QAAU,CAC3C,CAAC,CAAC,CAAC,IAAI;oBACP,WAAW;wBACV,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;4BACrB,IAAI,EAAE,QAAQ;4BACd,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,cAAc;4BACxC,OAAO,EAAE,WAAW;4BACpB,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC;4BACjC,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;gCAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;gCACvB,CAAC,CAAC,SAAS;yBAChB,CAAC;wBACJ,CAAC,CAAC,IAAI,CACH,CACD,CACT,CAAC,CAAC,CAAC,IAAI;YAER,uCAAK,SAAS,EAAE,EAAE,CAAC,YAAY,CAAC;gBAC7B,IAAI,CAAC,aAAa,EAAE;gBAEpB,OAAO;oBACN,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;wBACzB,SAAS,EAAE,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;qBAChD,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,MAAM;oBACL,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;wBACf,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,cAAc;wBACnC,SAAS,EAAE,EAAE,CAAC,aAAa,CAAC;wBAC5B,OAAO,EAAE,MAAM;wBACf,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;4BAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;4BACvB,CAAC,CAAC,SAAS;qBAChB,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS;oBAC/B,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;wBACnB,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC;qBAC3B,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,KAAK;oBACN,CAAC,KAAK,CAAC,KAAK;oBACZ,YAAY,KAAK,KAAK;oBACtB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC5B,sCAAI,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAC/B,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,GAAW,EAAE,GAAW,IAAK,OAAA,CAC9C,sCAAI,GAAG,EAAE,GAAG,IAAG,GAAG,CAAM,CACzB,EAF+C,CAE/C,CAAC,CACC,CACN,CAAC,CAAC,CAAC,IAAI;gBAEP,iBAAiB,KAAK,KAAK,IAAI,WAAW;oBACzC,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,EAAE;wBACjC,SAAS,EAAE,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;qBACxD,CAAC;oBACJ,CAAC,CAAC,IAAI,CACJ,CACF,CACP,CAAC;IACJ,CAAC;IAED,gCAAS,GAAT;;QACM,IAAA,KAsBA,IAAI,CAAC,KAAK,EArBZ,SAAS,eAAA,EACG,EAAE,gBAAA,EACd,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,KAAK,WAAA,EACL,cAAc,oBAAA,EACd,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,GAAG,SAAA,EACH,oBAAoB,0BAAA,EACpB,gBAAgB,sBAAA,EACN,KAAK,cAAA,EACf,WAAW,iBAAA,EACX,iBAAiB,uBAAA,EACjB,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,YAAY,kBACA,CAAC;QAEf,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC;QAElC,OAAO,CACL,oDACY,WAAW,EACrB,SAAS,EAAE,EAAE,CAAC,0BAAwB,QAAU,EAAE,SAAS;oBACzD,UAAU,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK;;gBACjC,GAAC,aAAa,IAAG,QAAQ;oBACzB;YAEF,uCAAK,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC;gBAChC,KAAK,IAAI,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC,CAChC,yCAAO,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;oBAChD;wBACG,YAAM,CAAC,KAAK,EAAE,IAAI,CAAC;wBACnB,QAAQ,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CACpC,wCAAM,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,QAAU,CAC3C,CAAC,CAAC,CAAC,IAAI;wBACP,WAAW;4BACV,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;gCACrB,IAAI,EAAE,QAAQ;gCACd,IAAI,EAAE,WAAW,CAAC,IAAI,IAAI,cAAc;gCACxC,OAAO,EAAE,WAAW;gCACpB,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC;gCACjC,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;oCAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;oCACvB,CAAC,CAAC,SAAS;6BAChB,CAAC;4BACJ,CAAC,CAAC,IAAI,CACH,CACD,CACT,CAAC,CAAC,CAAC,IAAI;gBAEP,IAAI,CAAC,aAAa,EAAE;gBAEpB,OAAO;oBACN,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;wBACzB,SAAS,EAAE,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;qBAChD,CAAC;oBACJ,CAAC,CAAC,IAAI;gBAEP,MAAM;oBACL,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;wBACf,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,cAAc;wBACnC,SAAS,EAAE,EAAE,CAAC,aAAa,CAAC;wBAC5B,OAAO,EAAE,MAAM;wBACf,SAAS,EACP,GAAG,IAAI,GAAG,CAAC,iBAAiB;4BAC1B,CAAC,CAAC,GAAG,CAAC,iBAAiB;4BACvB,CAAC,CAAC,SAAS;qBAChB,CAAC;oBACJ,CAAC,CAAC,IAAI,CACJ;YAEL,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS;gBAC/B,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;oBACnB,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC;iBAC3B,CAAC;gBACJ,CAAC,CAAC,IAAI;YAEP,KAAK;gBACN,CAAC,KAAK,CAAC,KAAK;gBACZ,YAAY,KAAK,KAAK;gBACtB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC5B,sCAAI,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAC/B,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,GAAW,EAAE,GAAW,IAAK,OAAA,CAC9C,sCAAI,GAAG,EAAE,GAAG,IAAG,GAAG,CAAM,CACzB,EAF+C,CAE/C,CAAC,CACC,CACN,CAAC,CAAC,CAAC,IAAI;YAEP,WAAW,IAAI,iBAAiB,KAAK,KAAK;gBACzC,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,EAAE;oBACjC,SAAS,EAAE,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;iBACxD,CAAC;gBACJ,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN;QACQ,IAAA,KAAuD,IAAI,CAAC,KAAK,EAAhE,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,IAAI,UAAA,EAAE,MAAM,YAAA,EAAY,KAAK,cAAc,CAAC;QAExE,IAAI,IAAI,KAAK,KAAK,IAAI,SAAS,EAAE;YAC/B,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;SAC7B;QAED,OAAO,CACL;YACG,QAAQ,KAAK,QAAQ;gBACpB,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;gBACrB,CAAC,CAAC,QAAQ,KAAK,YAAY;oBAC3B,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBACzB,CAAC,CAAC,QAAQ,KAAK,KAAK;wBACpB,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE;wBAClB,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,KAAK;gBACJ,CAAC,CAAC,MAAM,CACJ,OAAO,qBAEL,IAAI,EAAE,QAAQ,IACX,KAAK,CAAC,YAAY,GAEvB;oBACE,IAAI,EAAE,KAAK,CAAC,UAAU;oBACtB,OAAO,EAAE,IAAI,CAAC,iBAAiB;oBAC/B,SAAS,EAAE,IAAI,CAAC,mBAAmB;oBACnC,IAAI,EAAE,KAAK,CAAC,UAAU;iBACvB,CACF;gBACH,CAAC,CAAC,IAAI,CACP,CACJ,CAAC;IACJ,CAAC;;IAzjBD;QADC,iBAAQ;;;;mDAKR;IAGD;QADC,iBAAQ;;;;kDAKR;IAGD;QADC,iBAAQ;;qEACsB,cAAM,oBAAN,cAAM;;wDASpC;IAGD;QADC,iBAAQ;;qEACqB,KAAK,oBAAL,KAAK;;2DAOlC;IAGD;QADC,iBAAQ;;;;yDAOR;IAghBH,mBAAC;CAAA,AA7kBD,CAAkC,eAAK,CAAC,SAAS,GA6kBhD;AA7kBY,oCAAY;AA+kBzB,2BAA2B;AAC3B,mBAAmB;AACN,QAAA,WAAW,GAAG;IACzB,cAAc;IACd,YAAY;IACZ,SAAS;IACT,oBAAoB;IACpB,eAAe;IACf,OAAO;IACP,cAAc;IACd,UAAU;IACV,aAAa;IACb,WAAW;IACX,WAAW;IACX,SAAS;IACT,cAAc;IACd,UAAU;IACV,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,UAAU;IACV,qBAAqB;IACrB,gBAAgB;IAChB,UAAU;IACV,UAAU;IACV,YAAY;IACZ,MAAM;IACN,QAAQ;IACR,gBAAgB;IAChB,OAAO;IACP,gBAAgB;IAChB,YAAY;IACZ,UAAU;IACV,OAAO;IACP,KAAK;IACL,SAAS;IACT,KAAK;IACL,SAAS;IACT,WAAW;IACX,UAAU;IACV,QAAQ;IACR,aAAa;IACb,WAAW;IACX,UAAU;IACV,QAAQ;IACR,MAAM;IACN,MAAM;IACN,YAAY;IACZ,qBAAqB;IACrB,MAAM;IACN,MAAM;IACN,WAAW;IACX,MAAM;IACN,OAAO;IACP,WAAW;CACZ,CAAC;AAEF,SAAgB,UAAU,CAAC,MAAyC;IAClE,OAAO,UAAC,OAA6B;;QACnC,IAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,YAAY,eAAK,CAAC,SAAS,CAAC,CAAC;QAE9D,oBAAoB;QACpB,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE;YAClD,IAAM,IAAE,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC3B,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG;gBAC3B,sDAAsD;gBACtD,IAAM,IAAI,GAAG;oBACX,KAAK,EAAE,IAAI;iBACZ,CAAC;gBAEF,OAAO,IAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACnC,CAAC,CAAC;SACH;aAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC1B,OAAO,CAAC,KAAK,CACX,qEAAqE,CACtE,CAAC;SACH;QAED,IAAI,MAAM,CAAC,SAAS,EAAE;YACpB,OAAO,GAAG,yBAAe,CAAC;gBACxB,SAAS,EAAE,MAAM,CAAC,SAAS;gBAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;aAChC,CAAC,CAAC,qBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACtB,OAAO,MAAM,CAAC,SAAS,CAAC;SACzB;QAED,OAAO,iCAAmB;gBACV,mCAAY;gBAyBxB,iBAAY,KAAoB;oBAAhC,YACE,kBAAM,KAAK,CAAC,SAEb;oBADC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;gBACrC,CAAC;gBAED,oCAAkB,GAAlB;oBACQ,IAAA,KAAiC,IAAI,CAAC,KAAK,EAA1C,WAAW,iBAAA,EAAY,KAAK,cAAc,CAAC;oBAElD,qBAAqB;oBACrB,IAAI,KAAK,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,EAAE;wBAC/C,KAAK,CAAC,MAAM,CAAC;4BACX,KAAK,EAAE,MAAM,CAAC,WAAW;yBAC1B,CAAC,CAAC;qBACJ;oBAED,iBAAM,kBAAkB,WAAE,CAAC;gBAC7B,CAAC;gBAED,uCAAqB,GAArB,UAAsB,SAA2B;oBAC/C,IAAI,SAAS,CAAC,UAAU,KAAK,KAAK,IAAI,MAAM,CAAC,UAAU,KAAK,KAAK,EAAE;wBACjE,OAAO,IAAI,CAAC;qBACb;oBAED,4BAA4B;oBAC5B,IAAI,mBAAU,CAAC,mBAAW,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;wBAClD,OAAO,IAAI,CAAC;qBACb;oBAED,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,oCAAkB,GAAlB;oBACE,OAAO,IAAI,CAAC,GAAG,CAAC;gBAClB,CAAC;gBAED,uBAAK,GAAL,UAAM,GAAQ;oBACZ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACjB,CAAC;gBAED,+BAAa,GAAb;;oBACE,IAAM,KASF,IAAI,CAAC,KAAK,EARZ,cAAc,oBAAA,EACJ,KAAK,cAAA,EACH,EAAE,gBAAA,EACd,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,WAAW,iBAAA,EACR,IAAI,sBARH,uFASL,CAAa,CAAC;oBAEf,IAAM,WAAW,GAAG,IAAI,IAAI,WAAW,CAAC;oBAExC,OAAO,CACL,8BAAC,OAAO,uBACF,IAAI,IACR,YAAY,EAAE,IAAI,CAAC,gBAAgB,EACnC,IAAI,EAAE,MAAM,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EACrD,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,MAAM,EAAE,IAAI,CAAC,UAAU,EACvB,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,EAAE,EACd,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EACnC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAC5C,QAAQ,EAAE,KAAK,EACf,SAAS,EAAE,EAAE,CACX,cAAc;gCAEZ,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM;gCAC1B,UAAU,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK;;4BACjC,GAAC,8CAA4C,gBAAO,CAClD,WAAW,CACV,IACD,MAAM,CAAC,WAAW,KAAK,KAAK;gCAC5B,OAAO,WAAW,KAAK,QAAQ;gCAC/B,CAAC,CAAC,WAAW;gCACb,WAAW,KAAK,MAAM;iCAE1B,cAAc,CACf,IACD,CACH,CAAC;gBACJ,CAAC;gBACH,cAAC;YAAD,CAAC,AA5GD,CAAc,YAAY;YACjB,eAAY,sBACjB,SAAS,EAAE,EAAE,EACb,WAAW,EAAE,MAAM,CAAC,WAAW,EAC/B,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,EAC3C,WAAW,EAAE,MAAM,CAAC,WAAW,EAC/B,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,YAAY,EAAE,MAAM,CAAC,YAAY,IAC9B,OAAO,CAAC,YAAY,CACvB;YACK,YAAS;gBACd,OAAO;gBACP,cAAc;gBACd,UAAU;gBACV,mBAAmB;gBACnB,UAAU;gBACV,YAAY;eACT,CAAE,OAAe,CAAC,SAAS,IAAI,EAAE,CAAC,CACrC;YAEK,cAAW,GAAG,cAAW,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAI,MAAM,CAAC,IAAI,MAAG,CAAC,CAAC,CAAC,EAAE,CAAG;YACjE,oBAAiB,GAAG,OAAQ;iBAwFrC,OAAO,CACR,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AA9ID,gCA8IC;AAED,SAAgB,gBAAgB,CAAC,MAAsB;IACrD,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAEnD,OAAO,0BAAgB,uCAClB,MAAM,KACT,IAAI,EAAE,MAAM,CAAC,IAAI,IAAO,MAAM,CAAC,IAAI,aAAU,EAC7C,MAAM,EAAE,OAAO,MAAM,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EACnE,IAAI,EACF,MAAM,CAAC,IAAI;YACX,IAAI,MAAM,CACR,uCAA2C,MAAM,CAAC,IAAI,MAAG,EACzD,GAAG,CACJ,EACH,SAAS,EAAE,OAAO,EAClB,UAAU,EAAE,IAAI,IAChB,CAAC;AACL,CAAC;AAhBD,4CAgBC;AAED,SAAgB,QAAQ,CAAC,MAA2B;IAClD,OAAO,UAAU,SAA+B;QAC9C,IAAM,QAAQ,GAAG,gBAAgB,uCAC5B,MAAM,KACT,SAAS,WAAA,IACT,CAAC;QAEH,OAAO,QAAQ,CAAC,SAAgB,CAAC;IACnC,CAAC,CAAC;AACJ,CAAC;AATD,4BASC;AAED,kBAAe,QAAQ,CAAC",
    "sourcesContent": [
        "import React from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport {IFormItemStore, IFormStore} from '../../store/form';\nimport {reaction} from 'mobx';\n\nimport {\n  RendererProps,\n  registerRenderer,\n  TestFunc,\n  RendererConfig,\n  HocStoreFactory\n} from '../../factory';\nimport {anyChanged, ucFirst, getWidthRate, autobind} from '../../utils/helper';\nimport {observer} from 'mobx-react';\nimport {FormHorizontal, FormSchema, FormSchemaHorizontal} from '.';\nimport {Schema} from '../../types';\nimport {filter} from '../../utils/tpl';\nimport {SchemaRemark} from '../Remark';\nimport {BaseSchema, SchemaClassName} from '../../Schema';\nimport {TextControlSchema} from './Text';\nimport {SelectControlSchema} from './Select';\nimport {TextareaControlSchema} from './Textarea';\nimport {ArrayControlSchema} from './Array';\nimport {ComboControlSchema} from './Combo';\nimport {ButtonControlSchema} from './Button';\nimport {ButtonGroupControlSchema} from './ButtonGroup';\nimport {ButtonToolbarControlSchema} from './ButtonToolbar';\nimport {ChainedSelectControlSchema} from './ChainedSelect';\nimport {CheckboxControlSchema} from './Checkbox';\nimport {CheckboxesControlSchema} from './Checkboxes';\nimport {CityControlSchema} from './City';\nimport {ColorControlSchema} from './Color';\nimport {ConditionBuilderControlSchema} from './ConditionBuilder';\nimport {ContainerControlSchema} from './Container';\nimport {\n  DateControlSchema,\n  DateTimeControlSchema,\n  MonthControlSchema,\n  TimeControlSchema\n} from './Date';\nimport {DateRangeControlSchema} from './DateRange';\nimport {DiffControlSchema} from './DiffEditor';\nimport {EditorControlSchema} from './Editor';\nimport {FieldSetControlSchema} from './FieldSet';\nimport {FileControlSchema} from './File';\nimport {FormulaControlSchema} from './Formula';\nimport {GridControlSchema} from './Grid';\nimport {GroupControlSchema} from './Group';\nimport {HBoxControlSchema} from './HBox';\nimport {HiddenControlSchema} from './Hidden';\nimport {IconPickerControlSchema} from './IconPicker';\nimport {ImageControlSchema} from './Image';\nimport {InputGroupControlSchema} from './InputGroup';\nimport {ListControlSchema} from './List';\nimport {LocationControlSchema} from './Location';\nimport {MatrixControlSchema} from './Matrix';\nimport {NestedSelectControlSchema} from './NestedSelect';\nimport {NumberControlSchema} from './Number';\nimport {PanelControlSchema} from './Panel';\nimport {PickerControlSchema} from './Picker';\nimport {RadiosControlSchema} from './Radios';\nimport {RangeControlSchema} from './Range';\nimport {RatingControlSchema} from './Rating';\nimport {RepeatControlSchema} from './Repeat';\nimport {RichTextControlSchema} from './RichText';\nimport {ServiceControlSchema} from './Service';\nimport {StaticControlRestSchema, StaticControlSchema} from './Static';\nimport {SubFormControlSchema} from './SubForm';\nimport {SwitchControlSchema} from './Switch';\nimport {TableControlSchema} from './Table';\nimport {TabsControlSchema} from './Tabs';\nimport {TabsTransferControlSchema} from './TabsTransfer';\nimport {TagControlSchema} from './Tag';\nimport {TransferControlSchema} from './Transfer';\nimport {TreeControlSchema} from './Tree';\nimport {TreeSelectControlSchema} from './TreeSelect';\nimport {PlainSchema} from '../Plain';\nimport {TplSchema} from '../Tpl';\nimport {DividerSchema} from '../Divider';\n\nexport type FormControlType =\n  | 'array'\n  | 'button'\n  | 'submit'\n  | 'reset'\n  | 'button-group'\n  | 'button-toolbar'\n  | 'chained-select'\n  | 'checkbox'\n  | 'checkboxes'\n  | 'city'\n  | 'color'\n  | 'combo'\n  | 'condition-builder'\n  | 'container'\n  | 'date'\n  | 'datetime'\n  | 'time'\n  | 'month'\n  | 'date-range'\n  | 'diff'\n\n  // editor 系列\n  | 'editor'\n  | 'bat-editor'\n  | 'c-editor'\n  | 'coffeescript-editor'\n  | 'cpp-editor'\n  | 'csharp-editor'\n  | 'css-editor'\n  | 'dockerfile-editor'\n  | 'fsharp-editor'\n  | 'go-editor'\n  | 'handlebars-editor'\n  | 'html-editor'\n  | 'ini-editor'\n  | 'java-editor'\n  | 'javascript-editor'\n  | 'json-editor'\n  | 'less-editor'\n  | 'lua-editor'\n  | 'markdown-editor'\n  | 'msdax-editor'\n  | 'objective-c-editor'\n  | 'php-editor'\n  | 'plaintext-editor'\n  | 'postiats-editor'\n  | 'powershell-editor'\n  | 'pug-editor'\n  | 'python-editor'\n  | 'r-editor'\n  | 'razor-editor'\n  | 'ruby-editor'\n  | 'sb-editor'\n  | 'scss-editor'\n  | 'sol-editor'\n  | 'sql-editor'\n  | 'swift-editor'\n  | 'typescript-editor'\n  | 'vb-editor'\n  | 'xml-editor'\n  | 'yaml-editor'\n\n  //\n  | 'fieldset'\n  | 'fieldSet'\n  | 'file'\n  | 'formula'\n  | 'grid'\n  | 'group'\n  | 'hbox'\n  | 'hidden'\n  | 'icon-picker'\n  | 'image'\n  | 'input-group'\n  | 'list'\n  | 'location'\n  | 'matrix'\n  | 'nested-select'\n  | 'number'\n  | 'panel'\n  | 'picker'\n  | 'radios'\n  | 'range'\n  | 'rating'\n  | 'repeat'\n  | 'rich-text'\n  | 'select'\n  | 'service'\n  | 'static'\n  | 'form'\n  | 'switch'\n  | 'table'\n  | 'tabs'\n  | 'tabs-transfer'\n  | 'tag'\n  | 'text'\n  | 'password'\n  | 'email'\n  | 'url'\n  | 'multi-select'\n  | 'textarea'\n  | 'transfer'\n  | 'tree'\n  | 'tree-select'\n\n  // 非表单项但是也可以放进来\n  | 'divider'\n  | 'html'\n  | 'plain'\n  | 'tpl';\n\nexport type FormControlSchema =\n  | ArrayControlSchema\n  | ButtonControlSchema\n  | ButtonGroupControlSchema\n  | ButtonToolbarControlSchema\n  | ChainedSelectControlSchema\n  | CheckboxControlSchema\n  | CheckboxesControlSchema\n  | CityControlSchema\n  | ColorControlSchema\n  | ComboControlSchema\n  | ConditionBuilderControlSchema\n  | ContainerControlSchema\n  | DateControlSchema\n  | DateTimeControlSchema\n  | TimeControlSchema\n  | MonthControlSchema\n  | DateRangeControlSchema\n  | DiffControlSchema\n  | EditorControlSchema\n  | FieldSetControlSchema\n  | FileControlSchema\n  | FormulaControlSchema\n  | GridControlSchema\n  | GroupControlSchema\n  | HBoxControlSchema\n  | HiddenControlSchema\n  | IconPickerControlSchema\n  | ImageControlSchema\n  | InputGroupControlSchema\n  | ListControlSchema\n  | LocationControlSchema\n  | MatrixControlSchema\n  | NestedSelectControlSchema\n  | NumberControlSchema\n  | PanelControlSchema\n  | PickerControlSchema\n  | RadiosControlSchema\n  | RangeControlSchema\n  | RatingControlSchema\n  | RichTextControlSchema\n  | RepeatControlSchema\n  | SelectControlSchema\n  | ServiceControlSchema\n  | SubFormControlSchema\n  | SwitchControlSchema\n  | StaticControlSchema\n  | StaticControlRestSchema\n  | TableControlSchema\n  | TabsControlSchema\n  | TabsTransferControlSchema\n  | TagControlSchema\n  | TextControlSchema\n  | TextareaControlSchema\n  | TransferControlSchema\n  | TreeControlSchema\n  | TreeSelectControlSchema\n\n  // 非表单项，但是也可以放进来。\n  | DividerSchema;\n\nexport type FormControlSchemaAlias = FormControlSchema;\n\nexport interface FormBaseControl extends Omit<BaseSchema, 'type'> {\n  /**\n   * 表单项类型\n   */\n  type: FormControlType;\n\n  /**\n   * 表单项大小\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'full';\n\n  /**\n   * 描述标题\n   */\n  label?: string | false;\n\n  /**\n   * 配置 label className\n   */\n  labelClassName?: SchemaClassName;\n\n  /**\n   * 字段名，表单提交时的 key，支持多层级，用.连接，如： a.b.c\n   */\n  name?: string;\n\n  /**\n   * 显示一个小图标, 鼠标放上去的时候显示提示内容\n   */\n  remark?: SchemaRemark;\n\n  /**\n   * 显示一个小图标, 鼠标放上去的时候显示提示内容, 这个小图标跟 label 在一起\n   */\n  labelRemark?: SchemaRemark;\n\n  /**\n   * 输入提示，聚焦的时候显示\n   */\n  hint?: string;\n\n  /**\n   * 当修改完的时候是否提交表单。\n   */\n  submitOnChange?: boolean;\n\n  /**\n   * 是否只读\n   */\n  readOnly?: boolean;\n\n  /**\n   * 不设置时，当表单提交过后表单项每次修改都会触发重新验证，\n   * 如果设置了，则由此配置项来决定要不要每次修改都触发验证。\n   */\n  validateOnChange?: boolean;\n\n  /**\n   * 描述内容，支持 Html 片段。\n   */\n  description?: string;\n\n  /**\n   * @deprecated 用 description 代替\n   */\n  desc?: string;\n\n  /**\n   * 配置描述上的 className\n   */\n  descriptionClassName?: SchemaClassName;\n\n  /**\n   * 配置当前表单项展示模式\n   */\n  mode?: 'normal' | 'inline' | 'horizontal';\n\n  /**\n   * 当配置为水平布局的时候，用来配置具体的左右分配。\n   */\n  horizontal?: FormSchemaHorizontal;\n\n  /**\n   * 表单 control 是否为 inline 模式。\n   */\n  inline?: boolean;\n\n  /**\n   * 配置 input className\n   */\n  inputClassName?: SchemaClassName;\n\n  /**\n   * 占位符\n   */\n  placeholder?: string;\n\n  /**\n   * 是否为必填\n   */\n  required?: boolean;\n\n  /**\n   * 验证失败的提示信息\n   */\n  validationErrors?: {\n    isAlpha?: string;\n    isAlphanumeric?: string;\n    isEmail?: string;\n    isFloat?: string;\n    isInt?: string;\n    isJson?: string;\n    isLength?: string;\n    isNumeric?: string;\n    isRequired?: string;\n    isUrl?: string;\n    matchRegexp?: string;\n    matchRegexp2?: string;\n    matchRegexp3?: string;\n    matchRegexp4?: string;\n    matchRegexp5?: string;\n    maxLength?: string;\n    maximum?: string;\n    minLength?: string;\n    minimum?: string;\n\n    [propName: string]: any;\n  };\n\n  validations?:\n    | string\n    | {\n        /**\n         * 是否是字母\n         */\n        isAlpha?: boolean;\n\n        /**\n         * 是否为字母数字\n         */\n        isAlphanumeric?: boolean;\n\n        /**\n         * 是否为邮箱地址\n         */\n        isEmail?: boolean;\n\n        /**\n         * 是否为浮点型\n         */\n        isFloat?: boolean;\n\n        /**\n         * 是否为整型\n         */\n        isInt?: boolean;\n\n        /**\n         * 是否为 json\n         */\n        isJson?: boolean;\n\n        /**\n         * 长度等于指定值\n         */\n        isLength?: number;\n\n        /**\n         * 是否为数字\n         */\n        isNumeric?: boolean;\n\n        /**\n         * 是否为必填\n         */\n        isRequired?: boolean;\n\n        /**\n         * 是否为 URL 地址\n         */\n        isUrl?: boolean;\n\n        /**\n         * 内容命中指定正则\n         */\n        matchRegexp?: string;\n        /**\n         * 内容命中指定正则\n         */\n        matchRegexp1?: string;\n        /**\n         * 内容命中指定正则\n         */\n        matchRegexp2?: string;\n        /**\n         * 内容命中指定正则\n         */\n        matchRegexp3?: string;\n        /**\n         * 内容命中指定正则\n         */\n        matchRegexp4?: string;\n        /**\n         * 内容命中指定正则\n         */\n        matchRegexp5?: string;\n\n        /**\n         * 最大长度为指定值\n         */\n        maxLength?: number;\n\n        /**\n         * 最大值为指定值\n         */\n        maximum?: number;\n\n        /**\n         * 最小长度为指定值\n         */\n        minLength?: number;\n\n        /**\n         * 最小值为指定值\n         */\n        minimum?: number;\n\n        [propName: string]: any;\n      };\n\n  /**\n   * 默认值，切记只能是静态值，不支持取变量，跟数据关联是通过设置 name 属性来实现的。\n   */\n  value?: any;\n}\n\nexport interface FormItemBasicConfig extends Partial<RendererConfig> {\n  type?: string;\n  wrap?: boolean;\n  renderLabel?: boolean;\n  renderDescription?: boolean;\n  test?: RegExp | TestFunc;\n  storeType?: string;\n  validations?: string;\n  strictMode?: boolean;\n  descriptionClassName?: string;\n  storeExtendsData?: boolean;\n  sizeMutable?: boolean;\n  weight?: number;\n  extendsData?: boolean;\n  showErrorMsg?: boolean;\n\n  // 兼容老用法，新用法直接在 Component 里面定义 validate 方法即可。\n  validate?: (values: any, value: any) => string | boolean;\n}\n\n// 自己接收到属性。\nexport interface FormItemProps extends RendererProps {\n  name?: string;\n  formStore?: IFormStore;\n  formItem?: IFormItemStore;\n  formInited: boolean;\n  formMode: 'normal' | 'horizontal' | 'inline' | 'row' | 'default';\n  formHorizontal: FormHorizontal;\n  defaultSize?: 'xs' | 'sm' | 'md' | 'lg' | 'full';\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'full';\n  disabled?: boolean;\n  btnDisabled: boolean;\n  defaultValue: any;\n  value?: any;\n  prinstine: any;\n  setPrinstineValue: (value: any) => void;\n  onChange: (\n    value: any,\n    submitOnChange?: boolean,\n    changeImmediately?: boolean\n  ) => void;\n  onBulkChange: (\n    values: {[propName: string]: any},\n    submitOnChange?: boolean\n  ) => void;\n  addHook: (fn: Function, mode?: 'validate' | 'init' | 'flush') => () => void;\n  removeHook: (fn: Function, mode?: 'validate' | 'init' | 'flush') => void;\n  renderFormItems: (\n    schema: Partial<FormSchema>,\n    region: string,\n    props: any\n  ) => JSX.Element;\n  onFocus: (e: any) => void;\n  onBlur: (e: any) => void;\n\n  formItemValue: any; // 不建议使用 为了兼容 v1\n  getValue: () => any; // 不建议使用 为了兼容 v1\n  setValue: (value: any, key: string) => void; // 不建议使用 为了兼容 v1\n\n  inputClassName?: string;\n  renderControl?: (props: FormControlProps) => JSX.Element;\n\n  inputOnly?: boolean;\n  renderLabel?: boolean;\n  renderDescription?: boolean;\n  sizeMutable?: boolean;\n  wrap?: boolean;\n  hint?: string;\n  description?: string;\n  descriptionClassName?: string;\n  // error 详情\n  errors?: {\n    [propName: string]: string;\n  };\n  // error string\n  error?: string;\n  showErrorMsg?: boolean;\n}\n\n// 下发下去的属性\nexport type FormControlProps = RendererProps & {\n  onOpenDialog: (schema: Schema, data: any) => Promise<any>;\n} & Exclude<\n    FormItemProps,\n    | 'inputClassName'\n    | 'renderControl'\n    | 'defaultSize'\n    | 'size'\n    | 'error'\n    | 'errors'\n    | 'hint'\n    | 'descriptionClassName'\n    | 'inputOnly'\n    | 'renderLabel'\n    | 'renderDescription'\n    | 'sizeMutable'\n    | 'wrap'\n  >;\n\nexport type FormItemComponent = React.ComponentType<FormItemProps>;\nexport type FormControlComponent = React.ComponentType<FormControlProps>;\n\nexport interface FormItemConfig extends FormItemBasicConfig {\n  component: FormControlComponent;\n}\n\nexport class FormItemWrap extends React.Component<FormItemProps> {\n  reaction: any;\n\n  componentWillMount() {\n    const {formItem: model} = this.props;\n\n    if (model) {\n      this.reaction = reaction(\n        () => `${model.errors.join('')}${model.isFocused}${model.dialogOpen}`,\n        () => this.forceUpdate()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.reaction && this.reaction();\n  }\n\n  @autobind\n  handleFocus(e: any) {\n    const {formItem: model} = this.props;\n    model && model.focus();\n    this.props.onFocus && this.props.onFocus(e);\n  }\n\n  @autobind\n  handleBlur(e: any) {\n    const {formItem: model} = this.props;\n    model && model.blur();\n    this.props.onBlur && this.props.onBlur(e);\n  }\n\n  @autobind\n  async handleOpenDialog(schema: Schema, data: any) {\n    const {formItem: model} = this.props;\n    if (!model) {\n      return;\n    }\n\n    return new Promise(resolve =>\n      model.openDialog(schema, data, (result?: any) => resolve(result))\n    );\n  }\n\n  @autobind\n  handleDialogConfirm([values]: Array<any>) {\n    const {formItem: model} = this.props;\n    if (!model) {\n      return;\n    }\n\n    model.closeDialog(values);\n  }\n\n  @autobind\n  handleDialogClose() {\n    const {formItem: model} = this.props;\n    if (!model) {\n      return;\n    }\n    model.closeDialog();\n  }\n\n  renderControl() {\n    const {\n      inputClassName,\n      formItem: model,\n      classnames: cx,\n      children,\n      type,\n      renderControl,\n      formItemConfig,\n      sizeMutable,\n      size,\n      defaultSize,\n      ...rest\n    } = this.props;\n\n    if (renderControl) {\n      const controlSize = size || defaultSize;\n      return renderControl({\n        ...rest,\n        onOpenDialog: this.handleOpenDialog,\n        type,\n        classnames: cx,\n        formItem: model,\n        className: cx(\n          `Form-control`,\n          {\n            'is-inline': !!rest.inline,\n            'is-error': model && !model.valid,\n            [`Form-control--withSize Form-control--size${ucFirst(\n              controlSize\n            )}`]:\n              sizeMutable !== false &&\n              typeof controlSize === 'string' &&\n              !!controlSize &&\n              controlSize !== 'full'\n          },\n          inputClassName\n        )\n      });\n    }\n\n    return null;\n  }\n\n  renderHorizontal() {\n    let {\n      className,\n      classnames: cx,\n      description,\n      descriptionClassName,\n      captionClassName,\n      desc,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      remark,\n      labelRemark,\n      env,\n      formItem: model,\n      renderLabel,\n      renderDescription,\n      hint,\n      data,\n      showErrorMsg\n    } = this.props;\n\n    // 强制不渲染 label 的话\n    if (renderLabel === false) {\n      label = label === false ? false : '';\n    }\n\n    description = description || desc;\n    const horizontal = this.props.horizontal || this.props.formHorizontal;\n    const left = getWidthRate(horizontal.left);\n    const right = getWidthRate(horizontal.right);\n\n    return (\n      <div\n        data-role=\"form-item\"\n        className={cx(`Form-item Form-item--horizontal`, className, {\n          [`is-error`]: model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        {label !== false ? (\n          <label\n            className={cx(\n              `Form-label`,\n              {\n                [`Form-itemColumn--${\n                  typeof horizontal.leftFixed === 'string'\n                    ? horizontal.leftFixed\n                    : 'normal'\n                }`]: horizontal.leftFixed,\n                [`Form-itemColumn--${left}`]: !horizontal.leftFixed\n              },\n              labelClassName\n            )}\n          >\n            <span>\n              {filter(label, data)}\n              {required && (label || labelRemark) ? (\n                <span className={cx(`Form-star`)}>*</span>\n              ) : null}\n              {labelRemark\n                ? render('label-remark', {\n                    type: 'remark',\n                    icon: labelRemark.icon || 'warning-mark',\n                    tooltip: labelRemark,\n                    className: cx(`Form-labelRemark`),\n                    container:\n                      env && env.getModalContainer\n                        ? env.getModalContainer\n                        : undefined\n                  })\n                : null}\n            </span>\n          </label>\n        ) : null}\n\n        <div\n          className={cx(`Form-value`, {\n            // [`Form-itemColumn--offset${getWidthRate(horizontal.offset)}`]: !label && label !== false,\n            [`Form-itemColumn--${right}`]: !!right && right !== 12 - left\n          })}\n        >\n          {this.renderControl()}\n\n          {caption\n            ? render('caption', caption, {\n                className: cx(`Form-caption`, captionClassName)\n              })\n            : null}\n\n          {remark\n            ? render('remark', {\n                type: 'remark',\n                icon: remark.icon || 'warning-mark',\n                tooltip: remark,\n                className: cx(`Form-remark`),\n                container:\n                  env && env.getModalContainer\n                    ? env.getModalContainer\n                    : undefined\n              })\n            : null}\n\n          {hint && model && model.isFocused\n            ? render('hint', hint, {\n                className: cx(`Form-hint`)\n              })\n            : null}\n\n          {model &&\n          !model.valid &&\n          showErrorMsg !== false &&\n          Array.isArray(model.errors) ? (\n            <ul className={cx(`Form-feedback`)}>\n              {model.errors.map((msg: string, key: number) => (\n                <li key={key}>{msg}</li>\n              ))}\n            </ul>\n          ) : null}\n\n          {renderDescription !== false && description\n            ? render('description', description, {\n                className: cx(`Form-description`, descriptionClassName)\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n\n  renderNormal() {\n    let {\n      className,\n      classnames: cx,\n      desc,\n      description,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      remark,\n      labelRemark,\n      env,\n      descriptionClassName,\n      captionClassName,\n      formItem: model,\n      renderLabel,\n      renderDescription,\n      hint,\n      formMode,\n      data,\n      showErrorMsg\n    } = this.props;\n\n    description = description || desc;\n\n    return (\n      <div\n        data-role=\"form-item\"\n        className={cx(`Form-item Form-item--${formMode}`, className, {\n          'is-error': model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        {label && renderLabel !== false ? (\n          <label className={cx(`Form-label`, labelClassName)}>\n            <span>\n              {filter(label, data)}\n              {required && (label || labelRemark) ? (\n                <span className={cx(`Form-star`)}>*</span>\n              ) : null}\n              {labelRemark\n                ? render('label-remark', {\n                    type: 'remark',\n                    icon: labelRemark.icon || 'warning-mark',\n                    tooltip: labelRemark,\n                    className: cx(`Form-lableRemark`),\n                    container:\n                      env && env.getModalContainer\n                        ? env.getModalContainer\n                        : undefined\n                  })\n                : null}\n            </span>\n          </label>\n        ) : null}\n\n        {this.renderControl()}\n\n        {caption\n          ? render('caption', caption, {\n              className: cx(`Form-caption`, captionClassName)\n            })\n          : null}\n\n        {remark\n          ? render('remark', {\n              type: 'remark',\n              icon: remark.icon || 'warning-mark',\n              className: cx(`Form-remark`),\n              tooltip: remark,\n              container:\n                env && env.getModalContainer ? env.getModalContainer : undefined\n            })\n          : null}\n\n        {hint && model && model.isFocused\n          ? render('hint', hint, {\n              className: cx(`Form-hint`)\n            })\n          : null}\n\n        {model &&\n        !model.valid &&\n        showErrorMsg !== false &&\n        Array.isArray(model.errors) ? (\n          <ul className={cx(`Form-feedback`)}>\n            {model.errors.map((msg: string, key: number) => (\n              <li key={key}>{msg}</li>\n            ))}\n          </ul>\n        ) : null}\n\n        {renderDescription !== false && description\n          ? render('description', description, {\n              className: cx(`Form-description`, descriptionClassName)\n            })\n          : null}\n      </div>\n    );\n  }\n\n  renderInline() {\n    let {\n      className,\n      classnames: cx,\n      desc,\n      description,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      descriptionClassName,\n      captionClassName,\n      formItem: model,\n      remark,\n      labelRemark,\n      env,\n      hint,\n      renderLabel,\n      renderDescription,\n      data,\n      showErrorMsg\n    } = this.props;\n\n    description = description || desc;\n\n    return (\n      <div\n        data-role=\"form-item\"\n        className={cx(`Form-item Form-item--inline`, className, {\n          'is-error': model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        {label && renderLabel !== false ? (\n          <label className={cx(`Form-label`, labelClassName)}>\n            <span>\n              {filter(label, data)}\n              {required && (label || labelRemark) ? (\n                <span className={cx(`Form-star`)}>*</span>\n              ) : null}\n              {labelRemark\n                ? render('label-remark', {\n                    type: 'remark',\n                    icon: labelRemark.icon || 'warning-mark',\n                    tooltip: labelRemark,\n                    className: cx(`Form-lableRemark`),\n                    container:\n                      env && env.getModalContainer\n                        ? env.getModalContainer\n                        : undefined\n                  })\n                : null}\n            </span>\n          </label>\n        ) : null}\n\n        <div className={cx(`Form-value`)}>\n          {this.renderControl()}\n\n          {caption\n            ? render('caption', caption, {\n                className: cx(`Form-caption`, captionClassName)\n              })\n            : null}\n\n          {remark\n            ? render('remark', {\n                type: 'remark',\n                icon: remark.icon || 'warning-mark',\n                className: cx(`Form-remark`),\n                tooltip: remark,\n                container:\n                  env && env.getModalContainer\n                    ? env.getModalContainer\n                    : undefined\n              })\n            : null}\n\n          {hint && model && model.isFocused\n            ? render('hint', hint, {\n                className: cx(`Form-hint`)\n              })\n            : null}\n\n          {model &&\n          !model.valid &&\n          showErrorMsg !== false &&\n          Array.isArray(model.errors) ? (\n            <ul className={cx(`Form-feedback`)}>\n              {model.errors.map((msg: string, key: number) => (\n                <li key={key}>{msg}</li>\n              ))}\n            </ul>\n          ) : null}\n\n          {renderDescription !== false && description\n            ? render('description', description, {\n                className: cx(`Form-description`, descriptionClassName)\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n\n  renderRow() {\n    let {\n      className,\n      classnames: cx,\n      desc,\n      description,\n      label,\n      labelClassName,\n      render,\n      required,\n      caption,\n      remark,\n      labelRemark,\n      env,\n      descriptionClassName,\n      captionClassName,\n      formItem: model,\n      renderLabel,\n      renderDescription,\n      hint,\n      formMode,\n      data,\n      showErrorMsg\n    } = this.props;\n\n    description = description || desc;\n\n    return (\n      <div\n        data-role=\"form-item\"\n        className={cx(`Form-item Form-item--${formMode}`, className, {\n          'is-error': model && !model.valid,\n          [`is-required`]: required\n        })}\n      >\n        <div className={cx('Form-rowInner')}>\n          {label && renderLabel !== false ? (\n            <label className={cx(`Form-label`, labelClassName)}>\n              <span>\n                {filter(label, data)}\n                {required && (label || labelRemark) ? (\n                  <span className={cx(`Form-star`)}>*</span>\n                ) : null}\n                {labelRemark\n                  ? render('label-remark', {\n                      type: 'remark',\n                      icon: labelRemark.icon || 'warning-mark',\n                      tooltip: labelRemark,\n                      className: cx(`Form-lableRemark`),\n                      container:\n                        env && env.getModalContainer\n                          ? env.getModalContainer\n                          : undefined\n                    })\n                  : null}\n              </span>\n            </label>\n          ) : null}\n\n          {this.renderControl()}\n\n          {caption\n            ? render('caption', caption, {\n                className: cx(`Form-caption`, captionClassName)\n              })\n            : null}\n\n          {remark\n            ? render('remark', {\n                type: 'remark',\n                icon: remark.icon || 'warning-mark',\n                className: cx(`Form-remark`),\n                tooltip: remark,\n                container:\n                  env && env.getModalContainer\n                    ? env.getModalContainer\n                    : undefined\n              })\n            : null}\n        </div>\n\n        {hint && model && model.isFocused\n          ? render('hint', hint, {\n              className: cx(`Form-hint`)\n            })\n          : null}\n\n        {model &&\n        !model.valid &&\n        showErrorMsg !== false &&\n        Array.isArray(model.errors) ? (\n          <ul className={cx('Form-feedback')}>\n            {model.errors.map((msg: string, key: number) => (\n              <li key={key}>{msg}</li>\n            ))}\n          </ul>\n        ) : null}\n\n        {description && renderDescription !== false\n          ? render('description', description, {\n              className: cx(`Form-description`, descriptionClassName)\n            })\n          : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {formMode, inputOnly, wrap, render, formItem: model} = this.props;\n\n    if (wrap === false || inputOnly) {\n      return this.renderControl();\n    }\n\n    return (\n      <>\n        {formMode === 'inline'\n          ? this.renderInline()\n          : formMode === 'horizontal'\n          ? this.renderHorizontal()\n          : formMode === 'row'\n          ? this.renderRow()\n          : this.renderNormal()}\n        {model\n          ? render(\n              'modal',\n              {\n                type: 'dialog',\n                ...model.dialogSchema\n              },\n              {\n                show: model.dialogOpen,\n                onClose: this.handleDialogClose,\n                onConfirm: this.handleDialogConfirm,\n                data: model.dialogData\n              }\n            )\n          : null}\n      </>\n    );\n  }\n}\n\n// 白名单形式，只有这些属性发生变化，才会往下更新。\n// 除非配置  strictMode\nexport const detectProps = [\n  'formPristine', // 这个千万不能干掉。\n  'formInited',\n  'addable',\n  'addButtonClassName',\n  'addButtonText',\n  'addOn',\n  'btnClassName',\n  'btnLabel',\n  'btnDisabled',\n  'className',\n  'clearable',\n  'columns',\n  'columnsCount',\n  'controls',\n  'desc',\n  'description',\n  'disabled',\n  'draggable',\n  'editable',\n  'editButtonClassName',\n  'formHorizontal',\n  'formMode',\n  'hideRoot',\n  'horizontal',\n  'icon',\n  'inline',\n  'inputClassName',\n  'label',\n  'labelClassName',\n  'labelField',\n  'language',\n  'level',\n  'max',\n  'maxRows',\n  'min',\n  'minRows',\n  'multiLine',\n  'multiple',\n  'option',\n  'placeholder',\n  'removable',\n  'required',\n  'remark',\n  'hint',\n  'rows',\n  'searchable',\n  'showCompressOptions',\n  'size',\n  'step',\n  'showInput',\n  'unit',\n  'value',\n  'diffValue'\n];\n\nexport function asFormItem(config: Omit<FormItemConfig, 'component'>) {\n  return (Control: FormControlComponent) => {\n    const isSFC = !(Control.prototype instanceof React.Component);\n\n    // 兼容老的 FormItem 用法。\n    if (config.validate && !Control.prototype.validate) {\n      const fn = config.validate;\n      Control.prototype.validate = function () {\n        // console.warn('推荐直接在类中定义，而不是 FormItem HOC 的参数中传入。');\n        const host = {\n          input: this\n        };\n\n        return fn.apply(host, arguments);\n      };\n    } else if (config.validate) {\n      console.error(\n        'FormItem配置中的 validate 将不起作用，因为类的成员函数中已经定义了 validate 方法，将优先使用类里面的实现。'\n      );\n    }\n\n    if (config.storeType) {\n      Control = HocStoreFactory({\n        storeType: config.storeType,\n        extendsData: config.extendsData\n      })(observer(Control));\n      delete config.storeType;\n    }\n\n    return hoistNonReactStatic(\n      class extends FormItemWrap {\n        static defaultProps = {\n          className: '',\n          renderLabel: config.renderLabel,\n          renderDescription: config.renderDescription,\n          sizeMutable: config.sizeMutable,\n          wrap: config.wrap,\n          showErrorMsg: config.showErrorMsg,\n          ...Control.defaultProps\n        };\n        static propsList: any = [\n          'value',\n          'defaultValue',\n          'onChange',\n          'setPrinstineValue',\n          'readOnly',\n          'strictMode',\n          ...((Control as any).propsList || [])\n        ];\n\n        static displayName = `FormItem${config.type ? `(${config.type})` : ''}`;\n        static ComposedComponent = Control;\n\n        ref: any;\n\n        constructor(props: FormItemProps) {\n          super(props);\n          this.refFn = this.refFn.bind(this);\n        }\n\n        componentWillMount() {\n          const {validations, formItem: model} = this.props;\n\n          // 组件注册的时候可能默认指定验证器类型\n          if (model && !validations && config.validations) {\n            model.config({\n              rules: config.validations\n            });\n          }\n\n          super.componentWillMount();\n        }\n\n        shouldComponentUpdate(nextProps: FormControlProps) {\n          if (nextProps.strictMode === false || config.strictMode === false) {\n            return true;\n          }\n\n          // 把可能会影响视图的白名单弄出来，减少重新渲染次数。\n          if (anyChanged(detectProps, this.props, nextProps)) {\n            return true;\n          }\n\n          return false;\n        }\n\n        getWrappedInstance() {\n          return this.ref;\n        }\n\n        refFn(ref: any) {\n          this.ref = ref;\n        }\n\n        renderControl() {\n          const {\n            inputClassName,\n            formItem: model,\n            classnames: cx,\n            children,\n            type,\n            size,\n            defaultSize,\n            ...rest\n          } = this.props;\n\n          const controlSize = size || defaultSize;\n\n          return (\n            <Control\n              {...rest}\n              onOpenDialog={this.handleOpenDialog}\n              size={config.sizeMutable !== false ? undefined : size}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n              type={type}\n              classnames={cx}\n              ref={isSFC ? undefined : this.refFn}\n              forwardedRef={isSFC ? this.refFn : undefined}\n              formItem={model}\n              className={cx(\n                `Form-control`,\n                {\n                  'is-inline': !!rest.inline,\n                  'is-error': model && !model.valid,\n                  [`Form-control--withSize Form-control--size${ucFirst(\n                    controlSize\n                  )}`]:\n                    config.sizeMutable !== false &&\n                    typeof controlSize === 'string' &&\n                    !!controlSize &&\n                    controlSize !== 'full'\n                },\n                inputClassName\n              )}\n            />\n          );\n        }\n      },\n      Control\n    );\n  };\n}\n\nexport function registerFormItem(config: FormItemConfig): RendererConfig {\n  let Control = asFormItem(config)(config.component);\n\n  return registerRenderer({\n    ...config,\n    name: config.name || `${config.type}-control`,\n    weight: typeof config.weight !== 'undefined' ? config.weight : -100, // 优先级高点\n    test:\n      config.test ||\n      new RegExp(\n        `(^|\\/)form(?:\\/.+)?\\/control\\/(?:\\d+\\/)?${config.type}$`,\n        'i'\n      ),\n    component: Control,\n    isFormItem: true\n  });\n}\n\nexport function FormItem(config: FormItemBasicConfig) {\n  return function (component: FormControlComponent): any {\n    const renderer = registerFormItem({\n      ...config,\n      component\n    });\n\n    return renderer.component as any;\n  };\n}\n\nexport default FormItem;\n"
    ]
}