{
    "version": 3,
    "file": "Date.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Date.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,sCAAmD;AACnD,0DAA4B;AAmD5B;IAA+B,qCAAqC;IAApE;QAAA,qEAyEC;QA3DC,qBAAqB;QACrB,WAAK,GAAc;YACjB,MAAM,EAAE,CAAC;SACV,CAAC;;IAwDJ,CAAC;IAtDC,qCAAiB,GAAjB;QAAA,iBAUC;QATO,IAAA,KAA6B,IAAI,CAAC,KAAK,EAAtC,OAAO,aAAA,EAAE,eAAe,qBAAc,CAAC;QAE9C,IAAI,OAAO,IAAI,eAAe,EAAE;YAC9B,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;gBACjC,KAAI,CAAC,QAAQ,CAAC;oBACZ,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;iBACtB,CAAC,CAAC;YACL,CAAC,EAAE,eAAe,CAAC,CAAC;SACrB;IACH,CAAC;IAED,wCAAoB,GAApB;QACE,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACtC,CAAC;IAED,0BAAM,GAAN;QACQ,IAAA,KASF,IAAI,CAAC,KAAK,EARZ,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,MAAM,YAAA,EACN,WAAW,iBAAA,EACX,OAAO,aAAA,EACP,SAAS,eAAA,EACG,EAAE,gBAAA,EACH,EAAE,eACD,CAAC;QACf,IAAI,SAAS,GAAoB,CAC/B,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAClD,CAAC;QAEF,IAAI,KAAK,EAAE;YACT,IAAI,OAAO,GAAG,gBAAM,CAAC,KAAK,EAAE,gBAAM,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,UAAU,GAAG,gBAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YAE5C,SAAS,GAAG,OAAO,CAAC,OAAO,EAAE;gBAC3B,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;gBACxB,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE;oBACtB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC3B,CAAC,CAAC,KAAK,CAAC;SACX;QAED,IAAI,OAAO,EAAE;YACX,SAAS,GAAG,gBAAM,CAAC,SAAmB,CAAC,CAAC,OAAO,EAAE,CAAC;SACnD;QAED,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CACvB,wCAAM,SAAS,EAAC,aAAa,IAAE,EAAE,CAAC,MAAM,CAAC,CAAQ,CAClD,CAAC,CAAC,CAAC,CACF,SAAS,CACV,CAAC;QAEF,OAAO,wCAAM,SAAS,EAAE,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,IAAG,SAAS,CAAQ,CAAC;IACzE,CAAC;IArEM,sBAAY,GAGf;QACF,WAAW,EAAE,GAAG;QAChB,MAAM,EAAE,YAAY;QACpB,WAAW,EAAE,GAAG;QAChB,OAAO,EAAE,KAAK;QACd,eAAe,EAAE,KAAK;KACvB,CAAC;IA6DJ,gBAAC;CAAA,AAzED,CAA+B,eAAK,CAAC,SAAS,GAyE7C;AAzEY,8BAAS;AA+EtB;IAAuC,6CAAS;IAAhD;;IAKA,CAAC;IAJQ,8BAAY,yCACd,SAAS,CAAC,YAAY,KACzB,MAAM,EAAE,YAAY,IACpB;IAJS,iBAAiB;QAJ7B,kBAAQ,CAAC;YACR,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,iBAAiB,CAK7B;IAAD,wBAAC;CAAA,AALD,CAAuC,SAAS,GAK/C;AALY,8CAAiB;AAW9B;IAA2C,iDAAS;IAApD;;IAKA,CAAC;IAJQ,kCAAY,yCACd,SAAS,CAAC,YAAY,KACzB,MAAM,EAAE,qBAAqB,IAC7B;IAJS,qBAAqB;QAJjC,kBAAQ,CAAC;YACR,IAAI,EAAE,iBAAiB;YACvB,IAAI,EAAE,gBAAgB;SACvB,CAAC;OACW,qBAAqB,CAKjC;IAAD,4BAAC;CAAA,AALD,CAA2C,SAAS,GAKnD;AALY,sDAAqB;AAWlC;IAAuC,6CAAS;IAAhD;;IAKA,CAAC;IAJQ,8BAAY,yCACd,SAAS,CAAC,YAAY,KACzB,MAAM,EAAE,OAAO,IACf;IAJS,iBAAiB;QAJ7B,kBAAQ,CAAC;YACR,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,iBAAiB,CAK7B;IAAD,wBAAC;CAAA,AALD,CAAuC,SAAS,GAK/C;AALY,8CAAiB;AAU9B;IAAwC,8CAAS;IAAjD;;IAKA,CAAC;IAJQ,+BAAY,yCACd,SAAS,CAAC,YAAY,KACzB,MAAM,EAAE,SAAS,IACjB;IAJS,kBAAkB;QAJ9B,kBAAQ,CAAC;YACR,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,kBAAkB,CAK9B;IAAD,yBAAC;CAAA,AALD,CAAwC,SAAS,GAKhD;AALY,gDAAkB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport moment from 'moment';\nimport {BaseSchema} from '../Schema';\n\n/**\n * Date 展示渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/date\n */\nexport interface DateSchema extends BaseSchema {\n  /**\n   * 指定为日期展示类型\n   */\n  type:\n    | 'date'\n    | 'datetime'\n    | 'time'\n    | 'static-date'\n    | 'static-datetime'\n    | 'static-time';\n\n  /**\n   * 展示的时间格式，参考 moment 中的格式说明。\n   */\n  format?: string;\n\n  /**\n   * 占位符\n   */\n  placeholder?: string;\n\n  /**\n   * 值的时间格式，参考 moment 中的格式说明。\n   */\n  valueFormat?: string;\n\n  /**\n   * 显示成相对时间，比如1分钟前\n   */\n  fromNow?: boolean;\n\n  /**\n   * 更新频率， 默认为1分钟\n   */\n  updateFrequency?: number;\n}\n\nexport interface DateProps extends RendererProps, DateSchema {}\n\nexport interface DateState {\n  random?: number;\n}\n\nexport class DateField extends React.Component<DateProps, DateState> {\n  refreshInterval: NodeJS.Timeout;\n\n  static defaultProps: Pick<\n    DateProps,\n    'placeholder' | 'format' | 'valueFormat' | 'fromNow' | 'updateFrequency'\n  > = {\n    placeholder: '-',\n    format: 'YYYY-MM-DD',\n    valueFormat: 'X',\n    fromNow: false,\n    updateFrequency: 60000\n  };\n\n  // 动态显示相对时间时，用来触发视图更新\n  state: DateState = {\n    random: 0\n  };\n\n  componentDidMount() {\n    const {fromNow, updateFrequency} = this.props;\n\n    if (fromNow && updateFrequency) {\n      this.refreshInterval = setInterval(() => {\n        this.setState({\n          random: Math.random()\n        });\n      }, updateFrequency);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refreshInterval);\n  }\n\n  render() {\n    const {\n      value,\n      valueFormat,\n      format,\n      placeholder,\n      fromNow,\n      className,\n      classnames: cx,\n      translate: __\n    } = this.props;\n    let viewValue: React.ReactNode = (\n      <span className=\"text-muted\">{placeholder}</span>\n    );\n\n    if (value) {\n      let ISODate = moment(value, moment.ISO_8601);\n      let NormalDate = moment(value, valueFormat);\n\n      viewValue = ISODate.isValid()\n        ? ISODate.format(format)\n        : NormalDate.isValid()\n        ? NormalDate.format(format)\n        : false;\n    }\n\n    if (fromNow) {\n      viewValue = moment(viewValue as string).fromNow();\n    }\n\n    viewValue = !viewValue ? (\n      <span className=\"text-danger\">{__('日期无效')}</span>\n    ) : (\n      viewValue\n    );\n\n    return <span className={cx('DateField', className)}>{viewValue}</span>;\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)date$/,\n  name: 'date-field'\n})\nexport class DateFieldRenderer extends DateField {\n  static defaultProps: Partial<DateProps> = {\n    ...DateField.defaultProps,\n    format: 'YYYY-MM-DD'\n  };\n}\n\n@Renderer({\n  test: /(^|\\/)datetime$/,\n  name: 'datetime-field'\n})\nexport class DateTimeFieldRenderer extends DateField {\n  static defaultProps: Partial<DateProps> = {\n    ...DateField.defaultProps,\n    format: 'YYYY-MM-DD HH:mm:ss'\n  };\n}\n\n@Renderer({\n  test: /(^|\\/)time$/,\n  name: 'time-field'\n})\nexport class TimeFieldRenderer extends DateField {\n  static defaultProps: Partial<DateProps> = {\n    ...DateField.defaultProps,\n    format: 'HH:mm'\n  };\n}\n@Renderer({\n  test: /(^|\\/)month$/,\n  name: 'month-field'\n})\nexport class MonthFieldRenderer extends DateField {\n  static defaultProps: Partial<DateProps> = {\n    ...DateField.defaultProps,\n    format: 'YYYY-MM'\n  };\n}\n"
    ]
}