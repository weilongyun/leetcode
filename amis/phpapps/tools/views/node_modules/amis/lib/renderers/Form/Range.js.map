{
    "version": 3,
    "file": "Range.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Range.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,qEAAuC;AACvC,qEAAuC;AACvC,mEAAqC;AACrC,+BAAmE;AAEnE,yEAAgD;AAChD,gDAA4C;AA4D5C,SAAgB,WAAW,CACzB,KAAmD,EACnD,KAA0B;IAE1B,IAAI,KAAK,CAAC,QAAQ,EAAE;QAClB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACvB,IAAA,KAAuB,KAAK;iBAC/B,KAAK,CAAC,KAAK,CAAC,SAAS,IAAI,GAAG,CAAC;iBAC7B,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,CAAC,EAAT,CAAS,CAAC,EAFf,QAAQ,QAAA,EAAE,QAAQ,QAEH,CAAC;YACvB,OAAO;gBACL,GAAG,EACD,CAAC,KAAK,CAAC,GAAG,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;oBAChD,QAAQ;oBACR,KAAK,CAAC,GAAG;gBACX,GAAG,EACD,CAAC,KAAK,CAAC,GAAG,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;oBAChD,QAAQ;oBACR,KAAK,CAAC,GAAG;aACZ,CAAC;SACH;aAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACpC,OAAO;gBACL,GAAG,EACD,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;oBACjD,KAAK,CAAC,GAAG;oBACT,KAAK,CAAC,GAAG;gBACX,GAAG,EACD,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;oBACjD,KAAK,CAAC,GAAG;oBACT,KAAK,CAAC,GAAG;aACZ,CAAC;SACH;KACF;IACD,OAAO,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,KAAK,CAAC,GAAG,CAAC;AAC5B,CAAC;AAjCD,kCAiCC;AAiBD;IAA0C,wCAGzC;IAgBC,sBAAY,KAAiB;QAA7B,YACE,kBAAM,KAAK,CAAC,SAuBb;QAtBO,IAAA,KAAqD,KAAI,CAAC,KAAK,EAAvD,UAAU,WAAA,EAAE,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,GAAG,SAAA,EAAE,GAAG,SAAc,CAAC;QACtE,IAAM,KAAK,GAAG,WAAW,CAAC,UAAU,EAAE;YACpC,QAAQ,UAAA;YACR,SAAS,WAAA;YACT,GAAG,KAAA;YACH,GAAG,KAAA;SACJ,CAAC,CAAC;QAEH,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,kBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;YAC3C,QAAQ,EAAE,kBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SAC5C,CAAC;QACF,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjD,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3D,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7C,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7D,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7D,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACnE,CAAC;IAED,gDAAyB,GAAzB,UAA0B,SAAqB;QACtC,IAAA,KAAK,GAAI,IAAI,CAAC,KAAK,MAAd,CAAe;QACpB,IAAO,cAAc,GAAmC,SAAS,MAA5C,EAAE,QAAQ,GAAyB,SAAS,SAAlC,EAAE,SAAS,GAAc,SAAS,UAAvB,EAAE,GAAG,GAAS,SAAS,IAAlB,EAAE,GAAG,GAAI,SAAS,IAAb,CAAc;QACzE,IAAI,KAAK,KAAK,cAAc,EAAE;YAC5B,IAAM,OAAK,GAAG,WAAW,CAAC,cAAc,EAAE;gBACxC,QAAQ,UAAA;gBACR,SAAS,WAAA;gBACT,GAAG,KAAA;gBACH,GAAG,KAAA;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE,OAAK;gBACZ,QAAQ,EAAE,kBAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,OAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;gBAC3C,QAAQ,EAAE,kBAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,OAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;aAC5C,CAAC,CAAC;SACJ;IACH,CAAC;IAED,wCAAiB,GAAjB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,yCAAkB,GAAlB,UAAmB,SAAqB;QACtC,IAAI,SAAS,CAAC,SAAS,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YAChD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAED,kCAAW,GAAX;QACQ,IAAA,KAA+B,IAAI,CAAC,KAAK,EAAxC,SAAS,eAAA,EAAe,EAAE,iBAAc,CAAC;QAEhD,IAAI,WAAW,GAAI,IAAI,CAAC,QAA4B,CAAC,WAAW,CAAC;QACjE,IAAI,IAAI,GAAG,gBAAc,WAAW,GAAG,CAAC,QAAK,CAAC;QAC7C,QAAQ,CAAC,aAAa,CACrB,MAAI,EAAE,4BAAyB,CACZ,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACxC,IAAI,SAAS,EAAE;YACb,IAAI,GAAG,iBAAc,WAAW,GAAG,CAAC,GAAG,EAAE,SAAK,CAAC;SAChD;QACA,IAAI,CAAC,QAA4B,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACvD,CAAC;IAED,kCAAW,GAAX,UAAY,GAAQ;QAClB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACtB,CAAC;IAED,mCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,QAAQ,CAAC;YACZ,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,KAAK,CAAC,GAAG;YACnB,QAAQ,EAAE,KAAK,CAAC,GAAG;SACpB,CAAC,CAAC;IACL,CAAC;IAED,iCAAU,GAAV;QACQ,IAAA,KAAuB,IAAI,CAAC,KAAK,EAAhC,QAAQ,cAAA,EAAE,GAAG,SAAA,EAAE,GAAG,SAAc,CAAC;QACxC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE;oBACL,GAAG,EAAE,GAAG;oBACR,GAAG,EAAE,GAAG;iBACT;gBACD,QAAQ,EAAE,GAAG;gBACb,QAAQ,EAAE,GAAG;aACd,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;SACJ;IACH,CAAC;IAED,gCAAS,GAAT,UAAU,KAAU;QACZ,IAAA,KAAoC,IAAI,CAAC,KAAK,EAA7C,QAAQ,cAAA,EAAE,UAAU,gBAAA,EAAE,SAAS,eAAc,CAAC;QACrD,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,QAAQ,IAAI,UAAU,EAAE;YAC1B,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;SAC1D;QACM,IAAA,QAAQ,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QAC9B,IAAI,CAAC,QAAQ,CACX;YACE,KAAK,OAAA;SACN,EACD,cAAM,OAAA,QAAQ,CAAC,QAAQ,CAAC,EAAlB,CAAkB,CACzB,CAAC;IACJ,CAAC;IAED,uCAAgB,GAAhB;QACS,IAAA,IAAI,GAAI,IAAI,CAAC,KAAK,KAAd,CAAe;QAE1B,OAAO,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;YACtD,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3C,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAU,EAAE,IAAa;QAC1B,IAAA,KAAmB,IAAI,CAAC,KAA0B,EAAjD,GAAG,SAAA,EAAE,GAAG,SAAA,EAAE,IAAI,UAAmC,CAAC;QAClD,IAAO,UAAU,GAAI,IAAI,CAAC,KAAK,MAAd,CAAe;QAEvC,IACE,KAAK,KAAK,EAAE;YACZ,KAAK,KAAK,GAAG;YACb,IAAI,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,CACvE,KAAK,CACN,EACD;YACA,OAAO,KAAK,CAAC;SACd;QAED,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACpD,KAAK;YACH,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE1E,QAAQ,IAAI,EAAE;YACZ,KAAK,KAAK,CAAC,CAAC;gBACV,IAAI,kBAAQ,CAAC,UAAU,CAAC,IAAI,kBAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;oBACpD,IAAI,KAAK,IAAI,UAAU,CAAC,GAAG,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,GAAG,IAAI,EAAE;wBAC3D,OAAO,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC;qBAC9B;oBACD,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG,IAAI,EAAE;wBACjC,OAAO,KAAK,CAAC;qBACd;iBACF;gBACD,OAAO,GAAG,CAAC;aACZ;YACD,KAAK,KAAK;gBACR,OAAO,kBAAQ,CAAC,UAAU,CAAC,IAAI,kBAAQ,CAAC,UAAU,CAAC,GAAG,CAAC;oBACrD,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC;wBAClB,CAAC,KAAK,IAAI,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC;wBAClD,KAAK;oBACT,CAAC,CAAC,GAAG,CAAC;YACV;gBACE,OAAO,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC;SAChE;IACH,CAAC;IAED,wCAAiB,GAAjB,UAAkB,GAAwC;QACxD,IAAI,CAAC,QAAQ,CAAC;YACZ,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,yCAAkB,GAAlB,UAAmB,GAAwC;QACzD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACjD,IAAA,KAAK,GAAI,IAAI,CAAC,KAAK,MAAd,CAAe;QAC3B,kBAAQ,CAAC,KAAK,CAAC;YACb,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE;oBACL,GAAG,EAAE,QAAQ;oBACb,GAAG,EAAE,KAAK,CAAC,GAAG;iBACf;gBACD,QAAQ,EAAE,QAAQ;aACnB,CAAC;YACJ,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAED,yCAAkB,GAAlB,UAAmB,GAAwC;QACzD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACjD,IAAA,KAAK,GAAI,IAAI,CAAC,KAAK,MAAd,CAAe;QAC3B,kBAAQ,CAAC,KAAK,CAAC;YACb,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE;oBACL,GAAG,EAAE,KAAK,CAAC,GAAG;oBACd,GAAG,EAAE,QAAQ;iBACd;gBACD,QAAQ,EAAE,QAAQ;aACnB,CAAC;YACJ,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAED,2CAAoB,GAApB,UAAqB,GAAwC;QAC3D,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,2CAAoB,GAApB,UAAqB,GAAwC;QAC3D,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,6BAAM,GAAN;QAAA,iBAqGC;QApGO,IAAA,KAaF,IAAI,CAAC,KAA0B,EAZjC,GAAG,SAAA,EACH,GAAG,SAAA,EACH,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,SAAS,eAAA,EACT,QAAQ,cAAA,EACI,EAAE,gBAAA,EACD,EAAE,iBACkB,CAAC;QAEpC,OAAO,CACL,uCACE,SAAS,EAAE,EAAE,CACX,cAAc,EACd;gBACE,yBAAyB,EAAE,SAAS;gBACpC,yBAAyB,EAAE,SAAS;gBACpC,aAAa,EAAE,QAAQ;aACxB,EACD,SAAS,CACV;YAED,8BAAC,eAAU,IACT,WAAW,EAAE,EAAE,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,gBAAgB,EAAE,IAAI,CAAC,SAAS,EAChC,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,WAAW,EAAE,UAAC,KAAU,IAAK,OAAA,KAAK,GAAG,IAAI,EAAZ,CAAY,EACzC,QAAQ,EAAE,QAAQ,GAClB;YAEF,wCACE,SAAS,EAAE,EAAE,CAAC,wCAAwC,CAAC,EACvD,GAAG,EAAE,IAAI,CAAC,WAAW;gBAErB,wCAAM,SAAS,EAAE,EAAE,CAAC,2BAA2B,CAAC,IAC7C,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,IAAI,CACrD,CACF;YAEN,SAAS,CAAC,CAAC,CAAC,CACX,QAAQ,IAAI,kBAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACvC,uCAAK,SAAS,EAAE,EAAE,CAAC,8BAA8B,CAAC;gBAChD,yCACE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAC1D,IAAI,EAAC,MAAM,EACX,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC1B,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,MAAM,EAAE,IAAI,CAAC,kBAAkB,GAC/B;gBACF,wCAAM,SAAS,EAAE,EAAE,CAAC,4BAA4B,CAAC,UAAY;gBAC7D,yCACE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAC1D,IAAI,EAAC,MAAM,EACX,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC1B,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,MAAM,EAAE,IAAI,CAAC,kBAAkB,GAC/B,CACE,CACP,CAAC,CAAC,CAAC,CACF,uCAAK,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC;gBACpC,yCACE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EACtD,IAAI,EAAC,MAAM,EACX,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,CAAC,kBAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAChC,CACE,CACP,CACF,CAAC,CAAC,CAAC,IAAI;YAEP,SAAS,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC,CACrC,qCACE,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,EAChC,SAAS,EAAE,EAAE,CAAC,kBAAkB,EAAE;oBAChC,WAAW,EAAE,QAAQ;wBACnB,CAAC,CAAC,iBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC,CAAC;wBACjD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG;iBAC7B,CAAC;gBAEF,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CACpC,CACL,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;IACJ,CAAC;IAnUM,yBAAY,GAAiB;QAClC,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,CAAC;QACN,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,KAAK;QACf,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,KAAK;QACf,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,GAAG;KACf,CAAC;IAyTJ,mBAAC;CAAA,AA1UD,CAA0C,eAAK,CAAC,aAAa,GA0U5D;kBA1UoB,YAAY;AAgVjC;IAA0C,gDAAY;IAAtD;;IAAwD,CAAC;IAA5C,oBAAoB;QAJhC,eAAQ,CAAC;YACR,IAAI,EAAE,yDAAyD;YAC/D,IAAI,EAAE,eAAe;SACtB,CAAC;OACW,oBAAoB,CAAwB;IAAD,2BAAC;CAAA,AAAzD,CAA0C,YAAY,GAAG;AAA5C,oDAAoB",
    "sourcesContent": [
        "import React from 'react';\nimport isNumber from 'lodash/isNumber';\nimport isObject from 'lodash/isObject';\nimport isEqual from 'lodash/isEqual';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport InputRange from '../../components/Range';\nimport {Icon} from '../../components/icons';\nimport {FormOptionsControl} from './Options';\n\n/**\n * Range\n * 文档：https://baidu.gitee.io/amis/docs/components/form/range\n */\nexport interface RangeControlSchema extends FormBaseControl {\n  type: 'range';\n\n  /**\n   * 最大值\n   */\n  max?: number;\n\n  /**\n   * 最小值\n   */\n  min?: number;\n\n  /**\n   * 步长\n   */\n  step?: number;\n\n  /**\n   * 单位\n   */\n  unit?: string;\n}\n\nexport interface RangeProps extends FormControlProps {\n  max?: number;\n  min?: number;\n  step?: number;\n  unit?: string;\n  clearable?: boolean;\n  name?: string;\n  showInput?: boolean;\n  className?: string;\n  value: any;\n  onChange: (value: any) => void;\n  multiple?: boolean;\n  joinValues?: boolean;\n  delimiter?: string;\n}\n\nexport interface DefaultProps {\n  max: number;\n  min: number;\n  step: number;\n  unit: string;\n  clearable: boolean;\n  disabled: boolean;\n  showInput: boolean;\n  multiple: boolean;\n  joinValues: boolean;\n  delimiter: string;\n}\n\nexport function formatValue(\n  value: string | number | {min: number; max: number},\n  props: Partial<RangeProps>\n) {\n  if (props.multiple) {\n    if (typeof value === 'string') {\n      const [minValue, maxValue] = value\n        .split(props.delimiter || ',')\n        .map(v => Number(v));\n      return {\n        min:\n          (props.min && minValue < props.min && props.min) ||\n          minValue ||\n          props.min,\n        max:\n          (props.max && maxValue > props.max && props.max) ||\n          maxValue ||\n          props.max\n      };\n    } else if (typeof value === 'object') {\n      return {\n        min:\n          (props.min && value.min < props.min && props.min) ||\n          value.min ||\n          props.min,\n        max:\n          (props.max && value.max > props.max && props.max) ||\n          value.max ||\n          props.max\n      };\n    }\n  }\n  return value ?? props.min;\n}\n\ntype PropsWithDefaults = RangeProps & DefaultProps;\n\nexport interface RangeState {\n  value:\n    | {\n        min?: number;\n        max?: number;\n      }\n    | number\n    | string\n    | undefined;\n  minValue?: any;\n  maxValue?: any;\n}\n\nexport default class RangeControl extends React.PureComponent<\n  RangeProps,\n  RangeState\n> {\n  midLabel?: HTMLSpanElement;\n\n  static defaultProps: DefaultProps = {\n    max: 100,\n    min: 0,\n    step: 1,\n    unit: '',\n    clearable: true,\n    disabled: false,\n    showInput: false,\n    multiple: false,\n    joinValues: true,\n    delimiter: ','\n  };\n\n  constructor(props: RangeProps) {\n    super(props);\n    const {value: propsValue, multiple, delimiter, min, max} = this.props;\n    const value = formatValue(propsValue, {\n      multiple,\n      delimiter,\n      min,\n      max\n    });\n\n    this.state = {\n      value: value,\n      minValue: isObject(value) ? value.min : min,\n      maxValue: isObject(value) ? value.max : max\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.midLabelRef = this.midLabelRef.bind(this);\n    this.clearValue = this.clearValue.bind(this);\n    this.handleMinInputBlur = this.handleMinInputBlur.bind(this);\n    this.handleMaxInputBlur = this.handleMaxInputBlur.bind(this);\n    this.handleMinInputChange = this.handleMinInputChange.bind(this);\n    this.handleMaxInputChange = this.handleMaxInputChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps: RangeProps) {\n    const {value} = this.props;\n    const {value: nextPropsValue, multiple, delimiter, min, max} = nextProps;\n    if (value !== nextPropsValue) {\n      const value = formatValue(nextPropsValue, {\n        multiple,\n        delimiter,\n        min,\n        max\n      });\n\n      this.setState({\n        value: value,\n        minValue: isObject(value) ? value.min : min,\n        maxValue: isObject(value) ? value.max : max\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.updateStyle();\n  }\n\n  componentDidUpdate(prevProps: RangeProps) {\n    if (prevProps.showInput !== this.props.showInput) {\n      this.updateStyle();\n    }\n  }\n\n  updateStyle() {\n    const {showInput, classPrefix: ns} = this.props;\n\n    let offsetWidth = (this.midLabel as HTMLSpanElement).offsetWidth;\n    let left = `calc(50% - ${offsetWidth / 2}px)`;\n    (document.querySelector(\n      `.${ns}InputRange-label--value`\n    ) as HTMLSpanElement).style.left = left;\n    if (showInput) {\n      left = `calc(50% - ${offsetWidth / 2 + 60}px)`;\n    }\n    (this.midLabel as HTMLSpanElement).style.left = left;\n  }\n\n  midLabelRef(ref: any) {\n    this.midLabel = ref;\n  }\n\n  handleChange(value: any) {\n    this.setState({\n      value: value,\n      minValue: value.min,\n      maxValue: value.max\n    });\n  }\n\n  clearValue() {\n    const {multiple, min, max} = this.props;\n    if (multiple) {\n      this.setState({\n        value: {\n          min: min,\n          max: max\n        },\n        minValue: min,\n        maxValue: max\n      });\n    } else {\n      this.setState({\n        value: min\n      });\n    }\n  }\n\n  handleEnd(value: any) {\n    const {multiple, joinValues, delimiter} = this.props;\n    let endValue = value;\n    if (multiple && joinValues) {\n      endValue = [value.min, value.max].join(delimiter || ',');\n    }\n    const {onChange} = this.props;\n    this.setState(\n      {\n        value\n      },\n      () => onChange(endValue)\n    );\n  }\n\n  getStepPrecision() {\n    const {step} = this.props;\n\n    return typeof step !== 'number' || step >= 1 || step < 0\n      ? 0\n      : step.toString().split('.')[1].length;\n  }\n\n  getValue(value: any, type?: string) {\n    const {max, min, step} = this.props as PropsWithDefaults;\n    const {value: stateValue} = this.state;\n\n    if (\n      value === '' ||\n      value === '-' ||\n      new RegExp('^[-]?\\\\d+[.]{1}[0]{0,' + this.getStepPrecision() + '}$').test(\n        value\n      )\n    ) {\n      return value;\n    }\n\n    value = Math.round(parseFloat(value) / step) * step;\n    value =\n      step < 1 ? parseFloat(value.toFixed(this.getStepPrecision())) : ~~value;\n\n    switch (type) {\n      case 'min': {\n        if (isObject(stateValue) && isNumber(stateValue.max)) {\n          if (value >= stateValue.max && min <= stateValue.max - step) {\n            return stateValue.max - step;\n          }\n          if (value < stateValue.max - step) {\n            return value;\n          }\n        }\n        return min;\n      }\n      case 'max':\n        return isObject(stateValue) && isNumber(stateValue.min)\n          ? (value > max && max) ||\n              (value <= stateValue.min && stateValue.min + step) ||\n              value\n          : max;\n      default:\n        return (value < min && min) || (value > max && max) || value;\n    }\n  }\n\n  handleInputChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      value: this.getValue(evt.target.value)\n    });\n  }\n\n  handleMinInputBlur(evt: React.ChangeEvent<HTMLInputElement>) {\n    const minValue = this.getValue(evt.target.value, 'min');\n    const {value} = this.state;\n    isObject(value)\n      ? this.setState({\n          value: {\n            min: minValue,\n            max: value.max\n          },\n          minValue: minValue\n        })\n      : null;\n  }\n\n  handleMaxInputBlur(evt: React.ChangeEvent<HTMLInputElement>) {\n    const maxValue = this.getValue(evt.target.value, 'max');\n    const {value} = this.state;\n    isObject(value)\n      ? this.setState({\n          value: {\n            min: value.min,\n            max: maxValue\n          },\n          maxValue: maxValue\n        })\n      : null;\n  }\n\n  handleMinInputChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      minValue: evt.target.value\n    });\n  }\n\n  handleMaxInputChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      maxValue: evt.target.value\n    });\n  }\n\n  render() {\n    const {\n      max,\n      min,\n      step,\n      unit,\n      clearable,\n      name,\n      disabled,\n      className,\n      showInput,\n      multiple,\n      classnames: cx,\n      classPrefix: ns\n    } = this.props as PropsWithDefaults;\n\n    return (\n      <div\n        className={cx(\n          'RangeControl',\n          {\n            'RangeControl--withInput': showInput,\n            'RangeControl--clearable': clearable,\n            'is-multiple': multiple\n          },\n          className\n        )}\n      >\n        <InputRange\n          classPrefix={ns}\n          value={this.state.value}\n          disabled={disabled}\n          onChange={this.handleChange}\n          onChangeComplete={this.handleEnd}\n          max={max}\n          min={min}\n          step={step}\n          formatLabel={(value: any) => value + unit}\n          multiple={multiple}\n        />\n\n        <span\n          className={cx('InputRange-label InputRange-label--mid')}\n          ref={this.midLabelRef}\n        >\n          <span className={cx('InputRange-labelContainer')}>\n            {((max + min) / 2).toFixed(this.getStepPrecision()) + unit}\n          </span>\n        </span>\n\n        {showInput ? (\n          multiple && isObject(this.state.value) ? (\n            <div className={cx('InputRange-input is-multiple')}>\n              <input\n                className={this.state.value.min !== min ? 'is-active' : ''}\n                type=\"text\"\n                name={name}\n                value={this.state.minValue}\n                disabled={disabled}\n                onChange={this.handleMinInputChange}\n                onBlur={this.handleMinInputBlur}\n              />\n              <span className={cx('InputRange-input-separator')}> - </span>\n              <input\n                className={this.state.value.max !== max ? 'is-active' : ''}\n                type=\"text\"\n                name={name}\n                value={this.state.maxValue}\n                disabled={disabled}\n                onChange={this.handleMaxInputChange}\n                onBlur={this.handleMaxInputBlur}\n              />\n            </div>\n          ) : (\n            <div className={cx('InputRange-input')}>\n              <input\n                className={this.state.value !== min ? 'is-active' : ''}\n                type=\"text\"\n                name={name}\n                value={!isObject(this.state.value) ? this.state.value : 0}\n                disabled={disabled}\n                onChange={this.handleInputChange}\n              />\n            </div>\n          )\n        ) : null}\n\n        {clearable && !disabled && showInput ? (\n          <a\n            onClick={() => this.clearValue()}\n            className={cx('InputRange-clear', {\n              'is-active': multiple\n                ? isEqual(this.state.value, {min: min, max: max})\n                : this.state.value !== min\n            })}\n          >\n            <Icon icon=\"close\" className=\"icon\" />\n          </a>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  test: /(^|\\/)form(?:\\/.+)?\\/control\\/(?:\\d+\\/)?(slider|range)$/,\n  name: 'range-control'\n})\nexport class RangeControlRenderer extends RangeControl {}\n"
    ]
}