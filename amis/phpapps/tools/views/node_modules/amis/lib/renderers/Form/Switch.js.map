{
    "version": 3,
    "file": "Switch.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Switch.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,+BAAmE;AAEnE,2EAA6C;AAkC7C;IAA2C,yCAAiC;IAA5E;;IAyCA,CAAC;IAnCC,8BAAM,GAAN;QACQ,IAAA,KAWF,IAAI,CAAC,KAAK,EAVZ,SAAS,eAAA,EACI,EAAE,iBAAA,EACH,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,YAAY,kBACA,CAAC;QAEf,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,eAAe,EAAE,SAAS,CAAC;YAC3C,YAAY,CAAC,CAAC,CAAC,CACd,wCAAM,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAAG,MAAM,CAAQ,CACtD,CAAC,CAAC,CAAC,IAAI;YAER,8BAAC,gBAAM,IACL,WAAW,EAAE,EAAE,EACf,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,GAClB;YAED,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CACrB,wCAAM,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,IAAG,MAAM,CAAQ,CACtD,CACG,CACP,CAAC;IACJ,CAAC;IAvCM,0BAAY,GAAG;QACpB,SAAS,EAAE,IAAI;QACf,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,KAAK;KACpB,CAAC;IAoCJ,oBAAC;CAAA,AAzCD,CAA2C,eAAK,CAAC,SAAS,GAyCzD;kBAzCoB,aAAa;AA+ClC;IAA2C,iDAAa;IAAxD;;IAA0D,CAAC;IAA9C,qBAAqB;QAJjC,eAAQ,CAAC;YACR,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,KAAK;SACnB,CAAC;OACW,qBAAqB,CAAyB;IAAD,4BAAC;CAAA,AAA3D,CAA2C,aAAa,GAAG;AAA9C,sDAAqB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport Switch from '../../components/Switch';\n\n/**\n * Switch\n * 文档：https://baidu.gitee.io/amis/docs/components/form/switch\n */\nexport interface SwitchControlSchema extends FormBaseControl {\n  /**\n   * 指定为多行文本输入框\n   */\n  type: 'switch';\n\n  /**\n   * 勾选值\n   */\n  trueValue?: any;\n\n  /**\n   * 未勾选值\n   */\n  falseValue?: any;\n\n  /**\n   * 选项说明\n   */\n  option?: string;\n}\n\nexport interface SwitchProps extends FormControlProps {\n  option?: string;\n  trueValue?: any;\n  falseValue?: any;\n}\n\nexport default class SwitchControl extends React.Component<SwitchProps, any> {\n  static defaultProps = {\n    trueValue: true,\n    falseValue: false,\n    optionAtLeft: false\n  };\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      classnames: cx,\n      value,\n      trueValue,\n      falseValue,\n      option,\n      onChange,\n      disabled,\n      optionAtLeft\n    } = this.props;\n\n    return (\n      <div className={cx(`SwitchControl`, className)}>\n        {optionAtLeft ? (\n          <span className={cx('Switch-option')}>{option}</span>\n        ) : null}\n\n        <Switch\n          classPrefix={ns}\n          value={value}\n          trueValue={trueValue}\n          falseValue={falseValue}\n          disabled={disabled}\n          onChange={onChange}\n        />\n\n        {optionAtLeft ? null : (\n          <span className={cx('Switch-option')}>{option}</span>\n        )}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'switch',\n  sizeMutable: false\n})\nexport class SwitchControlRenderer extends SwitchControl {}\n"
    ]
}