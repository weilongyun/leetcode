{
    "version": 3,
    "file": "Panel.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Panel.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,yCAAsD;AACtD,2DAA4C;AAE5C,kEAA4B;AA+B5B;IAAmC,yCAAK;IAAxC;;IA6CA,CAAC;IA3CC,kCAAU,GAAV;QACQ,IAAA,KAaF,IAAI,CAAC,KAAK,EAZZ,MAAM,YAAA,EACN,eAAe,qBAAA,EACf,IAAI,UAAA,EACJ,aAAa,mBAAA,EACb,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,KAAK,WAAA,EACQ,EAAE,iBACH,CAAC;QAEf,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,EAAE;YAC3C,IAAI,KAAK,GAAQ,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;YAC5B,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;YAE9C,OAAO,CACL,uCACE,SAAS,EAAE,oBAAE,CACR,EAAE,eAAS,KAAK,CAAC,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAE,EAClD,aAAa,CACd,IAEA,eAAe,CACd;gBACE,QAAQ,UAAA;gBACR,IAAI,MAAA;gBACJ,QAAQ,UAAA;aACT,EACA,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAC1C,KAAK,CACN,CACG,CACP,CAAC;SACH;QAED,OAAO,iBAAM,UAAU,WAAE,CAAC;IAC5B,CAAC;IA3CM,uBAAS,GAAkB,CAAC,UAAU,CAAC,CAAC;IADpC,aAAa;QALzB,kBAAQ,CAAC;YACR,IAAI,EAAE,gDAAgD;YACtD,MAAM,EAAE,CAAC,GAAG;YACZ,IAAI,EAAE,eAAe;SACtB,CAAC;OACW,aAAa,CA6CzB;IAAD,oBAAC;CAAA,AA7CD,CAAmC,eAAK,GA6CvC;AA7CY,sCAAa",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport Panel, {PanelSchema} from '../Panel';\nimport {Schema} from '../../types';\nimport cx from 'classnames';\nimport {FormBaseControl, FormControlSchema} from './Item';\n\n/**\n * 容器空间\n * 文档：https://baidu.gitee.io/amis/docs/components/form/contaier\n */\nexport interface PanelControlSchema extends FormBaseControl, PanelSchema {\n  type: 'panel';\n\n  /**\n   * 表单项集合\n   */\n  controls?: Array<FormControlSchema>;\n\n  /**\n   * @deprecated 请用类型 tabs\n   */\n  tabs?: any;\n\n  /**\n   * @deprecated 请用类型 fieldSet\n   */\n  fieldSet?: any;\n}\n\n@Renderer({\n  test: /(^|\\/)form(?:\\/.+)?\\/control\\/(?:\\d+\\/)?panel$/,\n  weight: -100,\n  name: 'panel-control'\n})\nexport class PanelRenderer extends Panel {\n  static propsList: Array<string> = ['onChange'];\n  renderBody(): JSX.Element | null {\n    const {\n      render,\n      renderFormItems,\n      body,\n      bodyClassName,\n      controls,\n      tabs,\n      fieldSet,\n      mode,\n      formMode,\n      horizontal,\n      $path,\n      classPrefix: ns\n    } = this.props;\n\n    if (!body && (controls || tabs || fieldSet)) {\n      let props: any = {};\n      mode && (props.mode = mode);\n      horizontal && (props.horizontal = horizontal);\n\n      return (\n        <div\n          className={cx(\n            `${ns}Form--${props.mode || formMode || 'normal'}`,\n            bodyClassName\n          )}\n        >\n          {renderFormItems(\n            {\n              controls,\n              tabs,\n              fieldSet\n            },\n            ($path as string).replace(/^.*form\\//, ''),\n            props\n          )}\n        </div>\n      );\n    }\n\n    return super.renderBody();\n  }\n}\n"
    ]
}