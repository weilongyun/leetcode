{
    "version": 3,
    "file": "Collapse.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Collapse.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Collapse as BasicCollapse} from '../components/Collapse';\nimport {\n  BaseSchema,\n  SchemaClassName,\n  SchemaCollection,\n  SchemaTpl\n} from '../Schema';\n\n/**\n * Collapse 折叠渲染器，格式说明。\n * 文档：https://baidu.gitee.io/amis/docs/components/collapse\n */\nexport interface CollapseSchema extends BaseSchema {\n  /**\n   * 指定为折叠器类型\n   */\n  type: 'collapse';\n\n  /**\n   * 标题展示位置\n   */\n  titlePosition: 'top' | 'bottom';\n\n  /**\n   * 内容区域\n   */\n  body: SchemaCollection;\n\n  /**\n   * 配置 Body 容器 className\n   */\n  bodyClassName?: SchemaClassName;\n\n  /**\n   * 是否可折叠\n   */\n  collapsable?: boolean;\n\n  /**\n   * 默认是否折叠\n   */\n  collapsed?: boolean;\n\n  /**\n   * 标题 CSS 类名\n   */\n  headingClassName?: string;\n\n  /**\n   * 标题\n   */\n  title?: SchemaTpl;\n\n  /**\n   * 收起的标题\n   */\n  collapseTitle?: SchemaTpl;\n\n  /**\n   * 控件大小\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'base';\n}\n\nexport interface CollapseProps\n  extends RendererProps,\n    Omit<CollapseSchema, 'type'> {\n  wrapperComponent?: any;\n  headingComponent?: any;\n\n  // 内容口子\n  children?: JSX.Element | ((props?: any) => JSX.Element);\n}\n\nexport interface CollapseState {\n  collapsed: boolean;\n}\n\nexport default class Collapse extends React.Component<\n  CollapseProps,\n  CollapseState\n> {\n  static propsList: Array<string> = [\n    'wrapperComponent',\n    'headingComponent',\n    'bodyClassName',\n    'collapsed',\n    'headingClassName'\n  ];\n\n  static defaultProps: Partial<CollapseProps> = {\n    titlePosition: 'top',\n    wrapperComponent: 'div',\n    headingComponent: 'h4',\n    className: '',\n    headingClassName: '',\n    bodyClassName: '',\n    collapsable: true\n  };\n\n  state = {\n    collapsed: false\n  };\n\n  constructor(props: CollapseProps) {\n    super(props);\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n    this.state.collapsed = !!props.collapsed;\n  }\n\n  componentWillReceiveProps(nextProps: CollapseProps) {\n    const props = this.props;\n\n    if (props.collapsed !== nextProps.collapsed) {\n      this.setState({\n        collapsed: !!nextProps.collapsed\n      });\n    }\n  }\n\n  toggleCollapsed() {\n    this.props.collapsable !== false &&\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n  }\n\n  render() {\n    const {\n      classPrefix: ns,\n      classnames: cx,\n      size,\n      wrapperComponent: WrapperComponent,\n      headingComponent: HeadingComponent,\n      className,\n      headingClassName,\n      children,\n      titlePosition,\n      title,\n      collapseTitle,\n      body,\n      bodyClassName,\n      render,\n      collapsable,\n      translate: __\n    } = this.props;\n    // 默认给个 title，不然没法点\n    const finalTitle = this.state.collapsed ? title : collapseTitle || title;\n\n    let dom = [\n      finalTitle ? (\n        <HeadingComponent\n          key=\"title\"\n          onClick={this.toggleCollapsed}\n          className={cx(`Collapse-header`, headingClassName)}\n        >\n          {render('heading', finalTitle)}\n          {collapsable && <span className={cx('Collapse-arrow')} />}\n        </HeadingComponent>\n      ) : null,\n\n      <BasicCollapse\n        show={collapsable ? !this.state.collapsed : true}\n        classnames={cx}\n        classPrefix={ns}\n        key=\"body\"\n      >\n        <div className={cx(`Collapse-body`, bodyClassName)}>\n          {children\n            ? typeof children === 'function'\n              ? children(this.props)\n              : children\n            : body\n            ? render('body', body)\n            : null}\n        </div>\n      </BasicCollapse>\n    ];\n\n    if (titlePosition === 'bottom') {\n      dom.reverse();\n    }\n\n    return (\n      <WrapperComponent\n        className={cx(\n          `Collapse`,\n          {\n            'is-collapsed': this.state.collapsed,\n            [`Collapse--${size}`]: size,\n            'Collapse--collapsable': collapsable,\n            'Collapse--title-bottom': titlePosition === 'bottom'\n          },\n          className\n        )}\n      >\n        {dom}\n      </WrapperComponent>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)collapse$/,\n  name: 'collapse'\n})\nexport class CollapseRenderer extends Collapse {}\n"
    ]
}