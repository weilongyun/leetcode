{
    "version": 3,
    "file": "InputGroup.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputGroup.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport {Schema} from '../../types';\nimport Collapse from '../Collapse';\nimport {\n  makeColumnClassBuild,\n  makeHorizontalDeeper,\n  isVisible,\n  isDisabled\n} from '../../utils/helper';\nimport cx from 'classnames';\nimport getExprProperties from '../../utils/filter-schema';\nimport {\n  FormItem,\n  FormControlProps,\n  FormBaseControl,\n  FormControlSchema\n} from './Item';\nimport {IFormStore} from '../../store/form';\nimport {SchemaClassName} from '../../Schema';\n\n/**\n * InputGroup\n * 文档：https://baidu.gitee.io/amis/docs/components/form/input-group\n */\nexport interface InputGroupControlSchema extends FormBaseControl {\n  type: 'input-group';\n\n  /**\n   * FormItem 集合\n   */\n  controls: Array<FormControlSchema>;\n}\n\nexport interface InputGroupProps extends FormControlProps {\n  controls: Array<any>;\n  formStore: IFormStore;\n}\n\ninterface InputGroupState {\n  isFocused: boolean;\n}\n\nexport class InputGroup extends React.Component<\n  InputGroupProps,\n  InputGroupState\n> {\n  constructor(props: InputGroupProps) {\n    super(props);\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n    this.state = {\n      isFocused: false\n    };\n  }\n\n  handleFocus() {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      isFocused: false\n    });\n  }\n\n  renderControl(control: any, index: any, otherProps?: any) {\n    const {render, onChange} = this.props;\n\n    if (!control) {\n      return null;\n    }\n\n    const subSchema: any =\n      control && (control as Schema).type === 'control'\n        ? control\n        : {\n            type: 'control',\n            control\n          };\n\n    if (subSchema.control) {\n      let control = subSchema.control as Schema;\n      control.hiddenOn && (subSchema.hiddenOn = control.hiddenOn);\n      control.visibleOn && (subSchema.visibleOn = control.visibleOn);\n    }\n\n    return render(`${index}`, subSchema, {\n      onChange,\n      ...otherProps\n    });\n  }\n\n  validate() {\n    const {formStore, controls} = this.props;\n\n    const errors: Array<string> = [];\n\n    controls.forEach(({name}) => {\n      const formItem = name ? formStore.getItemByName(name) : null;\n      formItem && formItem.errors.length && errors.push(...formItem.errors);\n    });\n\n    return errors.length ? errors : '';\n  }\n\n  render() {\n    let {\n      controls,\n      className,\n      mode,\n      horizontal,\n      formMode,\n      formHorizontal,\n      data,\n      classnames: cx\n    } = this.props;\n\n    formMode = mode || formMode;\n\n    controls = controls.filter(item => {\n      if (item && (item.hidden || item.visible === false)) {\n        return false;\n      }\n\n      const exprProps = getExprProperties(item || {}, data);\n      if (exprProps.hidden || exprProps.visible === false) {\n        return false;\n      }\n\n      return true;\n    });\n\n    let horizontalDeeper =\n      horizontal ||\n      makeHorizontalDeeper(formHorizontal as any, controls.length);\n    return (\n      <div\n        className={cx(`InputGroup`, className, {\n          'is-focused': this.state.isFocused\n        })}\n      >\n        {controls.map((control, index) => {\n          const isAddOn = ~[\n            'icon',\n            'plain',\n            'tpl',\n            'button',\n            'submit',\n            'reset'\n          ].indexOf(control && control.type);\n\n          let dom = this.renderControl(control, index, {\n            formHorizontal: horizontalDeeper,\n            formMode: 'normal',\n            inputOnly: true,\n            key: index,\n            onFocus: this.handleFocus,\n            onBlur: this.handleBlur\n          });\n\n          return isAddOn ? (\n            <span\n              key={index}\n              className={cx(\n                control.addOnclassName,\n                ~['button', 'submit', 'reset'].indexOf(control && control.type)\n                  ? 'InputGroup-btn'\n                  : 'InputGroup-addOn'\n              )}\n            >\n              {dom}\n            </span>\n          ) : (\n            dom\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-group',\n  strictMode: false\n})\nexport default class InputGroupRenderer extends InputGroup {}\n"
    ]
}