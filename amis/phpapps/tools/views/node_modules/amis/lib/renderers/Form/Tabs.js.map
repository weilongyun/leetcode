{
    "version": 3,
    "file": "Tabs.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Tabs.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,yCAAsD;AAEtD,yDAAoD;AAuCpD;IAAkC,wCAAI;IAAtC;QAAA,qEAqCC;QA/BC,eAAS,GAAG,UAAC,GAAQ,EAAE,KAAU,EAAE,GAAW;YACtC,IAAA,KAOF,KAAI,CAAC,KAAK,EANZ,eAAe,qBAAA,EACf,QAAQ,cAAA,EACR,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,MAAM,YAAA,EACM,EAAE,gBACF,CAAC;YAEf,IACE,eAAe;gBACf,CAAC,GAAG,CAAC,IAAI;gBACT,CAAC,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,EAC1C;gBACA,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,YAAS,GAAG,CAAC,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAE,CAAC,IAC5D,eAAe,CACd,GAAG,EACC,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,SAAI,GAAK,EACtD;oBACE,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,QAAQ;oBAC1B,UAAU,EAAE,GAAG,CAAC,UAAU,IAAI,cAAc;iBAC7C,CACF,CACG,CACP,CAAC;aACH;YAED,OAAO,MAAM,CAAC,SAAO,GAAK,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;QAC1D,CAAC,CAAC;;IACJ,CAAC;IApCQ,yBAAY,GAAG;QACpB,YAAY,EAAE,KAAK,CAAC,eAAe;KACpC,CAAC;IACK,sBAAS,GAAkB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAJ5C,YAAY;QALxB,kBAAQ,CAAC;YACR,IAAI,EAAE,oCAAoC;YAC1C,MAAM,EAAE,CAAC,GAAG;YACZ,IAAI,EAAE,cAAc;SACrB,CAAC;OACW,YAAY,CAqCxB;IAAD,mBAAC;CAAA,AArCD,CAAkC,cAAI,GAqCrC;AArCY,oCAAY",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport {Schema} from '../../types';\nimport Tabs, {TabSchema, TabsSchema} from '../Tabs';\nimport {FormBaseControl, FormControlSchema} from './Item';\n\nexport type TabControlSchema = TabSchema & {\n  /**\n   * 表单项集合\n   */\n  controls?: Array<FormControlSchema>;\n\n  /**\n   * @deprecated 请用类型 tabs\n   */\n  tabs?: any;\n\n  /**\n   * @deprecated 请用类型 fieldSet\n   */\n  fieldSet?: any;\n};\n\n/**\n * Tabs\n * 文档：https://baidu.gitee.io/amis/docs/components/form/tabs\n */\nexport interface TabsControlSchema\n  extends FormBaseControl,\n    Omit<TabsSchema, 'tabs'> {\n  type: 'tabs';\n\n  tabs: Array<TabControlSchema>;\n}\n\nexport interface TabsProps extends RendererProps {}\n\n@Renderer({\n  test: /(^|\\/)form(?:.+)?\\/control\\/tabs$/i,\n  weight: -100,\n  name: 'tabs-control'\n})\nexport class TabsRenderer extends Tabs {\n  static defaultProps = {\n    mountOnEnter: false // form 中的不按需渲染\n  };\n  static propsList: Array<string> = ['onChange', 'tabs'];\n\n  renderTab = (tab: any, props: any, key: number) => {\n    const {\n      renderFormItems,\n      formMode,\n      formHorizontal,\n      $path,\n      render,\n      classnames: cx\n    } = this.props;\n\n    if (\n      renderFormItems &&\n      !tab.type &&\n      (tab.controls || tab.fieldSet || tab.tabs)\n    ) {\n      return (\n        <div className={cx(`Form--${tab.mode || formMode || 'normal'}`)}>\n          {renderFormItems(\n            tab,\n            `${($path as string).replace(/^.*form\\//, '')}/${key}`,\n            {\n              mode: tab.mode || formMode,\n              horizontal: tab.horizontal || formHorizontal\n            }\n          )}\n        </div>\n      );\n    }\n\n    return render(`tab/${key}`, tab.body || tab.tab || tab);\n  };\n}\n"
    ]
}