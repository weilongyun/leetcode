{
    "version": 3,
    "file": "Link.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Link.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,sCAAmD;AAEnD,oCAAoC;AAyBpC;IAA+B,qCAAkC;IAAjE;;IAgCA,CAAC;IA1BC,0BAAM,GAAN;QACQ,IAAA,KAUF,IAAI,CAAC,KAAK,EATZ,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,IAAI,UAAA,EACQ,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,IAAI,UAAA,EACJ,MAAM,YAAA,EACK,EAAE,eACD,CAAC;QAEf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,YAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAElD,OAAO,CACL,qCACE,IAAI,EAAE,UAAU,IAAI,KAAK,EACzB,MAAM,EAAE,UAAU,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,EAClD,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,IAE/B,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,CAC5D,CACL,CAAC;IACJ,CAAC;IA9BM,sBAAY,GAAG;QACpB,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,KAAK;KACb,CAAC;IA4BJ,gBAAC;CAAA,AAhCD,CAA+B,eAAK,CAAC,SAAS,GAgC7C;AAhCY,8BAAS;AAsCtB;IAAuC,6CAAS;IAAhD;;IAAkD,CAAC;IAAtC,iBAAiB;QAJ7B,kBAAQ,CAAC;YACR,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,MAAM;SACb,CAAC;OACW,iBAAiB,CAAqB;IAAD,wBAAC;CAAA,AAAnD,CAAuC,SAAS,GAAG;AAAtC,8CAAiB",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {BaseSchema, SchemaTpl} from '../Schema';\nimport {filter} from '../utils/tpl';\n\n/**\n * Link 链接展示控件。\n * 文档：https://baidu.gitee.io/amis/docs/components/link\n */\nexport interface LinkSchema extends BaseSchema {\n  /**\n   * 指定为 link 链接展示控件\n   */\n  type: 'link';\n\n  /**\n   * 是否新窗口打开。\n   */\n  blank?: boolean;\n\n  /**\n   * 链接内容，如果不配置将显示链接地址。\n   */\n  body?: SchemaTpl;\n}\n\nexport interface LinkProps extends RendererProps, LinkSchema {}\n\nexport class LinkField extends React.Component<LinkProps, object> {\n  static defaultProps = {\n    className: '',\n    blank: false\n  };\n\n  render() {\n    const {\n      className,\n      body,\n      href,\n      classnames: cx,\n      blank,\n      htmlTarget,\n      data,\n      render,\n      translate: __\n    } = this.props;\n\n    let value = this.props.value;\n    const finnalHref = href ? filter(href, data) : '';\n\n    return (\n      <a\n        href={finnalHref || value}\n        target={htmlTarget || (blank ? '_blank' : '_self')}\n        className={cx('Link', className)}\n      >\n        {body ? render('body', body) : finnalHref || value || __('链接')}\n      </a>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)link$/,\n  name: 'link'\n})\nexport class LinkFieldRenderer extends LinkField {}\n"
    ]
}