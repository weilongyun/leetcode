{
    "version": 3,
    "file": "Checkboxes.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Checkboxes.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {\n  OptionsControl,\n  OptionsControlProps,\n  Option,\n  FormOptionsControl\n} from './Options';\nimport cx from 'classnames';\nimport Checkbox from '../../components/Checkbox';\nimport chunk from 'lodash/chunk';\nimport {Icon} from '../../components/icons';\nimport {Api} from '../../types';\nimport {autobind} from '../../utils/helper';\n\n/**\n * 复选框\n * 文档：https://baidu.gitee.io/amis/docs/components/form/checkboxes\n */\nexport interface CheckboxesControlSchema extends FormOptionsControl {\n  type: 'checkboxes';\n\n  /**\n   * 是否开启全选功能\n   */\n  checkAll?: boolean;\n\n  /**\n   * 是否默认全选\n   */\n  defaultCheckAll?: boolean;\n\n  /**\n   * 每行显示多少个\n   */\n  columnsCount?: number;\n}\n\nexport interface CheckboxesProps\n  extends OptionsControlProps,\n    Omit<CheckboxesControlSchema, 'options'> {\n  placeholder?: any;\n  itemClassName?: string;\n  columnsCount?: number;\n  labelClassName?: string;\n  onAdd?: () => void;\n  addApi?: Api;\n  creatable: boolean;\n  createBtnLabel: string;\n  editable?: boolean;\n  removable?: boolean;\n}\n\nexport default class CheckboxesControl extends React.Component<\n  CheckboxesProps,\n  any\n> {\n  static defaultProps = {\n    columnsCount: 1,\n    multiple: true,\n    placeholder: '暂无选项',\n    creatable: false,\n    createBtnLabel: '新增选项'\n  };\n\n  componentDidMount() {\n    const {defaultCheckAll, onToggleAll} = this.props;\n\n    defaultCheckAll && onToggleAll();\n  }\n\n  componentDidUpdate(prevProps: OptionsControlProps) {\n    let {options: currOptions, onToggleAll, defaultCheckAll} = this.props;\n    let {options: prevOptions} = prevProps;\n\n    if (defaultCheckAll && prevOptions != currOptions) {\n      onToggleAll();\n    }\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  @autobind\n  handleAddClick() {\n    const {onAdd} = this.props;\n    onAdd && onAdd();\n  }\n\n  @autobind\n  handleEditClick(e: Event, item: any) {\n    const {onEdit} = this.props;\n    e.preventDefault();\n    e.stopPropagation();\n    onEdit && onEdit(item);\n  }\n\n  @autobind\n  handleDeleteClick(e: Event, item: any) {\n    const {onDelete} = this.props;\n    e.preventDefault();\n    e.stopPropagation();\n    onDelete && onDelete(item);\n  }\n\n  renderGroup(option: Option, index: number) {\n    const {classnames: cx, labelField} = this.props;\n\n    return (\n      <div\n        key={index}\n        className={cx('CheckboxesControl-group', option.className)}\n      >\n        <label\n          className={cx('CheckboxesControl-groupLabel', option.labelClassName)}\n        >\n          {option[labelField || 'label']}\n        </label>\n\n        {option.children && option.children.length\n          ? option.children.map((option, index) =>\n              this.renderItem(option, index)\n            )\n          : null}\n      </div>\n    );\n  }\n\n  renderItem(option: Option, index: number) {\n    if (option.children) {\n      return this.renderGroup(option, index);\n    }\n\n    const {\n      itemClassName,\n      onToggle,\n      selectedOptions,\n      disabled,\n      inline,\n      labelClassName,\n      labelField,\n      removable,\n      editable\n    } = this.props;\n\n    return (\n      <Checkbox\n        className={itemClassName}\n        key={index}\n        onChange={() => onToggle(option)}\n        checked={!!~selectedOptions.indexOf(option)}\n        disabled={disabled || option.disabled}\n        inline={inline}\n        labelClassName={labelClassName}\n        description={option.description}\n      >\n        {String(option[labelField || 'label'])}\n        {removable ? (\n          <a data-tooltip=\"移除\" data-position=\"left\">\n            <Icon\n              icon=\"minus\"\n              className=\"icon\"\n              onClick={(e: any) => this.handleDeleteClick(e, option)}\n            />\n          </a>\n        ) : null}\n        {editable ? (\n          <a data-tooltip=\"编辑\" data-position=\"left\">\n            <Icon\n              icon=\"pencil\"\n              className=\"icon\"\n              onClick={(e: any) => this.handleEditClick(e, option)}\n            />\n          </a>\n        ) : null}\n      </Checkbox>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      disabled,\n      placeholder,\n      options,\n      inline,\n      columnsCount,\n      selectedOptions,\n      onToggle,\n      onToggleAll,\n      checkAll,\n      classnames: cx,\n      itemClassName,\n      labelClassName,\n      creatable,\n      addApi,\n      createBtnLabel,\n      translate: __\n    } = this.props;\n\n    let body: Array<React.ReactNode> = [];\n\n    if (options && options.length) {\n      body = options.map((option, key) => this.renderItem(option, key));\n    }\n\n    if (checkAll && body.length) {\n      body.unshift(\n        <Checkbox\n          key=\"checkall\"\n          className={itemClassName}\n          onChange={onToggleAll}\n          checked={!!selectedOptions.length}\n          partial={\n            !!(\n              selectedOptions.length &&\n              selectedOptions.length !== options.length\n            )\n          }\n          disabled={disabled}\n          inline={inline}\n          labelClassName={labelClassName}\n        >\n          全选/不选\n        </Checkbox>\n      );\n    }\n\n    if (!inline && (columnsCount as number) > 1) {\n      let weight = 12 / (columnsCount as number);\n      let cellClassName = `Grid-col--sm${\n        weight === Math.round(weight) ? weight : ''\n      }`;\n      body = chunk(body, columnsCount).map((group, groupIndex) => (\n        <div className={cx('Grid')} key={groupIndex}>\n          {Array.from({length: columnsCount as number}).map((_, index) => (\n            <div key={index} className={cx(cellClassName)}>\n              {group[index]}\n            </div>\n          ))}\n        </div>\n      ));\n    }\n\n    return (\n      <div className={cx(`CheckboxesControl`, className)}>\n        {body && body.length ? (\n          body\n        ) : (\n          <span className={`Form-placeholder`}>{__(placeholder)}</span>\n        )}\n\n        {(creatable || addApi) && !disabled ? (\n          <a className={cx('Checkboxes-addBtn')} onClick={this.handleAddClick}>\n            <Icon icon=\"plus\" className=\"icon\" />\n            {__(createBtnLabel)}\n          </a>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'checkboxes',\n  sizeMutable: false\n})\nexport class CheckboxesControlRenderer extends CheckboxesControl {}\n"
    ]
}