{
    "version": 3,
    "file": "DateRange.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/DateRange.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport {filterDate} from '../../utils/tpl-builtin';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport DateRangePicker, {\n  DateRangePicker as BaseDateRangePicker\n} from '../../components/DateRangePicker';\n\n/**\n * DateRange 日期范围控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/date-range\n */\nexport interface DateRangeControlSchema extends FormBaseControl {\n  /**\n   * 指定为日期范围控件\n   */\n  type: 'date-range';\n\n  /**\n   * 分割符, 因为有两个值，开始时间和结束时间，所以要有连接符。默认为英文逗号。\n   *\n   */\n  delimiter?: string;\n\n  /**\n   * 默认 `X` 即时间戳格式，用来提交的时间格式。更多格式类型请参考 moment.\n   */\n  format?: string;\n\n  /**\n   * 默认 `YYYY-MM-DD` 用来配置显示的时间格式。\n   */\n  inputFormat?: string;\n\n  /**\n   * 开启后将选中的选项 value 的值用连接符拼接起来，作为当前表单项的值。如： `value1,value2` 否则为 `[value1, value2]`\n   */\n  joinValues?: boolean;\n\n  /**\n   * 最大日期限制，支持变量 $xxx 来取值，或者用相对值如：* `-2mins` 2分钟前\\n * `+2days` 2天后\\n* `-10week` 十周前\\n可用单位： `min`、`hour`、`day`、`week`、`month`、`year`。所有单位支持复数形式。\n   */\n  maxDate?: string;\n\n  /**\n   * 最小日期限制，支持变量 $xxx 来取值，或者用相对值如：* `-2mins` 2分钟前\\n * `+2days` 2天后\\n* `-10week` 十周前\\n可用单位： `min`、`hour`、`day`、`week`、`month`、`year`。所有单位支持复数形式。\n   */\n  minDate?: string;\n\n  /**\n   * 这里面 value 需要特殊说明一下，因为支持相对值。* `-2mins` 2分钟前\\n * `+2days` 2天后\\n* `-10week` 十周前\\n可用单位： `min`、`hour`、`day`、`week`、`month`、`year`。所有单位支持复数形式。\n   */\n  value?: any;\n\n  /**\n   * 开启后变成非弹出模式，即内联模式。\n   */\n  embed?: boolean;\n}\n\nexport interface DateRangeProps\n  extends FormControlProps,\n    Omit<DateRangeControlSchema, 'type'> {\n  delimiter: string;\n  format: string;\n  joinValues: boolean;\n}\n\ninterface DateControlState {\n  minDate?: moment.Moment;\n  maxDate?: moment.Moment;\n}\n\nexport default class DateRangeControl extends React.Component<\n  DateRangeProps,\n  DateControlState\n> {\n  static defaultProps = {\n    format: 'X',\n    joinValues: true,\n    delimiter: ','\n  };\n\n  constructor(props: DateRangeProps) {\n    super(props);\n\n    const {minDate, maxDate, data, format} = props;\n\n    this.state = {\n      minDate: minDate ? filterDate(minDate, data, format) : undefined,\n      maxDate: maxDate ? filterDate(maxDate, data, format) : undefined\n    };\n  }\n\n  componentWillMount() {\n    const {\n      defaultValue,\n      setPrinstineValue,\n      delimiter,\n      format,\n      data,\n      value,\n      joinValues,\n      utc\n    } = this.props;\n\n    if (defaultValue && value === defaultValue) {\n      let arr =\n        typeof defaultValue === 'string'\n          ? defaultValue.split(delimiter)\n          : defaultValue;\n      setPrinstineValue(\n        BaseDateRangePicker.formatValue(\n          {\n            startDate: filterDate(arr[0], data, format),\n            endDate: filterDate(arr[1], data, format)\n          },\n          format,\n          joinValues,\n          delimiter,\n          utc\n        )\n      );\n    }\n  }\n\n  componentWillReceiveProps(nextProps: DateRangeProps) {\n    const {data, minDate, maxDate, format} = nextProps;\n    const props = this.props;\n\n    if (\n      props.minDate !== minDate ||\n      props.maxDate !== maxDate ||\n      props.data !== data\n    ) {\n      this.setState({\n        minDate: minDate ? filterDate(minDate, data, format) : undefined,\n        maxDate: maxDate ? filterDate(maxDate, data, format) : undefined\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: DateRangeProps) {\n    const {\n      defaultValue,\n      delimiter,\n      joinValues,\n      setPrinstineValue,\n      data,\n      utc,\n      format\n    } = this.props;\n\n    if (prevProps.defaultValue !== defaultValue) {\n      let arr =\n        typeof defaultValue === 'string'\n          ? defaultValue.split(delimiter)\n          : defaultValue;\n\n      setPrinstineValue(\n        arr\n          ? BaseDateRangePicker.formatValue(\n              {\n                startDate: filterDate(arr[0], data, format),\n                endDate: filterDate(arr[1], data, format)\n              },\n              format,\n              joinValues,\n              delimiter,\n              utc\n            )\n          : undefined\n      );\n    }\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      defaultValue,\n      defaultData,\n      minDate,\n      maxDate,\n      ...rest\n    } = this.props;\n\n    return (\n      <div className={cx(`${ns}DateRangeControl`, className)}>\n        <DateRangePicker {...rest} {...this.state} classPrefix={ns} />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'date-range'\n})\nexport class DateRangeControlRenderer extends DateRangeControl {\n  static defaultProps = {\n    ...DateRangeControl.defaultProps,\n    timeFormat: ''\n  };\n}\n\n@FormItem({\n  type: 'datetime-range',\n  sizeMutable: false\n})\nexport class DateTimeRangeControlRenderer extends DateRangeControl {\n  static defaultProps = {\n    ...DateRangeControl.defaultProps,\n    timeFormat: 'HH:mm',\n    inputFormat: 'YYYY-MM-DD HH:mm'\n  };\n}\n"
    ]
}