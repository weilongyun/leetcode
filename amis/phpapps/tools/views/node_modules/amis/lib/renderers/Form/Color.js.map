{
    "version": 3,
    "file": "Color.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Color.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,+BAAmE;AACnE,kEAA4B;AAC5B,qFAAuD;AA8CvD;IAA0C,wCAGzC;IAHD;QAAA,qEAqBC;QAbC,WAAK,GAAsB;YACzB,IAAI,EAAE,KAAK;SACZ,CAAC;;IAWJ,CAAC;IATC,6BAAM,GAAN;QACE,IAAM,KAAwC,IAAI,CAAC,KAAK,EAAjD,SAAS,eAAA,EAAe,EAAE,iBAAA,EAAK,IAAI,sBAApC,4BAAqC,CAAa,CAAC;QAEzD,OAAO,CACL,uCAAK,SAAS,EAAE,oBAAE,CAAI,EAAE,iBAAc,EAAE,SAAS,CAAC;YAChD,8BAAC,qBAAW,qBAAC,WAAW,EAAE,EAAE,IAAM,IAAI,EAAI,CACtC,CACP,CAAC;IACJ,CAAC;IAhBM,yBAAY,GAAwB;QACzC,MAAM,EAAE,KAAK;QACb,SAAS,EAAE,IAAI;KAChB,CAAC;IAcJ,mBAAC;CAAA,AArBD,CAA0C,eAAK,CAAC,aAAa,GAqB5D;kBArBoB,YAAY;AA0BjC;IAA0C,gDAAY;IAAtD;;IAAwD,CAAC;IAA5C,oBAAoB;QAHhC,eAAQ,CAAC;YACR,IAAI,EAAE,OAAO;SACd,CAAC;OACW,oBAAoB,CAAwB;IAAD,2BAAC;CAAA,AAAzD,CAA0C,YAAY,GAAG;AAA5C,oDAAoB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport ColorPicker from '../../components/ColorPicker';\n\n/**\n * Color 颜色选择框\n * 文档：https://baidu.gitee.io/amis/docs/components/form/color\n */\nexport interface ColorControlSchema extends FormBaseControl {\n  /**\n   * 指定为颜色选择框\n   */\n  type: 'color';\n\n  /**\n   * 是否显示清除按钮\n   */\n  clearable?: boolean;\n\n  /**\n   * 颜色格式\n   */\n  format?: 'hex' | 'rgb' | 'rgba' | 'hls';\n\n  /**\n   * 选中颜色后是否关闭弹出层。\n   */\n  closeOnSelect?: boolean;\n\n  /**\n   * 预设颜色，用户可以直接从预设中选。\n   */\n  presetColors?: Array<any>;\n\n  /**\n   * 是否允许用户输入颜色。\n   */\n  allowCustomColor?: boolean;\n}\n\nexport interface ColorProps\n  extends FormControlProps,\n    Omit<ColorControlSchema, 'type'> {}\n\nexport interface ColorControlState {\n  open: boolean;\n}\n\nexport default class ColorControl extends React.PureComponent<\n  ColorProps,\n  ColorControlState\n> {\n  static defaultProps: Partial<ColorProps> = {\n    format: 'hex',\n    clearable: true\n  };\n  state: ColorControlState = {\n    open: false\n  };\n\n  render() {\n    const {className, classPrefix: ns, ...rest} = this.props;\n\n    return (\n      <div className={cx(`${ns}ColorControl`, className)}>\n        <ColorPicker classPrefix={ns} {...rest} />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'color'\n})\nexport class ColorControlRenderer extends ColorControl {}\n"
    ]
}