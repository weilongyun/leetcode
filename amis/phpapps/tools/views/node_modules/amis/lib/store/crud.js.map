{
    "version": 3,
    "file": "crud.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/crud.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getParent,\n  flow,\n  getEnv,\n  getRoot,\n  isAlive\n} from 'mobx-state-tree';\nimport {IRendererStore} from './index';\nimport {ServiceStore} from './service';\nimport {\n  extendObject,\n  createObject,\n  isObjectShallowModified,\n  sortArray,\n  isEmpty,\n  qsstringify\n} from '../utils/helper';\nimport {Api, Payload, fetchOptions, Action, ApiObject} from '../types';\nimport qs from 'qs';\nimport pick from 'lodash/pick';\nimport {resolveVariableAndFilter} from '../utils/tpl-builtin';\n\nclass ServerError extends Error {\n  type = 'ServerError';\n}\n\nexport const CRUDStore = ServiceStore.named('CRUDStore')\n  .props({\n    pristineQuery: types.optional(types.frozen(), {}),\n    query: types.optional(types.frozen(), {}),\n    prevPage: 1,\n    page: 1,\n    perPage: 10,\n    total: 0,\n    mode: 'normal',\n    hasNext: false,\n    selectedAction: types.frozen(),\n    items: types.optional(types.array(types.frozen()), []),\n    selectedItems: types.optional(types.array(types.frozen()), []),\n    unSelectedItems: types.optional(types.array(types.frozen()), []),\n    filterTogggable: false,\n    filterVisible: true,\n    hasInnerModalOpen: false\n  })\n  .views(self => ({\n    get lastPage() {\n      return Math.max(\n        Math.ceil(self.total / (self.perPage < 1 ? 10 : self.perPage)),\n        1\n      );\n    },\n\n    get filterData() {\n      return createObject(self.data, {\n        ...self.query\n      });\n    },\n\n    get mergedData() {\n      return extendObject(self.data, {\n        ...self.query,\n        ...self.data,\n        selectedItems: self.selectedItems,\n        unSelectedItems: self.unSelectedItems\n      });\n    },\n\n    get hasModalOpened() {\n      return self.dialogOpen || self.drawerOpen || self.hasInnerModalOpen;\n    },\n\n    get selectedItemsAsArray() {\n      return self.selectedItems.concat();\n    }\n  }))\n  .actions(self => {\n    let fetchCancel: Function | null = null;\n\n    function setPristineQuery() {\n      self.pristineQuery = self.query;\n    }\n\n    function updateQuery(\n      values: object,\n      updater?: Function,\n      pageField: string = 'page',\n      perPageField: string = 'perPage',\n      replace: boolean = false\n    ) {\n      const originQuery = self.query;\n      self.query = replace\n        ? {\n            ...values\n          }\n        : {\n            ...self.query,\n            ...values\n          };\n\n      if (self.query[pageField || 'page']) {\n        self.page = parseInt(self.query[pageField || 'page'], 10);\n      }\n\n      if (self.query[perPageField || 'perPage']) {\n        self.perPage = parseInt(self.query[perPageField || 'perPage'], 10);\n      }\n\n      updater &&\n        isObjectShallowModified(originQuery, self.query, false) &&\n        setTimeout(updater.bind(null, `?${qsstringify(self.query)}`), 4);\n    }\n\n    const fetchInitData: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions & {\n        forceReload?: boolean;\n        loadDataOnce?: boolean; // 配置数据是否一次性加载，如果是这样，由前端来完成分页，排序等功能。\n        loadDataOnceFetchOnFilter?: boolean; // 在开启loadDataOnce时，filter时是否去重新请求api\n        source?: string; // 支持自定义属于映射，默认不配置，读取 rows 或者 items\n        loadDataMode?: boolean;\n        syncResponse2Query?: boolean;\n      }\n    ) => Promise<any> = flow(function* getInitData(\n      api: Api,\n      data: object,\n      options: fetchOptions & {\n        forceReload?: boolean;\n        loadDataOnce?: boolean; // 配置数据是否一次性加载，如果是这样，由前端来完成分页，排序等功能。\n        loadDataOnceFetchOnFilter?: boolean; // 在开启loadDataOnce时，filter时是否去重新请求api\n        source?: string; // 支持自定义属于映射，默认不配置，读取 rows 或者 items\n        loadDataMode?: boolean;\n        syncResponse2Query?: boolean;\n      } = {}\n    ) {\n      try {\n        if (!options.forceReload && options.loadDataOnce && self.total) {\n          let items = options.source\n            ? resolveVariableAndFilter(\n                options.source,\n                createObject(self.mergedData, {\n                  items: self.data.itemsRaw,\n                  rows: self.data.itemsRaw\n                }),\n                '| raw'\n              )\n            : self.items.concat();\n\n          if (self.query.orderBy) {\n            const dir = /desc/i.test(self.query.orderDir) ? -1 : 1;\n            items = sortArray(items, self.query.orderBy, dir);\n          }\n\n          const data = {\n            ...self.data,\n            total: items.length,\n            items: items.slice(\n              (self.page - 1) * self.perPage,\n              self.page * self.perPage\n            )\n          };\n          self.total = parseInt(data.total || data.count, 10) || 0;\n          self.reInitData(data);\n          return;\n        }\n\n        if (fetchCancel) {\n          fetchCancel();\n          fetchCancel = null;\n          self.fetching = false;\n        }\n\n        options.silent || self.markFetching(true);\n        const ctx: any = createObject(self.data, {\n          ...self.query,\n          [options.pageField || 'page']: self.page,\n          [options.perPageField || 'perPage']: self.perPage,\n          ...data\n        });\n\n        // 一次性加载不要发送 perPage 属性\n        if (options.loadDataOnce) {\n          delete ctx[options.perPageField || 'perPage'];\n        }\n\n        const json: Payload = yield getEnv(self).fetcher(api, ctx, {\n          ...options,\n          cancelExecutor: (executor: Function) => (fetchCancel = executor)\n        });\n        fetchCancel = null;\n\n        if (!json.ok) {\n          self.updateMessage(\n            json.msg || options.errorMessage || self.__('获取失败'),\n            true\n          );\n          getEnv(self).notify(\n            'error',\n            json.msg,\n            json.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: json.msgTimeout\n                }\n              : undefined\n          );\n        } else {\n          if (!json.data) {\n            throw new Error(\n              self.__('返回数据格式不正确，payload.data 没有数据')\n            );\n          }\n\n          self.updatedAt = Date.now();\n          let result = json.data;\n\n          if (Array.isArray(result)) {\n            result = {\n              items: result\n            };\n          }\n\n          const {\n            total,\n            count,\n            page,\n            hasNext,\n            items: oItems,\n            rows: oRows,\n            ...rest\n          } = result;\n\n          let items: Array<any>;\n          if (options.source) {\n            items = resolveVariableAndFilter(\n              options.source,\n              createObject(self.filterData, result),\n              '| raw'\n            );\n          } else {\n            items = result.items || result.rows;\n          }\n\n          if (!Array.isArray(items)) {\n            throw new Error(\n              self.__('返回数据格式不正确，payload.data.items 必须是数组')\n            );\n          } else {\n            // 确保成员是对象。\n            items.map((item: any) =>\n              typeof item === 'string' ? {text: item} : item\n            );\n          }\n\n          // 点击加载更多数据\n          let rowsData = [];\n          if (options.loadDataMode && Array.isArray(self.data.items)) {\n            rowsData = self.data.items.concat(items);\n          } else {\n            // 第一次的时候就是直接加载请求的数据\n            rowsData = items;\n          }\n\n          const data = {\n            ...((api as ApiObject).replaceData ? {} : self.pristine),\n            items: rowsData,\n            count: count,\n            total: total,\n            ...rest\n          };\n\n          if (options.loadDataOnce) {\n            // 记录原始集合，后续可能基于原始数据做排序查找。\n            data.itemsRaw = oItems || oRows;\n\n            if (self.query.orderBy) {\n              const dir = /desc/i.test(self.query.orderDir) ? -1 : 1;\n              rowsData = sortArray(rowsData, self.query.orderBy, dir);\n            }\n            data.items = rowsData.slice(\n              (self.page - 1) * self.perPage,\n              self.page * self.perPage\n            );\n            data.count = data.total = rowsData.length;\n          }\n\n          self.items.replace(rowsData);\n          self.reInitData(data, !!(api as ApiObject).replaceData);\n          options.syncResponse2Query !== false &&\n            updateQuery(\n              pick(rest, Object.keys(self.query)),\n              undefined,\n              options.pageField || 'page',\n              options.perPageField || 'perPage'\n            );\n\n          self.total = parseInt(data.total || data.count, 10) || 0;\n          typeof page !== 'undefined' && (self.page = parseInt(page, 10));\n\n          // 分页情况不清楚，只能知道有没有下一页。\n          if (typeof hasNext !== 'undefined') {\n            self.mode = 'simple';\n            self.total = 0;\n            self.hasNext = !!hasNext;\n          }\n\n          self.updateMessage(json.msg || options.successMessage);\n\n          // 配置了获取成功提示后提示，默认是空不会提示。\n          options &&\n            options.successMessage &&\n            getEnv(self).notify('success', self.msg);\n        }\n\n        self.markFetching(false);\n        return json;\n      } catch (e) {\n        const env = getEnv(self) as IRendererStore;\n\n        if (!isAlive(self) || self.disposed) {\n          return;\n        }\n\n        self.markFetching(false);\n\n        if (env.isCancel(e)) {\n          return;\n        }\n\n        console.error(e.stack);\n        env.notify('error', e.message);\n        return;\n      }\n    });\n\n    function changePage(page: number, perPage?: number) {\n      self.page = page;\n      perPage && (self.perPage = perPage);\n    }\n\n    function selectAction(action: Action) {\n      self.selectedAction = action;\n    }\n\n    const saveRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* saveRemote(\n      api: Api,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options\n        };\n\n        self.markSaving(true);\n        const json: Payload = yield getEnv(self).fetcher(api, data, options);\n        self.markSaving(false);\n\n        if (!isEmpty(json.data) || json.ok) {\n          self.updateData(\n            json.data,\n            {\n              __saved: Date.now()\n            },\n            !!api && (api as ApiObject).replaceData\n          );\n          self.updatedAt = Date.now();\n        }\n\n        if (!json.ok) {\n          self.updateMessage(\n            json.msg || options.errorMessage || self.__('保存失败'),\n            true\n          );\n          getEnv(self).notify(\n            'error',\n            self.msg,\n            json.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: json.msgTimeout\n                }\n              : undefined\n          );\n          throw new ServerError(self.msg);\n        } else {\n          self.updateMessage(json.msg || options.successMessage);\n          self.msg && getEnv(self).notify('success', self.msg);\n        }\n        return json.data;\n      } catch (e) {\n        self.markSaving(false);\n\n        if (!isAlive(self) || self.disposed) {\n          return;\n        }\n\n        e.type !== 'ServerError' && getEnv(self).notify('error', e.message);\n        throw e;\n      }\n    });\n\n    const setFilterTogglable = (toggable: boolean, filterVisible?: boolean) => {\n      self.filterTogggable = toggable;\n\n      filterVisible !== void 0 && (self.filterVisible = filterVisible);\n    };\n\n    const setFilterVisible = (visible: boolean) => {\n      self.filterVisible = visible;\n    };\n\n    const setSelectedItems = (items: Array<any>) => {\n      self.selectedItems.replace(items);\n    };\n\n    const setUnSelectedItems = (items: Array<any>) => {\n      self.unSelectedItems.replace(items);\n    };\n\n    const setInnerModalOpened = (value: boolean) => {\n      self.hasInnerModalOpen = value;\n    };\n\n    const initFromScope = function (scope: any, source: string) {\n      let rowsData: Array<any> = resolveVariableAndFilter(\n        source,\n        scope,\n        '| raw'\n      );\n\n      if (!Array.isArray(rowsData)) {\n        return;\n      }\n\n      const data = {\n        ...self.pristine,\n        items: rowsData,\n        count: 0,\n        total: 0\n      };\n\n      self.items.replace(rowsData);\n      self.reInitData(data);\n    };\n\n    return {\n      setPristineQuery,\n      updateQuery,\n      fetchInitData,\n      changePage,\n      selectAction,\n      saveRemote,\n      setFilterTogglable,\n      setFilterVisible,\n      setSelectedItems,\n      setUnSelectedItems,\n      setInnerModalOpened,\n      initFromScope\n    };\n  });\n\nexport type ICRUDStore = typeof CRUDStore.Type;\n"
    ]
}