{
    "version": 3,
    "file": "table.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/table.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getParent,\n  SnapshotIn,\n  flow,\n  getEnv,\n  getRoot,\n  IAnyModelType,\n  isAlive\n} from 'mobx-state-tree';\nimport {iRendererStore} from './iRenderer';\nimport {resolveVariable} from '../utils/tpl-builtin';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport {\n  isBreakpoint,\n  createObject,\n  isObject,\n  isVisible,\n  guid,\n  findTree,\n  flattenTree,\n  eachTree,\n  difference,\n  immutableExtends,\n  extendObject\n} from '../utils/helper';\nimport {evalExpression} from '../utils/tpl';\n\nexport const Column = types\n  .model('Column', {\n    label: types.optional(types.frozen(), undefined),\n    type: types.optional(types.string, 'plain'),\n    name: types.maybe(types.string),\n    value: types.frozen(),\n    groupName: '',\n    toggled: false,\n    toggable: true,\n    expandable: false,\n    isPrimary: false,\n    searchable: types.maybe(types.frozen()),\n    sortable: false,\n    filterable: types.optional(types.frozen(), undefined),\n    fixed: '',\n    index: 0,\n    rawIndex: 0,\n    breakpoint: types.optional(types.frozen(), undefined),\n    pristine: types.optional(types.frozen(), undefined),\n    remark: types.optional(types.frozen(), undefined),\n    className: ''\n  })\n  .actions(self => ({\n    toggleToggle() {\n      self.toggled = !self.toggled;\n      const table = getParent(self, 2) as ITableStore;\n\n      if (!table.activeToggaleColumns.length) {\n        self.toggled = true;\n      }\n\n      table.persistSaveToggledColumns();\n    },\n    setToggled(value: boolean) {\n      self.toggled = value;\n    }\n  }));\n\nexport type IColumn = typeof Column.Type;\nexport type SColumn = SnapshotIn<typeof Column>;\n\nexport const Row = types\n  .model('Row', {\n    id: types.identifier,\n    parentId: '',\n    key: types.string,\n    pristine: types.frozen({} as any),\n    data: types.frozen({} as any),\n    rowSpans: types.frozen({} as any),\n    index: types.number,\n    newIndex: types.number,\n    expandable: false,\n    isHover: false,\n    children: types.optional(\n      types.array(types.late((): IAnyModelType => Row)),\n      []\n    ),\n    depth: types.number // 当前children位于第几层，便于使用getParent获取最顶层TableStore\n  })\n  .views(self => ({\n    get checked(): boolean {\n      return (getParent(self, self.depth * 2) as ITableStore).isSelected(\n        self as IRow\n      );\n    },\n\n    get modified() {\n      if (!self.data) {\n        return false;\n      }\n\n      return Object.keys(self.data).some(\n        key => !isEqual(self.data[key], self.pristine[key])\n      );\n    },\n\n    getDataWithModifiedChilden() {\n      let data = {\n        ...self.data\n      };\n\n      if (data.children && self.children) {\n        data.children = self.children.map(item =>\n          item.getDataWithModifiedChilden()\n        );\n      }\n\n      return data;\n    },\n\n    get expanded(): boolean {\n      const table = getParent(self, self.depth * 2) as ITableStore;\n\n      return !table.dragging && table.isExpanded(self as IRow);\n    },\n\n    get moved() {\n      return self.index !== self.newIndex;\n    },\n\n    get locals(): any {\n      return createObject(\n        extendObject((getParent(self, self.depth * 2) as ITableStore).data, {\n          index: self.index\n        }),\n        self.data\n      );\n    },\n\n    get checkable(): boolean {\n      const table = getParent(self, self.depth * 2) as ITableStore;\n      return table && table.itemCheckableOn\n        ? evalExpression(table.itemCheckableOn, (self as IRow).locals)\n        : true;\n    },\n\n    get draggable(): boolean {\n      const table = getParent(self, self.depth * 2) as ITableStore;\n      return table && table.itemDraggableOn\n        ? evalExpression(table.itemDraggableOn, (self as IRow).locals)\n        : true;\n    }\n  }))\n  .actions(self => ({\n    toggle() {\n      (getParent(self, self.depth * 2) as ITableStore).toggle(self as IRow);\n    },\n\n    toggleExpanded() {\n      (getParent(self, self.depth * 2) as ITableStore).toggleExpanded(\n        self as IRow\n      );\n    },\n\n    change(values: object, savePristine?: boolean) {\n      self.data = immutableExtends(self.data, values);\n      savePristine && (self.pristine = self.data);\n    },\n\n    reset() {\n      self.newIndex = self.index;\n      self.data = self.pristine;\n    },\n\n    setIsHover(value: boolean) {\n      self.isHover = value;\n    },\n\n    replaceWith(data: any) {\n      Object.keys(data).forEach(key => {\n        if (key !== 'id') {\n          (self as any)[key] = data[key];\n        }\n      });\n\n      if (Array.isArray(data.children)) {\n        const arr = data.children;\n        const pool = arr.concat();\n\n        // 把多的删了先\n        if (self.children.length > arr.length) {\n          self.children.splice(arr.length, self.children.length - arr.length);\n        }\n\n        let index = 0;\n        const len = self.children.length;\n        while (pool.length) {\n          const item = pool.shift()!;\n\n          if (index < len) {\n            self.children[index].replaceWith(item);\n          } else {\n            const row = Row.create(item);\n            self.children.push(row);\n          }\n          index++;\n        }\n      }\n    }\n  }));\n\nexport type IRow = typeof Row.Type;\nexport type SRow = SnapshotIn<typeof Row>;\n\nexport const TableStore = iRendererStore\n  .named('TableStore')\n  .props({\n    columns: types.array(Column),\n    rows: types.array(Row),\n    selectedRows: types.array(types.reference(Row)),\n    expandedRows: types.array(types.reference(Row)),\n    primaryField: 'id',\n    orderBy: '',\n    orderDir: types.optional(\n      types.union(types.literal('asc'), types.literal('desc')),\n      'asc'\n    ),\n    draggable: false,\n    dragging: false,\n    selectable: false,\n    multiple: true,\n    footable: types.frozen(),\n    expandConfig: types.frozen(),\n    isNested: false,\n    columnsTogglable: types.optional(\n      types.union(types.boolean, types.literal('auto')),\n      'auto'\n    ),\n    itemCheckableOn: '',\n    itemDraggableOn: '',\n    hideCheckToggler: false,\n    combineNum: 0\n  })\n  .views(self => {\n    function getFilteredColumns() {\n      return self.columns.filter(\n        item =>\n          isVisible(item.pristine, self.data) &&\n          (item.type === '__checkme'\n            ? self.selectable &&\n              !self.dragging &&\n              !self.hideCheckToggler &&\n              self.rows.length\n            : item.type === '__dragme'\n            ? self.dragging\n            : item.type === '__expandme'\n            ? (getFootableColumns().length || self.isNested) && !self.dragging\n            : (item.toggled || !item.toggable) &&\n              (!self.footable ||\n                !item.breakpoint ||\n                !isBreakpoint(item.breakpoint)))\n      );\n    }\n\n    function getFootableColumns() {\n      return self.columns.filter(item =>\n        item.type === '__checkme' ||\n        item.type === '__dragme' ||\n        item.type === '__expandme'\n          ? false\n          : (item.toggled || !item.toggable) &&\n            self.footable &&\n            item.breakpoint &&\n            isBreakpoint(item.breakpoint)\n      );\n    }\n\n    function getLeftFixedColumns() {\n      if (self.dragging) {\n        return [];\n      }\n\n      let columns = getFilteredColumns().filter(item => item.fixed === 'left');\n\n      // 有才带过去，没有就不带了\n      if (columns.length) {\n        columns = getFilteredColumns().filter(\n          item => item.fixed === 'left' || /^__/.test(item.type)\n        );\n      }\n\n      return columns;\n    }\n\n    function getRightFixedColumns() {\n      if (self.dragging) {\n        return [];\n      }\n\n      return getFilteredColumns().filter(item => item.fixed === 'right');\n    }\n\n    function isSelected(row: IRow): boolean {\n      return !!~self.selectedRows.indexOf(row);\n    }\n\n    function isExpanded(row: IRow): boolean {\n      return !!~self.expandedRows.indexOf(row);\n    }\n\n    function getTogglable() {\n      if (self.columnsTogglable === 'auto') {\n        return self.columns.filter(item => !/^__/.test(item.type)).length > 5;\n      }\n\n      return self.columnsTogglable;\n    }\n\n    function getToggableColumns() {\n      return self.columns.filter(\n        item => isVisible(item.pristine, self.data) && item.toggable !== false\n      );\n    }\n\n    function getActiveToggableColumns() {\n      return getToggableColumns().filter(item => item.toggled);\n    }\n\n    function getModifiedRows(rows: IRow[] = [], modifiedRows: IRow[] = []) {\n      rows = rows && rows.length ? rows : self.rows;\n      rows.forEach((item: IRow) => {\n        if (item.children && item.children.length) {\n          getModifiedRows(item.children, modifiedRows);\n        }\n        let diff = difference(item.data, item.pristine);\n        let hasDifference = Object.keys(diff).length;\n        if (hasDifference) {\n          modifiedRows.push(item);\n        }\n      });\n      return modifiedRows;\n    }\n\n    function getModified() {\n      return getModifiedRows().length;\n    }\n\n    function getMovedRows() {\n      return flattenTree(self.rows).filter((item: IRow) => item.moved);\n    }\n\n    function getMoved() {\n      return getMovedRows().length;\n    }\n\n    function getHoverIndex(): number {\n      return self.rows.findIndex(item => item.isHover);\n    }\n\n    function getUnSelectedRows() {\n      return self.rows.filter(item => !item.checked);\n    }\n\n    function getData(superData: any): any {\n      return createObject(superData, {\n        items: self.rows.map(item => item.data),\n        selectedItems: self.selectedRows.map(item => item.data),\n        unSelectedItems: getUnSelectedRows().map(item => item.data)\n      });\n    }\n\n    function getColumnGroup(): Array<{\n      label: string;\n      index: number;\n      colSpan: number;\n      has: Array<any>;\n    }> {\n      const columsn = getFilteredColumns();\n      const len = columsn.length;\n\n      if (!len) {\n        return [];\n      }\n\n      const result: Array<{\n        label: string;\n        index: number;\n        colSpan: number;\n        has: Array<any>;\n      }> = [\n        {\n          label: columsn[0].groupName,\n          colSpan: 1,\n          index: columsn[0].index,\n          has: [columsn[0]]\n        }\n      ];\n\n      //  如果是勾选栏，让它和下一列合并。\n      if (columsn[0].type === '__checkme' && columsn[1]) {\n        result[0].label = columsn[1].groupName;\n      }\n\n      for (let i = 1; i < len; i++) {\n        let prev = result[result.length - 1];\n        const current = columsn[i];\n\n        if (current.groupName === prev.label) {\n          prev.colSpan++;\n          prev.has.push(current);\n        } else {\n          result.push({\n            label: current.groupName,\n            colSpan: 1,\n            index: current.index,\n            has: [current]\n          });\n        }\n      }\n\n      if (result.length === 1 && !result[0].label) {\n        result.pop();\n      }\n\n      return result;\n    }\n\n    return {\n      get filteredColumns() {\n        return getFilteredColumns();\n      },\n\n      get footableColumns() {\n        return getFootableColumns();\n      },\n\n      get leftFixedColumns() {\n        return getLeftFixedColumns();\n      },\n\n      get rightFixedColumns() {\n        return getRightFixedColumns();\n      },\n\n      get toggableColumns() {\n        return getToggableColumns();\n      },\n\n      get activeToggaleColumns() {\n        return getActiveToggableColumns();\n      },\n\n      get someChecked() {\n        return !!self.selectedRows.length;\n      },\n\n      get allChecked(): boolean {\n        return !!(\n          self.selectedRows.length ===\n            (self as ITableStore).checkableRows.length &&\n          (self as ITableStore).checkableRows.length\n        );\n      },\n\n      isSelected,\n\n      get allExpanded() {\n        return !!(\n          self.expandedRows.length === self.rows.length && self.rows.length\n        );\n      },\n\n      isExpanded,\n\n      get toggable() {\n        return getTogglable();\n      },\n\n      get modified() {\n        return getModified();\n      },\n\n      get modifiedRows() {\n        return getModifiedRows();\n      },\n\n      get unSelectedRows() {\n        return getUnSelectedRows();\n      },\n\n      get checkableRows() {\n        return self.rows.filter(item => item.checkable);\n      },\n\n      get moved() {\n        return getMoved();\n      },\n\n      get movedRows() {\n        return getMovedRows();\n      },\n\n      get hoverIndex() {\n        return getHoverIndex();\n      },\n\n      getData,\n\n      get columnGroup() {\n        return getColumnGroup();\n      },\n\n      getRowById(id: string) {\n        return findTree(self.rows, item => item.id === id);\n      }\n    };\n  })\n  .actions(self => {\n    function update(config: Partial<STableStore>) {\n      config.primaryField !== void 0 &&\n        (self.primaryField = config.primaryField);\n      config.selectable !== void 0 && (self.selectable = config.selectable);\n      config.columnsTogglable !== void 0 &&\n        (self.columnsTogglable = config.columnsTogglable);\n      config.draggable !== void 0 && (self.draggable = config.draggable);\n\n      if (typeof config.orderBy === 'string') {\n        setOrderByInfo(\n          config.orderBy,\n          config.orderDir === 'desc' ? 'desc' : 'asc'\n        );\n      }\n\n      config.multiple !== void 0 && (self.multiple = config.multiple);\n      config.footable !== void 0 && (self.footable = config.footable);\n      config.expandConfig !== void 0 &&\n        (self.expandConfig = config.expandConfig);\n      config.itemCheckableOn !== void 0 &&\n        (self.itemCheckableOn = config.itemCheckableOn);\n      config.itemDraggableOn !== void 0 &&\n        (self.itemDraggableOn = config.itemDraggableOn);\n      config.hideCheckToggler !== void 0 &&\n        (self.hideCheckToggler = !!config.hideCheckToggler);\n\n      config.combineNum !== void 0 &&\n        (self.combineNum = parseInt(config.combineNum as any, 10) || 0);\n\n      if (config.columns && Array.isArray(config.columns)) {\n        let columns: Array<SColumn> = config.columns.concat();\n        if (!columns.length) {\n          columns.push({\n            type: 'text',\n            label: '空'\n          });\n        }\n\n        columns.unshift({\n          type: '__expandme',\n          toggable: false,\n          className: 'Table-expandCell'\n        });\n\n        columns.unshift({\n          type: '__checkme',\n          fixed: 'left',\n          toggable: false,\n          className: 'Table-checkCell'\n        });\n\n        columns.unshift({\n          type: '__dragme',\n          toggable: false,\n          className: 'Table-dragCell'\n        });\n\n        columns = columns.map((item, index) => ({\n          ...item,\n          index,\n          rawIndex: index - 3,\n          type: item.type || 'plain',\n          pristine: item,\n          toggled: item.toggled !== false,\n          breakpoint: item.breakpoint,\n          isPrimary: index === 3\n        }));\n\n        self.columns.replace(columns as any);\n      }\n    }\n\n    function combineCell(arr: Array<SRow>, keys: Array<string>): Array<SRow> {\n      if (!keys.length || !arr.length) {\n        return arr;\n      }\n\n      const key: string = keys.shift() as string;\n      let rowIndex = 0;\n      let row = arr[rowIndex];\n      row.rowSpans[key] = 1;\n      let value = resolveVariable(key, row.data);\n      for (let i = 1, len = arr.length; i < len; i++) {\n        const current = arr[i];\n        if (isEqual(resolveVariable(key, current.data), value)) {\n          row.rowSpans[key] += 1;\n          current.rowSpans[key] = 0;\n        } else {\n          if (row.rowSpans[key] > 1) {\n            combineCell(arr.slice(rowIndex, i), keys.concat());\n          }\n\n          rowIndex = i;\n          row = current;\n          row.rowSpans[key] = 1;\n          value = resolveVariable(key, row.data);\n        }\n      }\n\n      if (row.rowSpans[key] > 1 && keys.length) {\n        combineCell(arr.slice(rowIndex, arr.length), keys.concat());\n      }\n\n      return arr;\n    }\n\n    function autoCombineCell(\n      arr: Array<SRow>,\n      columns: Array<IColumn>,\n      maxCount: number\n    ): Array<SRow> {\n      if (!columns.length || !maxCount || !arr.length) {\n        return arr;\n      }\n\n      const keys: Array<string> = [];\n      for (let i = 0; i < maxCount; i++) {\n        const column = columns[i];\n\n        // maxCount 可能比实际配置的 columns 还有多。\n        if (!column) {\n          break;\n        }\n\n        if ('__' === column.type.substring(0, 2)) {\n          maxCount++;\n          continue;\n        }\n\n        const key = column.name;\n        if (!key) {\n          break;\n        }\n        keys.push(key);\n      }\n\n      return combineCell(arr, keys);\n    }\n\n    function initChildren(\n      children: Array<any>,\n      depth: number,\n      pindex: number,\n      parentId: string\n    ): any {\n      depth += 1;\n      return children.map((item, key) => {\n        item = isObject(item)\n          ? item\n          : {\n              item\n            };\n        const id = guid();\n\n        return {\n          // id: String(item && (item as any)[self.primaryField] || `${pindex}-${depth}-${key}`),\n          id: id,\n          parentId,\n          key: String(`${pindex}-${depth}-${key}`),\n          depth: depth,\n          index: key,\n          newIndex: key,\n          pristine: item,\n          data: item,\n          rowSpans: {},\n          children:\n            item && Array.isArray(item.children)\n              ? initChildren(item.children, depth, key, id)\n              : [],\n          expandable: !!(\n            (item && Array.isArray(item.children) && item.children.length) ||\n            (self.footable && self.footableColumns.length)\n          )\n        };\n      });\n    }\n\n    function initRows(\n      rows: Array<any>,\n      getEntryId?: (entry: any, index: number) => string\n    ) {\n      self.selectedRows.clear();\n      self.expandedRows.clear();\n\n      let arr: Array<SRow> = rows.map((item, key) => {\n        let id = getEntryId ? getEntryId(item, key) : guid();\n        return {\n          // id: getEntryId ? getEntryId(item, key) : String(item && (item as any)[self.primaryField] || `${key}-1-${key}`),\n          id: id,\n          key: String(`${key}-1-${key}`),\n          depth: 1, // 最大父节点默认为第一层，逐层叠加\n          index: key,\n          newIndex: key,\n          pristine: item,\n          data: item,\n          rowSpans: {},\n          children:\n            item && Array.isArray(item.children)\n              ? initChildren(item.children, 1, key, id)\n              : [],\n          expandable: !!(\n            (item && Array.isArray(item.children) && item.children.length) ||\n            (self.footable && self.footableColumns.length)\n          )\n        };\n      });\n\n      if (self.combineNum) {\n        arr = autoCombineCell(arr, self.columns, self.combineNum);\n      }\n\n      replaceRow(arr);\n      self.isNested = self.rows.some(item => item.children.length);\n\n      const expand = self.footable && self.footable.expand;\n      if (\n        expand === 'first' ||\n        (self.expandConfig && self.expandConfig.expand === 'first')\n      ) {\n        self.rows.length && self.expandedRows.push(self.rows[0]);\n      } else if (\n        (expand === 'all' && !self.footable.accordion) ||\n        (self.expandConfig &&\n          self.expandConfig.expand === 'all' &&\n          !self.expandConfig.accordion)\n      ) {\n        self.expandedRows.replace(self.rows);\n      }\n\n      self.dragging = false;\n    }\n\n    // 尽可能的复用 row\n    function replaceRow(arr: Array<SRow>) {\n      const pool = arr.concat();\n\n      // 把多的删了先\n      if (self.rows.length > arr.length) {\n        self.rows.splice(arr.length, self.rows.length - arr.length);\n      }\n\n      let index = 0;\n      const len = self.rows.length;\n      while (pool.length) {\n        const item = pool.shift()!;\n\n        if (index < len) {\n          self.rows[index].replaceWith(item);\n        } else {\n          const row = Row.create(item);\n          self.rows.push(row);\n        }\n        index++;\n      }\n    }\n\n    function updateSelected(selected: Array<any>, valueField?: string) {\n      self.selectedRows.clear();\n      self.rows.forEach(item => {\n        if (~selected.indexOf(item.pristine)) {\n          self.selectedRows.push(item);\n        } else if (\n          find(\n            selected,\n            a =>\n              a[valueField || 'value'] &&\n              a[valueField || 'value'] == item.pristine[valueField || 'value']\n          )\n        ) {\n          self.selectedRows.push(item);\n        }\n      });\n    }\n\n    function toggleAll() {\n      if (self.allChecked) {\n        self.selectedRows.clear();\n      } else {\n        self.selectedRows.replace(self.checkableRows);\n      }\n    }\n\n    function toggle(row: IRow) {\n      if (!row.checkable) {\n        return;\n      }\n\n      const idx = self.selectedRows.indexOf(row);\n\n      if (self.multiple) {\n        ~idx ? self.selectedRows.splice(idx, 1) : self.selectedRows.push(row);\n      } else {\n        ~idx\n          ? self.selectedRows.splice(idx, 1)\n          : self.selectedRows.replace([row]);\n      }\n    }\n\n    function clear() {\n      self.selectedRows.clear();\n    }\n\n    function toggleExpandAll() {\n      if (self.allExpanded) {\n        self.expandedRows.clear();\n      } else {\n        self.expandedRows.replace(self.rows);\n      }\n    }\n\n    function toggleExpanded(row: IRow) {\n      const idx = self.expandedRows.indexOf(row);\n\n      if (~idx) {\n        self.expandedRows.splice(idx, 1);\n      } else if (self.footable && self.footable.accordion) {\n        self.expandedRows.replace([row]);\n      } else if (self.expandConfig && self.expandConfig.accordion) {\n        let rows = self.expandedRows.filter(item => item.depth !== row.depth);\n        rows.push(row);\n        self.expandedRows.replace(rows);\n      } else {\n        self.expandedRows.push(row);\n      }\n    }\n\n    function collapseAllAtDepth(depth: number) {\n      let rows = self.expandedRows.filter(item => item.depth !== depth);\n      self.expandedRows.replace(rows);\n    }\n\n    function setOrderByInfo(key: string, direction: 'asc' | 'desc') {\n      self.orderBy = key;\n      self.orderDir = direction;\n    }\n\n    function reset() {\n      self.rows.forEach(item => item.reset());\n      let rows = self.rows.concat();\n      eachTree(rows, item => {\n        if (item.children) {\n          let rows = item.children.concat().sort((a, b) => a.index - b.index);\n          rows.forEach(item => item.reset());\n          item.children.replace(rows);\n        }\n      });\n      rows.forEach(item => item.reset());\n      rows = rows.sort((a, b) => a.index - b.index);\n      self.rows.replace(rows);\n      self.dragging = false;\n    }\n\n    function toggleDragging() {\n      self.dragging = !self.dragging;\n    }\n\n    function stopDragging() {\n      self.dragging = false;\n    }\n\n    function exchange(fromIndex: number, toIndex: number, item?: IRow) {\n      item = item || self.rows[fromIndex];\n\n      if (item.parentId) {\n        const parent: IRow = self.getRowById(item.parentId) as any;\n        const offset = parent.children.indexOf(item) - fromIndex;\n        toIndex += offset;\n        fromIndex += offset;\n\n        const newRows = parent.children.concat();\n        newRows.splice(fromIndex, 1);\n        newRows.splice(toIndex, 0, item);\n        newRows.forEach((item, index) => (item.newIndex = index));\n        parent.children.replace(newRows);\n        return;\n      }\n\n      const newRows = self.rows.concat();\n      newRows.splice(fromIndex, 1);\n      newRows.splice(toIndex, 0, item);\n\n      newRows.forEach((item, index) => (item.newIndex = index));\n      self.rows.replace(newRows);\n    }\n\n    function persistSaveToggledColumns() {\n      const key =\n        location.pathname +\n        self.path +\n        self.toggableColumns.map(item => item.name || item.index).join('-');\n      localStorage.setItem(\n        key,\n        JSON.stringify(self.activeToggaleColumns.map(item => item.index))\n      );\n    }\n\n    return {\n      update,\n      initRows,\n      updateSelected,\n      toggleAll,\n      toggle,\n      toggleExpandAll,\n      toggleExpanded,\n      collapseAllAtDepth,\n      clear,\n      setOrderByInfo,\n      reset,\n      toggleDragging,\n      stopDragging,\n      exchange,\n\n      persistSaveToggledColumns,\n\n      // events\n      afterAttach() {\n        setTimeout(() => {\n          if (!isAlive(self)) {\n            return;\n          }\n          const key =\n            location.pathname +\n            self.path +\n            self.toggableColumns.map(item => item.name || item.index).join('-');\n          const data = localStorage.getItem(key);\n\n          if (data) {\n            const selectedColumns = JSON.parse(data);\n            self.toggableColumns.forEach(item =>\n              item.setToggled(!!~selectedColumns.indexOf(item.index))\n            );\n          }\n        }, 200);\n      }\n    };\n  });\n\nexport type ITableStore = typeof TableStore.Type;\nexport type STableStore = SnapshotIn<typeof TableStore>;\n"
    ]
}