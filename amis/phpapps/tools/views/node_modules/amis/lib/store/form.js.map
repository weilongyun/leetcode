{
    "version": 3,
    "file": "form.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/form.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getEnv,\n  flow,\n  getRoot,\n  detach,\n  destroy,\n  isAlive\n} from 'mobx-state-tree';\nimport debounce from 'lodash/debounce';\nimport {ServiceStore} from './service';\nimport {FormItemStore, IFormItemStore, SFormItemStore} from './formItem';\nimport {Api, ApiObject, fetchOptions, Payload} from '../types';\nimport {ServerError} from '../utils/errors';\nimport {\n  getVariable,\n  setVariable,\n  deleteVariable,\n  cloneObject,\n  createObject,\n  difference,\n  guid,\n  isEmpty,\n  mapObject\n} from '../utils/helper';\nimport {IComboStore} from './combo';\nimport isEqual from 'lodash/isEqual';\nimport {IRendererStore, getStoreById, removeStore} from '.';\n\nexport const FormStore = ServiceStore.named('FormStore')\n  .props({\n    inited: false,\n    validated: false,\n    submited: false,\n    submiting: false,\n    validating: false,\n    // items: types.optional(types.array(types.late(() => FormItemStore)), []),\n    itemsRef: types.optional(types.array(types.string), []),\n    canAccessSuperData: true,\n    persistData: false\n  })\n  .views(self => {\n    function getItems() {\n      return self.itemsRef.map(item => getStoreById(item) as IFormItemStore);\n    }\n\n    return {\n      get loading() {\n        return self.saving || self.fetching;\n      },\n\n      get items() {\n        return getItems();\n      },\n\n      get errors() {\n        let errors: {\n          [propName: string]: Array<string>;\n        } = {};\n\n        getItems().forEach(item => {\n          if (!item.valid) {\n            errors[item.name] = Array.isArray(errors[item.name])\n              ? errors[item.name].concat(item.errors)\n              : item.errors.concat();\n          }\n        });\n\n        return errors;\n      },\n\n      getValueByName(name: string) {\n        return getVariable(self.data, name, self.canAccessSuperData);\n      },\n\n      getPristineValueByName(name: string) {\n        return getVariable(self.pristine, name);\n      },\n\n      getItemById(id: string) {\n        return getItems().find(item => item.itemId === id);\n      },\n\n      getItemByName(name: string) {\n        return getItems().find(item => item.name === name);\n      },\n\n      getItemsByName(name: string) {\n        return getItems().filter(item => item.name === name);\n      },\n\n      get valid() {\n        return getItems().every(item => item.valid);\n      },\n\n      get isPristine() {\n        return isEqual(self.pristine, self.data);\n      }\n    };\n  })\n  .actions(self => {\n    function setValues(values: object, tag?: object, replace?: boolean) {\n      self.updateData(values, tag, replace);\n\n      // 如果数据域中有数据变化，就都reset一下，去掉之前残留的验证消息\n      self.items.forEach(item => item.reset());\n\n      // 同步 options\n      syncOptions();\n    }\n\n    function setValueByName(\n      name: string,\n      value: any,\n      isPristine: boolean = false,\n      force: boolean = false\n    ) {\n      // 没有变化就不跑了。\n      const origin = getVariable(self.data, name, false);\n\n      const prev = self.data;\n      const data = cloneObject(self.data);\n\n      if (value !== origin) {\n        if (prev.__prev) {\n          // 基于之前的 __prev 改\n          const prevData = cloneObject(prev.__prev);\n          setVariable(prevData, name, origin);\n          Object.defineProperty(data, '__prev', {\n            value: prevData,\n            enumerable: false,\n            configurable: false,\n            writable: false\n          });\n        } else {\n          Object.defineProperty(data, '__prev', {\n            value: {...prev},\n            enumerable: false,\n            configurable: false,\n            writable: false\n          });\n        }\n      } else if (!force) {\n        return;\n      }\n\n      setVariable(data, name, value);\n\n      if (isPristine) {\n        const pristine = cloneObject(self.pristine);\n        setVariable(pristine, name, value);\n        self.pristine = pristine;\n      }\n\n      if (!data.__pristine) {\n        Object.defineProperty(data, '__pristine', {\n          value: self.pristine,\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      }\n\n      self.data = data;\n\n      if (self.persistData) {\n        setPersistData();\n      }\n\n      // 同步 options\n      syncOptions();\n    }\n\n    function deleteValueByName(name: string) {\n      const prev = self.data;\n      const data = cloneObject(self.data);\n\n      if (prev.__prev) {\n        // 基于之前的 __prev 改\n        const prevData = cloneObject(prev.__prev);\n        setVariable(prevData, name, getVariable(prev, name));\n        Object.defineProperty(data, '__prev', {\n          value: prevData,\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      } else {\n        Object.defineProperty(data, '__prev', {\n          value: {...prev},\n          enumerable: false,\n          configurable: false,\n          writable: false\n        });\n      }\n\n      deleteVariable(data, name);\n      self.data = data;\n    }\n\n    function trimValues() {\n      let data = mapObject(self.data, (item: any) =>\n        typeof item === 'string' ? item.trim() : item\n      );\n      self.updateData(data);\n    }\n\n    const syncOptions = debounce(\n      () => self.items.forEach(item => item.syncOptions()),\n      250,\n      {\n        trailing: true,\n        leading: false\n      }\n    );\n\n    const saveRemote: (\n      api: Api,\n      data?: object,\n      options?: fetchOptions\n    ) => Promise<any> = flow(function* saveRemote(\n      api: Api,\n      data: object,\n      options: fetchOptions = {}\n    ) {\n      try {\n        options = {\n          method: 'post', // 默认走 post\n          ...options\n        };\n\n        if (options && options.beforeSend) {\n          let ret = options.beforeSend(data);\n\n          if (ret && ret.then) {\n            ret = yield ret;\n          }\n\n          if (ret === false) {\n            return;\n          }\n        }\n\n        self.markSaving(true);\n        const json: Payload = yield getEnv(self).fetcher(api, data, options);\n\n        // 失败也同样修改数据，如果有数据的话。\n        if (!isEmpty(json.data) || json.ok) {\n          self.updatedAt = Date.now();\n\n          setValues(\n            json.data,\n            {\n              __saved: Date.now()\n            },\n            !!(api as ApiObject).replaceData\n          );\n        }\n\n        if (!json.ok) {\n          // 验证错误\n          if (json.status === 422 && json.errors) {\n            const errors = json.errors;\n            Object.keys(errors).forEach((key: string) => {\n              const item = self.getItemById(key);\n\n              if (item) {\n                item.setError(errors[key]);\n              } else {\n                self\n                  .getItemsByName(key)\n                  .forEach(item => item.setError(errors[key]));\n              }\n            });\n\n            self.updateMessage(\n              json.msg ||\n                (options && options.errorMessage) ||\n                self.__('验证错误'),\n              true\n            );\n          } else {\n            self.updateMessage(\n              json.msg || (options && options.errorMessage),\n              true\n            );\n          }\n\n          throw new ServerError(self.msg, json);\n        } else {\n          if (options && options.onSuccess) {\n            const ret = options.onSuccess(json);\n\n            if (ret && ret.then) {\n              yield ret;\n            }\n          }\n          self.markSaving(false);\n          self.updateMessage(json.msg || (options && options.successMessage));\n          self.msg && getEnv(self).notify('success', self.msg);\n          return json.data;\n        }\n      } catch (e) {\n        self.markSaving(false);\n        // console.error(e.stack);`\n\n        if (!isAlive(self) || self.disposed) {\n          return;\n        }\n\n        if (e.type === 'ServerError') {\n          const result = (e as ServerError).response;\n          getEnv(self).notify(\n            'error',\n            e.message,\n            result.msgTimeout !== undefined\n              ? {\n                  closeButton: true,\n                  timeout: result.msgTimeout\n                }\n              : undefined\n          );\n        } else {\n          getEnv(self).notify('error', e.message);\n        }\n\n        throw e;\n      }\n    });\n\n    const submit: (\n      fn?: (values: object) => Promise<any>,\n      hooks?: Array<() => Promise<any>>,\n      failedMessage?: string\n    ) => Promise<any> = flow(function* submit(\n      fn: any,\n      hooks?: Array<() => Promise<any>>,\n      failedMessage?: string\n    ) {\n      self.submited = true;\n      self.submiting = true;\n\n      try {\n        let valid = yield validate(hooks);\n\n        if (!valid) {\n          const msg = failedMessage ?? self.__('表单验证失败，请仔细检查');\n          msg && getEnv(self).notify('error', msg);\n          throw new Error(self.__('验证失败'));\n        }\n\n        if (fn) {\n          const diff = difference(self.data, self.pristine);\n          const result = yield fn(\n            createObject(\n              createObject(self.data.__super, {\n                diff: diff,\n                __diff: diff,\n                pristine: self.pristine\n              }),\n              self.data\n            )\n          );\n          return result ?? self.data;\n        }\n\n        return self.data;\n      } finally {\n        self.submiting = false;\n      }\n    });\n\n    const validate: (\n      hooks?: Array<() => Promise<any>>,\n      forceValidate?: boolean\n    ) => Promise<boolean> = flow(function* validate(\n      hooks?: Array<() => Promise<any>>,\n      forceValidate?: boolean\n    ) {\n      self.validating = true;\n      self.validated = true;\n      const items = self.items.concat();\n      for (let i = 0, len = items.length; i < len; i++) {\n        let item = items[i] as IFormItemStore;\n\n        // 验证过，或者是 unique 的表单项，或者强制验证\n        if (!item.validated || item.unique || forceValidate) {\n          yield item.validate();\n        }\n      }\n\n      if (hooks && hooks.length) {\n        for (let i = 0, len = hooks.length; i < len; i++) {\n          yield hooks[i]();\n        }\n      }\n\n      self.validating = false;\n      return self.valid;\n    });\n\n    const validateFields: (fields: Array<string>) => Promise<boolean> = flow(\n      function* validateFields(fields: Array<string>) {\n        self.validating = true;\n        const items = self.items.concat();\n        let result: Array<boolean> = [];\n        for (let i = 0, len = items.length; i < len; i++) {\n          let item = items[i] as IFormItemStore;\n\n          if (~fields.indexOf(item.name)) {\n            result.push(yield item.validate());\n          }\n        }\n        self.validating = false;\n        return result.every(item => item);\n      }\n    );\n\n    function clearErrors() {\n      const items = self.items.concat();\n      items.forEach(item => item.reset());\n    }\n\n    function reset(cb?: (data: any) => void, resetData: boolean = true) {\n      if (resetData) {\n        self.data = self.pristine;\n      }\n\n      // 值可能变了，重新验证一次。\n      self.validated = false;\n      self.submited = false;\n      self.items.forEach(item => item.reset());\n      cb && cb(self.data);\n    }\n\n    function addFormItem(item: IFormItemStore) {\n      self.itemsRef.push(item.id);\n      // 默认值可能在原型上，把他挪到当前对象上。\n      setValueByName(item.name, item.value, false, false);\n    }\n\n    function removeFormItem(item: IFormItemStore) {\n      removeStore(item);\n    }\n\n    function setCanAccessSuperData(value: boolean = true) {\n      self.canAccessSuperData = value;\n    }\n\n    function setInited(value: boolean) {\n      self.inited = value;\n    }\n\n    const setPersistData = debounce(\n      () =>\n        localStorage.setItem(\n          location.pathname + self.path,\n          JSON.stringify(self.data)\n        ),\n      250,\n      {\n        trailing: true,\n        leading: false\n      }\n    );\n\n    function getPersistData() {\n      self.persistData = true;\n      let data = localStorage.getItem(location.pathname + self.path);\n      if (data) {\n        self.updateData(JSON.parse(data));\n      }\n    }\n\n    function clearPersistData() {\n      localStorage.removeItem(location.pathname + self.path);\n    }\n\n    function onChildStoreDispose(child: IFormItemStore) {\n      if (child.storeType === FormItemStore.name) {\n        const itemsRef = self.itemsRef.filter(id => id !== child.id);\n        self.itemsRef.replace(itemsRef);\n      }\n      self.removeChildId(child.id);\n    }\n\n    return {\n      setInited,\n      setValues,\n      setValueByName,\n      trimValues,\n      submit,\n      validate,\n      validateFields,\n      clearErrors,\n      saveRemote,\n      reset,\n      addFormItem,\n      removeFormItem,\n      syncOptions,\n      setCanAccessSuperData,\n      deleteValueByName,\n      getPersistData,\n      setPersistData,\n      clearPersistData,\n      onChildStoreDispose,\n      beforeDestroy() {\n        syncOptions.cancel();\n        setPersistData.cancel();\n      }\n    };\n  });\n\nexport type IFormStore = typeof FormStore.Type;\nexport {IFormItemStore};\n"
    ]
}