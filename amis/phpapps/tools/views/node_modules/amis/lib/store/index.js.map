{
    "version": 3,
    "file": "index.js",
    "sourceRoot": "",
    "sources": [
        "/src/store/index.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {\n  types,\n  getEnv,\n  detach,\n  setLivelynessChecking,\n  isAlive\n} from 'mobx-state-tree';\nimport 'setimmediate';\nimport {iRendererStore, IIRendererStore, SIRendererStore} from './iRenderer';\nimport {ServiceStore} from './service';\nimport {ComboStore} from './combo';\nimport {FormStore} from './form';\nimport {CRUDStore} from './crud';\nimport {TableStore} from './table';\nimport {ListStore} from './list';\nimport {ModalStore} from './modal';\nimport {TranslateFn} from '../locale';\nimport find from 'lodash/find';\nimport {IStoreNode} from './node';\nimport {FormItemStore} from './formItem';\n\nsetLivelynessChecking(\n  process.env.NODE_ENV === 'production' ? 'ignore' : 'error'\n);\n\nconst allowedStoreList = [\n  ServiceStore,\n  FormStore,\n  ComboStore,\n  CRUDStore,\n  TableStore,\n  ListStore,\n  ModalStore,\n  FormItemStore\n];\n\nexport const RendererStore = types\n  .model('RendererStore', {\n    storeType: 'RendererStore'\n  })\n  .views(self => ({\n    get fetcher() {\n      return getEnv(self).fetcher;\n    },\n\n    get notify() {\n      return getEnv(self).notify;\n    },\n\n    get isCancel(): (value: any) => boolean {\n      return getEnv(self).isCancel;\n    },\n\n    get __(): TranslateFn {\n      return getEnv(self).translate;\n    },\n    getStoreById(id: string) {\n      return getStoreById(id);\n    },\n\n    get stores() {\n      return stores;\n    }\n  }))\n  .actions(self => ({\n    addStore(store: {\n      storeType: string;\n      id: string;\n      path: string;\n      parentId?: string;\n      [propName: string]: any;\n    }): IStoreNode {\n      const factory = find(\n        allowedStoreList,\n        item => item.name === store.storeType\n      )!;\n\n      return addStore(factory.create(store as any, getEnv(self)));\n    },\n\n    removeStore(store: IStoreNode) {\n      // store.dispose();\n      removeStore(store);\n    }\n  }));\n\nexport type IRendererStore = typeof RendererStore.Type;\nexport {iRendererStore, IIRendererStore};\nexport const RegisterStore = function (store: any) {\n  allowedStoreList.push(store as any);\n};\n\nconst stores: {\n  [propName: string]: IStoreNode;\n} = {};\n\nexport function addStore(store: IStoreNode) {\n  if (stores[store.id]) {\n    return stores[store.id];\n  }\n\n  stores[store.id] = store;\n\n  // drawer dialog 不加进去，否则有些容器就不会自我销毁 store 了。\n  if (store.parentId && !/(?:dialog|drawer)$/.test(store.path)) {\n    const parent = stores[store.parentId] as IIRendererStore;\n    parent.addChildId(store.id);\n  }\n\n  cleanUp();\n  return store;\n}\n\nconst toDelete: Array<string> = [];\n\nexport function removeStore(store: IStoreNode) {\n  const id = store.id;\n  toDelete.push(id);\n  store.dispose(cleanUp);\n}\n\nfunction cleanUp() {\n  let index = toDelete.length - 1;\n  while (index >= 0) {\n    const id = toDelete[index];\n    const store = stores[id];\n\n    if (store && !isAlive(store)) {\n      delete stores[id];\n      toDelete.splice(index, 1);\n    } else {\n      index--;\n    }\n  }\n}\n\nexport function getStoreById(id: string) {\n  return stores[id];\n}\n"
    ]
}