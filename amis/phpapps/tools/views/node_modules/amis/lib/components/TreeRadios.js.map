{
    "version": 3,
    "file": "TreeRadios.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/TreeRadios.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import {themeable} from '../theme';\nimport React from 'react';\nimport {uncontrollable} from 'uncontrollable';\nimport Checkbox from './Checkbox';\nimport {Option} from './Select';\nimport {autobind, eachTree, everyTree} from '../utils/helper';\nimport Spinner from './Spinner';\nimport {BaseRadiosProps, BaseRadios} from './ListRadios';\nimport {localeable} from '../locale';\nimport {Icon} from './icons';\n\nexport interface TreeRadiosProps extends BaseRadiosProps {\n  expand: 'all' | 'first' | 'root' | 'none';\n}\n\nexport interface TreeRadiosState {\n  expanded: Array<string>;\n}\n\nexport class TreeRadios extends BaseRadios<TreeRadiosProps, TreeRadiosState> {\n  state: TreeRadiosState = {\n    expanded: []\n  };\n\n  static defaultProps = {\n    ...BaseRadios.defaultProps,\n    expand: 'first' as 'first'\n  };\n\n  componentDidMount() {\n    this.syncExpanded();\n  }\n\n  componentDidUpdate(prevProps: TreeRadiosProps) {\n    const props = this.props;\n\n    if (\n      !this.state.expanded.length &&\n      (props.expand !== prevProps.expand || props.options !== prevProps.options)\n    ) {\n      this.syncExpanded();\n    }\n  }\n\n  syncExpanded() {\n    const options = this.props.options;\n    const mode = this.props.expand;\n    const expanded: Array<string> = [];\n\n    if (!Array.isArray(options)) {\n      return;\n    }\n\n    if (mode === 'first' || mode === 'root') {\n      options.every((option, index) => {\n        if (Array.isArray(option.children)) {\n          expanded.push(`${index}`);\n          return mode === 'root';\n        }\n        return true;\n      });\n    } else if (mode === 'all') {\n      everyTree(options, (option, index, level, paths, indexes) => {\n        if (Array.isArray(option.children)) {\n          expanded.push(`${indexes.concat(index).join('-')}`);\n        }\n        return true;\n      });\n    }\n\n    this.setState({expanded});\n  }\n\n  toggleCollapsed(option: Option, index: string) {\n    const onDeferLoad = this.props.onDeferLoad;\n    const expanded = this.state.expanded.concat();\n    const idx = expanded.indexOf(index);\n\n    if (~idx) {\n      expanded.splice(idx, 1);\n    } else {\n      expanded.push(index);\n    }\n\n    this.setState(\n      {\n        expanded: expanded\n      },\n      option.defer && onDeferLoad ? () => onDeferLoad(option) : undefined\n    );\n  }\n\n  renderItem(option: Option, index: number, indexes: Array<number> = []) {\n    const {\n      disabled,\n      classnames: cx,\n      itemClassName,\n      itemRender,\n      showRadio\n    } = this.props;\n    const id = indexes.join('-');\n    let hasChildren = Array.isArray(option.children) && option.children.length;\n\n    const checked = option === this.selected;\n    const expaned = !!~this.state.expanded.indexOf(id);\n\n    return (\n      <div\n        key={index}\n        className={cx(\n          'TreeRadios-item',\n          disabled || option.disabled || (option.defer && option.loading)\n            ? 'is-disabled'\n            : '',\n          expaned ? 'is-expanded' : '',\n          checked ? 'is-active' : ''\n        )}\n      >\n        <div\n          className={cx(\n            'TreeRadios-itemInner',\n            itemClassName,\n            option.className,\n            checked ? 'is-active' : ''\n          )}\n          onClick={() => this.toggleOption(option)}\n        >\n          {hasChildren || option.defer ? (\n            <a\n              onClick={(e: React.MouseEvent<any>) => {\n                e.stopPropagation();\n                this.toggleCollapsed(option, id);\n              }}\n              className={cx('Table-expandBtn', expaned ? 'is-active' : '')}\n            >\n              <Icon icon=\"right-arrow-bold\" className=\"icon\" />\n            </a>\n          ) : null}\n\n          <div className={cx('TreeRadios-itemLabel')}>{itemRender(option)}</div>\n\n          {option.defer && option.loading ? <Spinner show size=\"sm\" /> : null}\n\n          {(!option.defer || option.loaded) &&\n          option.value !== undefined &&\n          showRadio !== false ? (\n            <Checkbox\n              type=\"radio\"\n              size=\"sm\"\n              checked={checked}\n              disabled={disabled || option.disabled}\n            />\n          ) : null}\n        </div>\n        {hasChildren ? (\n          <div className={cx('TreeRadios-sublist')}>\n            {option.children!.map((option, key) =>\n              this.renderItem(option, key, indexes.concat(key))\n            )}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      value,\n      options,\n      className,\n      placeholder,\n      classnames: cx,\n      option2value,\n      translate: __\n    } = this.props;\n\n    this.selected = BaseRadios.resolveSelected(value, options, option2value);\n    let body: Array<React.ReactNode> = [];\n\n    if (Array.isArray(options) && options.length) {\n      body = options.map((option, key) => this.renderItem(option, key, [key]));\n    }\n\n    return (\n      <div className={cx('TreeRadios', className)}>\n        {body && body.length ? (\n          body\n        ) : (\n          <div className={cx('TreeRadios-placeholder')}>{__(placeholder)}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default themeable(\n  localeable(\n    uncontrollable(TreeRadios, {\n      value: 'onChange'\n    })\n  )\n);\n"
    ]
}