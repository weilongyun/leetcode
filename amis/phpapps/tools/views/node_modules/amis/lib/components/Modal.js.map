{
    "version": 3,
    "file": "Modal.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Modal.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Modal\n * @description\n * @author fex\n */\n\nimport React from 'react';\nimport Transition, {\n  ENTERED,\n  ENTERING,\n  EXITING\n} from 'react-transition-group/Transition';\nimport {Portal} from 'react-overlays';\nimport {current, addModal, removeModal} from './ModalManager';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {Icon} from './icons';\nimport {LocaleProps, localeable} from '../locale';\n\nexport interface ModalProps extends ThemeProps, LocaleProps {\n  className?: string;\n  contentClassName?: string;\n  size?: any;\n  overlay?: boolean;\n  onHide: (e: any) => void;\n  closeOnEsc?: boolean;\n  container?: any;\n  show?: boolean;\n  disabled?: boolean;\n  onExited?: () => void;\n  onEntered?: () => void;\n}\nexport interface ModalState {}\nconst fadeStyles: {\n  [propName: string]: string;\n} = {\n  [ENTERING]: 'in',\n  [ENTERED]: 'in',\n  [EXITING]: 'out'\n};\nexport class Modal extends React.Component<ModalProps, ModalState> {\n  static defaultProps = {\n    container: document.body,\n    size: '',\n    overlay: true\n  };\n\n  static Header = themeable(\n    localeable(\n      ({\n        classnames: cx,\n        className,\n        showCloseButton,\n        onClose,\n        children,\n        classPrefix,\n        translate: __,\n        ...rest\n      }: ThemeProps &\n        LocaleProps & {\n          className?: string;\n          showCloseButton?: boolean;\n          onClose?: () => void;\n          children?: React.ReactNode;\n        } & React.HTMLAttributes<HTMLDivElement>) => (\n        <div {...rest} className={cx('Modal-header', className)}>\n          {showCloseButton !== false ? (\n            <a\n              data-tooltip={__('关闭弹窗')}\n              data-position=\"left\"\n              onClick={onClose}\n              className={cx('Modal-close')}\n            >\n              <Icon icon=\"close\" className=\"icon\" />\n            </a>\n          ) : null}\n          {children}\n        </div>\n      )\n    )\n  );\n\n  static Title = themeable(\n    ({\n      classnames: cx,\n      className,\n      children,\n      classPrefix,\n      ...rest\n    }: ThemeProps & {\n      className?: string;\n      children?: React.ReactNode;\n    } & React.HTMLAttributes<HTMLDivElement>) => (\n      <div {...rest} className={cx('Modal-title', className)}>\n        {children}\n      </div>\n    )\n  );\n\n  static Body = themeable(\n    ({\n      classnames: cx,\n      className,\n      children,\n      classPrefix,\n      ...rest\n    }: ThemeProps & {\n      className?: string;\n      children?: React.ReactNode;\n    } & React.HTMLAttributes<HTMLDivElement>) => (\n      <div {...rest} className={cx('Modal-body', className)}>\n        {children}\n      </div>\n    )\n  );\n\n  static Footer = themeable(\n    ({\n      classnames: cx,\n      className,\n      children,\n      classPrefix,\n      ...rest\n    }: ThemeProps & {\n      className?: string;\n      children?: React.ReactNode;\n    } & React.HTMLAttributes<HTMLDivElement>) => (\n      <div {...rest} className={cx('Modal-footer', className)}>\n        {children}\n      </div>\n    )\n  );\n\n  componentDidMount() {\n    if (this.props.show) {\n      this.handleEntered();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.show) {\n      this.handleExited();\n    }\n  }\n\n  handleEnter = () => {\n    document.body.classList.add(`is-modalOpened`);\n    if (document.body.scrollHeight > window.innerHeight) {\n      document.body.classList.add(`has-scrollbar`);\n    }\n  };\n\n  handleEntered = () => {\n    const onEntered = this.props.onEntered;\n\n    onEntered && onEntered();\n  };\n  handleExited = () => {\n    const onExited = this.props.onExited;\n    onExited && onExited();\n    setTimeout(() => {\n      if (!document.querySelector('.amis-dialog-widget')) {\n        document.body.classList.remove(`is-modalOpened`);\n        document.body.classList.remove(`has-scrollbar`);\n      }\n    }, 200);\n  };\n\n  modalRef = (ref: any) => {\n    const {classPrefix: ns} = this.props;\n    if (ref) {\n      addModal(this);\n      (ref as HTMLElement).classList.add(`${ns}Modal--${current()}th`);\n    } else {\n      removeModal();\n    }\n  };\n\n  render() {\n    const {\n      className,\n      contentClassName,\n      children,\n      container,\n      show,\n      size,\n      overlay,\n      classnames: cx\n    } = this.props;\n\n    return (\n      // @ts-ignore\n      <Portal container={container}>\n        <Transition\n          mountOnEnter\n          unmountOnExit\n          in={show}\n          timeout={500}\n          onEnter={this.handleEnter}\n          onExited={this.handleExited}\n          onEntered={this.handleEntered}\n        >\n          {(status: string) => (\n            <div\n              ref={this.modalRef}\n              role=\"dialog\"\n              className={cx(\n                `amis-dialog-widget Modal`,\n                {\n                  [`Modal--${size}`]: size\n                },\n                className\n              )}\n            >\n              {overlay ? (\n                <div className={cx(`Modal-overlay`, fadeStyles[status])} />\n              ) : null}\n              <div\n                className={cx(\n                  `Modal-content`,\n                  contentClassName,\n                  fadeStyles[status]\n                )}\n              >\n                {children}\n              </div>\n            </div>\n          )}\n        </Transition>\n      </Portal>\n    );\n  }\n}\n\nconst FinalModal = themeable(localeable(Modal));\n\nexport default FinalModal as typeof FinalModal & {\n  Header: typeof Modal.Header;\n  Title: typeof Modal.Title;\n  Body: typeof Modal.Body;\n  Footer: typeof Modal.Footer;\n};\n"
    ]
}