{
    "version": 3,
    "file": "Value.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/condition-builder/Value.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FieldSimple, OperatorType} from './types';\nimport {ThemeProps, themeable} from '../../theme';\nimport InputBox from '../InputBox';\nimport NumberInput from '../NumberInput';\nimport DatePicker from '../DatePicker';\nimport Select from '../Select';\nimport Switch from '../Switch';\n\nexport interface ValueProps extends ThemeProps {\n  value: any;\n  onChange: (value: any) => void;\n  field: FieldSimple;\n  op?: OperatorType;\n}\n\nexport class Value extends React.Component<ValueProps> {\n  render() {\n    const {classnames: cx, field, value, onChange, op} = this.props;\n    let input: JSX.Element | undefined = undefined;\n\n    if (field.type === 'text') {\n      input = (\n        <InputBox\n          value={value ?? field.defaultValue}\n          onChange={onChange}\n          placeholder={field.placeholder}\n        />\n      );\n    } else if (field.type === 'number') {\n      input = (\n        <NumberInput\n          placeholder={field.placeholder || '请输入数字'}\n          min={field.minimum}\n          max={field.maximum}\n          value={value ?? field.defaultValue}\n          onChange={onChange}\n        />\n      );\n    } else if (field.type === 'date') {\n      input = (\n        <DatePicker\n          placeholder={field.placeholder || '请选择日期'}\n          format={field.format || 'YYYY-MM-DD'}\n          inputFormat={field.inputFormat || 'YYYY-MM-DD'}\n          value={value ?? field.defaultValue}\n          onChange={onChange}\n          timeFormat=\"\"\n        />\n      );\n    } else if (field.type === 'time') {\n      input = (\n        <DatePicker\n          viewMode=\"time\"\n          placeholder={field.placeholder || '请选择时间'}\n          format={field.format || 'HH:mm'}\n          inputFormat={field.inputFormat || 'HH:mm'}\n          value={value ?? field.defaultValue}\n          onChange={onChange}\n          dateFormat=\"\"\n          timeFormat={field.format || 'HH:mm'}\n        />\n      );\n    } else if (field.type === 'datetime') {\n      input = (\n        <DatePicker\n          placeholder={field.placeholder || '请选择日期时间'}\n          format={field.format || ''}\n          inputFormat={field.inputFormat || 'YYYY-MM-DD HH:mm'}\n          value={value ?? field.defaultValue}\n          onChange={onChange}\n          timeFormat={field.timeFormat || 'HH:mm'}\n        />\n      );\n    } else if (field.type === 'select') {\n      input = (\n        <Select\n          simpleValue\n          options={field.options!}\n          value={value ?? field.defaultValue}\n          onChange={onChange}\n          multiple={op === 'select_any_in' || op === 'select_not_any_in'}\n        />\n      );\n    } else if (field.type === 'boolean') {\n      input = (\n        <Switch value={value ?? field.defaultValue} onChange={onChange} />\n      );\n    }\n\n    return <div className={cx('CBValue')}>{input}</div>;\n  }\n}\n\nexport default themeable(Value);\n"
    ]
}