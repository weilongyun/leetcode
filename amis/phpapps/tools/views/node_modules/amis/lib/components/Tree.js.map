{
    "version": 3,
    "file": "Tree.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Tree.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;;;GAIG;;;;AAEH,wDAA0B;AAC1B,0CAOyB;AACzB,mCAAsD;AACtD,kCAA6D;AAC7D,qDAAoD;AACpD,iCAA6B;AAC7B,gEAAkC;AAClC,oCAAkD;AA6ElD;IAAkC,wCAGjC;IAHD;;IA6rBA,CAAC;IA5pBC,yCAAkB,GAAlB;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC;YACZ,KAAK,EAAE,oBAAW,CAAC,KAAK,CAAC,KAAK,EAAE;gBAC9B,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,OAAO,EAAE,KAAK,CAAC,OAAO;aACvB,CAAC;YACF,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAElC,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;IACL,CAAC;IAED,gDAAyB,GAAzB,UAA0B,SAA4B;QACpD,IAAM,QAAQ,GAAQ,EAAE,CAAC;QAEzB,IACE,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK;YACpC,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,EACxC;YACA,QAAQ,CAAC,KAAK,GAAG,oBAAW,CAAC,SAAS,CAAC,KAAK,EAAE;gBAC5C,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,SAAS,EAAE,SAAS,CAAC,SAAS;gBAC9B,UAAU,EAAE,SAAS,CAAC,UAAU;gBAChC,OAAO,EAAE,SAAS,CAAC,OAAO;aAC3B,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,EAAE;YAC5C,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;IAED,mCAAY,GAAZ,UAAa,KAAwB;QACnC,cAAc;QACd,IAAI,QAAQ,GAAiC,EAAE,CAAC;QAC1C,IAAA,KAA+B,IAAI,CAAC,KAAK,EAAxC,WAAW,iBAAA,EAAE,aAAa,mBAAc,CAAC;QAEhD,iBAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,UAAC,IAAY,EAAE,KAAK,EAAE,KAAK;YACjD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACzC,IAAI,GAAG,GAAQ,IAAI,CAAC;gBAEpB,IAAI,aAAa,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,WAAW,EAAE;oBAC/D,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC7B;qBAAM,IAAI,WAAW,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,WAAW,EAAE;oBAClE,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC1B;qBAAM;oBACL,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC;oBAC5B,IAAI,CAAC,GAAG,IAAI,KAAK,IAAK,KAAK,CAAC,aAAwB,EAAE;wBACpD,GAAG,GAAG,IAAI,CAAC;qBACZ;iBACF;gBACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAoB,CAAC,CAAC,GAAG,GAAG,CAAC;aAClD;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAGD,qCAAc,GAAd,UAAe,IAAS;;QACtB,IAAI,CAAC,QAAQ,CAAC;YACZ,QAAQ,wCACH,IAAI,CAAC,KAAK,CAAC,QAAQ,gBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAoB,CAAC,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAC3D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAoB,CAAC,CACtC,MACF;SACF,CAAC,CAAC;IACL,CAAC;IAGD,kCAAW,GAAX;QADA,iBAYC;QAVC,IAAI,CAAC,QAAQ,CACX;YACE,KAAK,EAAE,EAAE;SACV,EACD;YACQ,IAAA,KAAoC,KAAI,CAAC,KAAK,EAA7C,UAAU,gBAAA,EAAE,SAAS,eAAA,EAAE,QAAQ,cAAc,CAAC;YAErD,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,mCAAY,GAAZ,UAAa,IAAS,EAAE,KAAW;QADnC,iBAYC;QAVC,IAAI,CAAC,QAAQ,CACX;YACE,KAAK,EAAE,CAAC,IAAI,CAAC;SACd,EACD;YACQ,IAAA,KAAqC,KAAI,CAAC,KAAK,EAA9C,UAAU,gBAAA,EAAE,UAAU,gBAAA,EAAE,QAAQ,cAAc,CAAC;YAEtD,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,kCAAW,GAAX,UAAY,IAAS,EAAE,OAAgB;QADvC,iBA0FC;QAxFC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACxC,IAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChC,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAE7C,IAAI,OAAO,EAAE;YACX,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBAClB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAE/D,IAAI,YAAY,EAAE;oBAChB,0BAA0B;oBAC1B,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;oBAExC,OAAO,QAAQ,CAAC,MAAM,EAAE;wBACtB,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;wBAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAEjC,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,WAAW,EAAE;4BAC1C,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACnB;wBAED,IAAI,KAAK,CAAC,QAAQ,EAAE;4BAClB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;yBAC/C;qBACF;iBACF;qBAAM;oBACL,6CAA6C;oBAC7C,OAAO,QAAQ,CAAC,MAAM,EAAE;wBACtB,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;wBAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAEjC,IAAI,CAAC,KAAK,EAAE;4BACV,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;yBACxB;wBAED,IAAI,KAAK,CAAC,YAAY,EAAE;4BACtB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACnB;wBAED,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;4BAC3C,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;yBAC/C;qBACF;iBACF;aACF;SACF;aAAM;YACL,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAE7B,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,YAAY,CAAC,EAAE;gBAC1D,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC/D,OAAO,QAAQ,CAAC,MAAM,EAAE;oBACtB,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;oBAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAEjC,IAAI,CAAC,KAAK,EAAE;wBACV,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBACxB;oBAED,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;wBAC3C,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;qBAC/C;iBACF;aACF;SACF;QAED,IAAI,CAAC,QAAQ,CACX;YACE,KAAK,OAAA;SACN,EACD;YACQ,IAAA,KAMF,KAAI,CAAC,KAAK,EALZ,UAAU,gBAAA,EACV,YAAY,kBAAA,EACZ,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,QAAQ,cACI,CAAC;YAEf,QAAQ,CACN,UAAU;gBACR,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,UAAoB,CAAC,EAA1B,CAA0B,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC/D,CAAC,CAAC,YAAY;oBACd,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,UAAoB,CAAC,EAA1B,CAA0B,CAAC;oBAC/C,CAAC,CAAC,KAAK,CACV,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,gCAAS,GAAT,UAAU,MAA4B;QAA5B,uBAAA,EAAA,aAA4B;QAC9B,IAAA,KAA8B,IAAI,CAAC,KAAK,EAAvC,SAAS,eAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAc,CAAC;QAC/C,IAAI,GAAG,GAA8B,SAAS,CAAC;QAE/C,IAAI,CAAC,SAAS,EAAE;YACd,GAAG,GAAG,MAAM;gBACV,CAAC,CAAC,sBAAa,CAAC,OAAO,EAAE,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,MAAM,EAAf,CAAe,CAAC;gBACjD,CAAC,CAAC,SAAS,CAAC;YACd,OAAO,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,MAAM;aACrB,CAAC,CAAC;SACJ;IACH,CAAC;IAGD,iCAAU,GAAV,UAAW,IAAY;QACf,IAAA,KAA2C,IAAI,CAAC,KAAK,EAApD,SAAS,eAAA,EAAE,MAAM,YAAA,EAAE,UAAU,gBAAA,EAAE,OAAO,aAAc,CAAC;QAE5D,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,IAAI,EAAE;SAChB;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,KAAK;gBACf,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;aAC7B,CAAC,CAAC;SACJ;IACH,CAAC;IAGD,mCAAY,GAAZ,UAAa,IAAY;QAChB,IAAA,QAAQ,GAAI,IAAI,CAAC,KAAK,SAAd,CAAe;QAE9B,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAGD,wCAAiB,GAAjB,UAAkB,CAAsC;QACtD,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK;SAClC,CAAC,CAAC;IACL,CAAC;IAGD,oCAAa,GAAb;QACQ,IAAA,KAMF,IAAI,CAAC,KAAK,EALA,KAAK,gBAAA,EACjB,QAAQ,cAAA,EACR,YAAY,kBAAA,EACZ,WAAW,iBAAA,EACX,SAAS,eACG,CAAC;QAEf,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAEK,IAAA,KAAuC,IAAI,CAAC,KAAK,EAAhD,UAAU,gBAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAE,MAAM,YAAc,CAAC;QACxD,IAAI,CAAC,QAAQ,CACX;YACE,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;SACjB,EACD;;YACE,IAAI,QAAQ,IAAI,KAAK,EAAE;gBACrB,IAAI,GAAG,GACL,CAAC,YAAY;oBACX,sBAAa,CAAC,OAAO,EAAE,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,YAAY,EAArB,CAAqB,CAAC,CAAC;oBACxD,EAAE,CAAC;gBACL,KAAK,CAAC,GAAG,YAAG,GAAC,UAAU,IAAG,KAAK,OAAG,IAAI,CAAC,CAAC;aACzC;iBAAM,IAAI,SAAS,IAAI,MAAM,EAAE;gBAC9B,MAAM,uCAEC,WAAW,gBACb,UAAU,IAAG,KAAK,QAErB,WAAY,EACZ,IAAI,CACL,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,mCAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IAED,kCAAW,GAAX,UAAY,KAAgC;QAAhC,sBAAA,EAAA,YAAgC;QACpC,IAAA,KAAkC,IAAI,CAAC,KAAK,EAA/B,EAAE,gBAAA,EAAa,EAAE,eAAc,CAAC;QAC5C,IAAA,UAAU,GAAI,IAAI,CAAC,KAAK,WAAd,CAAe;QAEhC,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,gBAAgB,CAAC;YAClC,uCAAK,SAAS,EAAE,EAAE,CAAC,gBAAgB,CAAC;gBACjC,KAAK;gBACN,yCACE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,KAAK,EAAE,UAAU,EACjB,WAAW,EAAE,EAAE,CAAC,KAAK,CAAC,GACtB;gBACF,qDAAiB,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY;oBACnD,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CACpC;gBACJ,qDAAiB,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa;oBACpD,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CACpC,CACA,CACF,CACP,CAAC;IACJ,CAAC;IAGD,iCAAU,GAAV,UACE,IAAa,EACb,KAAe,EACf,WAAoB;QAJtB,iBAsPC;QAhPO,IAAA,KAyBF,IAAI,CAAC,KAAK,EAxBZ,aAAa,mBAAA,EACb,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,aAAa,mBAAA,EACb,OAAO,aAAA,EACP,0BAA0B,gCAAA,EAC1B,YAAY,kBAAA,EACA,EAAE,gBAAA,EACd,YAAY,kBAAA,EACZ,OAAO,aAAA,EACP,SAAS,eAAA,EACT,SAAS,eAAA,EACT,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,SAAS,eAAA,EACT,OAAO,aAAA,EACP,SAAS,eAAA,EACE,EAAE,eACD,CAAC;QACT,IAAA,KAOF,IAAI,CAAC,KAAK,EANZ,QAAQ,cAAA,EACD,UAAU,WAAA,EACjB,QAAQ,cAAA,EACR,YAAY,kBAAA,EACZ,WAAW,iBAAA,EACX,SAAS,eACG,CAAC;QAEf,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG;YAC3B,IAAI,CAAC,kBAAS,CAAC,IAAW,EAAE,OAAO,CAAC,EAAE;gBACpC,OAAO,IAAI,CAAC;aACb;YAED,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvC,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YACzC,IAAI,WAAW,GAAG,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC;YAE3C,IAAI,aAAa,GAAG,IAAI,CAAC;YACzB,IAAI,kBAAkB,GAAG,KAAK,CAAC;YAC/B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACzC,aAAa,GAAG,KAAI,CAAC,UAAU,CAC7B,IAAI,CAAC,QAAQ,EACb,KAAK,EACL,OAAO;oBACL,CAAC,CAAC,KAAK;oBACP,CAAC,CAAC,WAAW;wBACT,CAAC,0BAA0B,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC;wBACnD,CAAC,QAAQ,IAAI,OAAO,CAAC,CAC5B,CAAC;gBACF,kBAAkB,GAAG,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC;gBACrD,IACE,CAAC,WAAW;oBACZ,YAAY;oBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,aAAa,CAAC,eAAe,EACtD;oBACA,WAAW,GAAG,IAAI,CAAC;iBACpB;gBACD,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC;aACnC;YAED,IAAI,kBAAkB,IAAI,OAAO,EAAE;gBACjC,eAAe,EAAE,CAAC;aACnB;YAED,IAAI,YAAY,GAAG,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,QAAQ,IAAI,YAAY,CAAC;YAE/D,IACE,CAAC,YAAY;gBACb,CAAC,CAAC,SAAS,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC;oBAC5D,CAAC,SAAS,IAAI,WAAW,IAAI,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,EAC/D;gBACA,YAAY,GAAG,IAAI,CAAC;aACrB;YAED,IAAM,QAAQ,GAAuB,QAAQ,CAAC,CAAC,CAAC,CAC9C,8BAAC,kBAAQ,IACP,IAAI,EAAC,IAAI,EACT,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,EAAE,IAAI,EAAE,CAAC,WAAW,CAAC,GACzD,CACH,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CACd,8BAAC,kBAAQ,IACP,IAAI,EAAC,IAAI,EACT,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,EAAE,IAAI,CAAC,GAC5C,CACH,CAAC,CAAC,CAAC,IAAI,CAAC;YAET,IAAM,MAAM,GACV,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YAEjE,OAAO,CACL,sCACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,EAAE,CAAC,gBAAa,aAAa,IAAI,EAAE,CAAE,EAAE;oBAChD,mBAAmB,EAAE,MAAM;iBAC5B,CAAC;gBAED,SAAS,IAAI,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,CACnC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC3B,CAAC,CAAC,CAAC,CACF,uCACE,SAAS,EAAE,EAAE,CAAC,gBAAgB,EAAE;wBAC9B,qBAAqB,EACnB,QAAQ,IAAI,CAAC,OAAO,IAAI,kBAAkB,IAAI,CAAC,YAAY;wBAC7D,YAAY,EAAE,OAAO;wBACrB,aAAa,EAAE,YAAY;qBAC5B,CAAC;oBAED,CAAC,MAAM,CAAC,CAAC,CAAC,CACT,uCACE,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,EACxC,SAAS,EAAE,EAAE,CAAC,gBAAgB,EAAE;4BAC9B,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBACzC,CAAC;wBAEF,8BAAC,YAAI,IAAC,IAAI,EAAC,kBAAkB,EAAC,SAAS,EAAC,MAAM,GAAG,CAC7C,CACP,CAAC,CAAC,CAAC,CACF,wCAAM,SAAS,EAAE,EAAE,CAAC,2BAA2B,CAAC,GAAI,CACrD;oBAEA,QAAQ;oBAER,QAAQ,CAAC,CAAC,CAAC,CACV,qCACE,SAAS,EAAE,EAAE,CACX,oBACE,IAAI,CAAC,SAAS,CAAC;4BACf,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,eAAe,CAAC,CACrD,CACH,EACD,OAAO,EAAE;4BACP,OAAA,CAAC,YAAY;gCACb,CAAC,QAAQ;oCACP,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;oCACtC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBAH5B,CAG4B;wBAG9B,8BAAC,YAAI,IACH,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EACvC,SAAS,EAAC,MAAM,GAChB,CACA,CACL,CAAC,CAAC,CAAC,IAAI;oBAER,wCACE,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,EAC9B,OAAO,EAAE;4BACP,OAAA,CAAC,YAAY;gCACb,CAAC,QAAQ;oCACP,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;oCACtC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBAH5B,CAG4B,IAG7B,YAAY;wBACX,CAAC,CAAC,mBAAS,CAAC,KAAG,IAAI,CAAC,UAAU,CAAG,EAAE,YAAY,CAAC;wBAChD,CAAC,CAAC,KAAG,IAAI,CAAC,UAAU,CAAG,CACpB;oBAEN,CAAC,YAAY,IAAI,CAAC,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAC1C,uCAAK,SAAS,EAAE,EAAE,CAAC,iBAAiB,CAAC;wBAClC,SAAS,IAAI,mBAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAC5C,qCACE,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,EAAE,IAAI,CAAC,kBAC1B,EAAE,CAAC,SAAS,CAAC,mBACb,MAAM;4BAEpB,8BAAC,YAAI,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,GAAG,CACnC,CACL,CAAC,CAAC,CAAC,IAAI;wBAEP,SAAS,IAAI,mBAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAC5C,qCACE,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,EAAE,IAAI,CAAC,kBAC7B,EAAE,CAAC,SAAS,CAAC,mBACb,MAAM;4BAEpB,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CACpC,CACL,CAAC,CAAC,CAAC,IAAI;wBAEP,QAAQ,IAAI,mBAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAC1C,qCACE,OAAO,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,EAAE,IAAI,CAAC,kBAC3B,EAAE,CAAC,OAAO,CAAC,mBACX,MAAM;4BAEpB,8BAAC,YAAI,IAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,GAAG,CACrC,CACL,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC,CAAC,CAAC,IAAI,CACJ,CACP;gBAEA,CAAC,aAAa,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC9C,CAAC,QAAQ,IAAI,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CACpC,sCAAI,SAAS,EAAE,EAAE,CAAC,cAAc,CAAC;oBAC9B,QAAQ,IAAI,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,CACnC,sCAAI,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,IAC3B,KAAI,CAAC,WAAW,CACf,QAAQ;wBACN,CAAC,CAAC,eAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;4BAC3B,OAAO,EAAE,KAAK;4BACd,QAAQ,EAAE,IAAI;yBACf,CAAC;wBACJ,CAAC,CAAC,IAAI,CACT,CACE,CACN,CAAC,CAAC,CAAC,IAAI;oBACP,aAAa,CACX,CACN,CAAC,CAAC,CAAC,CAAC,aAAa;oBAChB,IAAI,CAAC,WAAW;oBAChB,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7B,sCAAI,SAAS,EAAE,EAAE,CAAC,cAAc,CAAC;oBAC/B,sCAAI,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC;wBAC5B,uCAAK,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAG,IAAI,CAAC,WAAW,CAAO,CAC7D,CACF,CACN,CAAC,CAAC,CAAC,IAAI,CACL,CACN,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,OAAO;YACL,GAAG,EAAE,GAAG;YACR,eAAe,iBAAA;SAChB,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN;QACQ,IAAA,KAYF,IAAI,CAAC,KAAK,EAXZ,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,QAAQ,cAAA,EACI,EAAE,gBAAA,EACd,SAAS,eAAA,EACT,aAAa,mBAAA,EACb,aAAa,mBAAA,EACb,QAAQ,cAAA,EACG,EAAE,eACD,CAAC;QACf,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3B,IAAA,KAAyD,IAAI,CAAC,KAAK,EAAlE,KAAK,WAAA,EAAE,QAAQ,cAAA,EAAE,YAAY,kBAAA,EAAE,SAAS,eAAA,EAAE,UAAU,gBAAc,CAAC;QAE1E,IAAI,MAAM,GAAG,IAAI,CAAC;QAElB,IAAI,SAAS,IAAI,aAAa,KAAK,KAAK,IAAI,QAAQ,EAAE;YACpD,MAAM,GAAG,CACP,qCACE,SAAS,EAAE,EAAE,CAAC,gBAAgB,EAAE;oBAC9B,aAAa,EAAE,QAAQ,IAAI,SAAS;iBACrC,CAAC,EACF,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;gBAExC,8BAAC,YAAI,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,GAAG;gBACrC,4CAAO,EAAE,CAAC,aAAa,CAAC,CAAQ,CAC9B,CACL,CAAC;SACH;QAED,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,WAAQ,SAAS,IAAI,EAAE,CAAE,CAAC,IAC1C,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAC3B,sCAAI,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,IAC3B,QAAQ,CAAC,CAAC,CAAC,CACV;YACG,MAAM;YACN,QAAQ,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAC3B,sCAAI,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,IAAG,IAAI,CAAC,WAAW,EAAE,CAAM,CAC1D,CAAC,CAAC,CAAC,IAAI;YACP,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,CAC1C,CACJ,CAAC,CAAC,CAAC,CACF,sCACE,SAAS,EAAE,EAAE,CAAC,eAAe,EAAE;gBAC7B,YAAY,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM;aACtC,CAAC;YAEF,uCAAK,SAAS,EAAE,EAAE,CAAC,gBAAgB,CAAC;gBAClC,wCACE,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,EAC9B,OAAO,EAAE,IAAI,CAAC,WAAW;oBAExB,QAAQ,CAAC,CAAC,CAAC,CACV,qCAAG,SAAS,EAAE,EAAE,CAAC,6BAA6B,CAAC;wBAC7C,8BAAC,YAAI,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,GAAG,CACnC,CACL,CAAC,CAAC,CAAC,IAAI;oBACP,SAAS,CACL;gBACN,CAAC,QAAQ;oBACV,SAAS;oBACT,aAAa,KAAK,KAAK;oBACvB,CAAC,QAAQ;oBACT,CAAC,SAAS,CAAC,CAAC,CAAC,CACX,uCAAK,SAAS,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAClC,SAAS,CAAC,CAAC,CAAC,CACX,qCACE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,kBAC1B,aAAa,mBACb,MAAM;oBAEpB,8BAAC,YAAI,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,GAAG,CACnC,CACL,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC,CAAC,CAAC,IAAI,CACJ;YACN,sCAAI,SAAS,EAAE,EAAE,CAAC,cAAc,CAAC;gBAC9B,QAAQ,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAC3B,sCAAI,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,IAAG,IAAI,CAAC,WAAW,EAAE,CAAM,CAC1D,CAAC,CAAC,CAAC,IAAI;gBACP,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,CACxC,CACF,CACN,CACE,CACN,CAAC,CAAC,CAAC,CACF,uCAAK,SAAS,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAG,WAAW,CAAO,CAC5D,CACG,CACP,CAAC;IACJ,CAAC;;IAxrBM,yBAAY,GAAG;QACpB,QAAQ,EAAE,IAAI;QACd,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,CAAC;QAChB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,KAAK;QACf,QAAQ,EAAE,KAAK;QACf,YAAY,EAAE,KAAK;QACnB,YAAY,EAAE,KAAK;QACnB,UAAU,EAAE,OAAO;QACnB,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;QACjB,aAAa,EAAE,UAAU;QACzB,WAAW,EAAE,OAAO;QACpB,aAAa,EAAE,UAAU;QACzB,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,KAAK;QACnB,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,CAAC;QACZ,OAAO,EAAE,KAAK;QACd,0BAA0B,EAAE,IAAI;QAChC,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE,OAAO;QAClB,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,OAAO;KACnB,CAAC;IAuEF;QADC,iBAAQ;;;;sDAUR;IAGD;QADC,iBAAQ;;;;mDAYR;IAGD;QADC,iBAAQ;;;;oDAYR;IAGD;QADC,iBAAQ;;;;mDA0FR;IAGD;QADC,iBAAQ;;qEACS,eAAM,oBAAN,eAAM;;iDAgBvB;IAGD;QADC,iBAAQ;;qEACQ,eAAM,oBAAN,eAAM;;kDAatB;IAGD;QADC,iBAAQ;;qEACU,eAAM,oBAAN,eAAM;;oDAIxB;IAGD;QADC,iBAAQ;;qEACY,eAAK,oBAAL,eAAK,CAAC,WAAW;;yDAIrC;IAGD;QADC,iBAAQ;;;;qDAwCR;IAGD;QADC,iBAAQ;;;;oDAOR;IA2BD;QADC,iBAAQ;;qEAED,gBAAO,oBAAP,gBAAO;;kDAoPd;IAkGH,mBAAC;CAAA,AA7rBD,CAAkC,eAAK,CAAC,SAAS,GA6rBhD;AA7rBY,oCAAY;AA+rBzB,kBAAe,iBAAS,CAAC,mBAAU,CAAC,YAAY,CAAC,CAAC,CAAC",
    "sourcesContent": [
        "/**\n * @file Tree\n * @description 树形组件\n * @author fex\n */\n\nimport React from 'react';\nimport {\n  eachTree,\n  isVisible,\n  autobind,\n  findTreeIndex,\n  hasAbility,\n  createObject\n} from '../utils/helper';\nimport {Option, Options, value2array} from './Select';\nimport {ClassNamesFn, themeable, ThemeProps} from '../theme';\nimport {highlight} from '../renderers/Form/Options';\nimport {Icon} from './icons';\nimport Checkbox from './Checkbox';\nimport {LocaleProps, localeable} from '../locale';\n\ninterface TreeSelectorProps extends ThemeProps, LocaleProps {\n  highlightTxt?: string;\n\n  showIcon?: boolean;\n  // 是否默认都展开\n  initiallyOpen?: boolean;\n  // 默认展开的级数，从1开始，只有initiallyOpen不是true时生效\n  unfoldedLevel?: number;\n  // 单选时，是否展示radio\n  showRadio?: boolean;\n  multiple?: boolean;\n  // 是否都不可用\n  disabled?: boolean;\n  // 多选时，选中父节点时，是否将其所有子节点也融合到取值中，默认是不融合\n  withChildren?: boolean;\n  // 多选时，选中父节点时，是否只将起子节点加入到值中。\n  onlyChildren?: boolean;\n  // 名称、取值等字段名映射\n  labelField: string;\n  valueField: string;\n  iconField: string;\n  unfoldedField: string;\n  foldedField: string;\n  disabledField: string;\n\n  className?: string;\n  itemClassName?: string;\n  joinValues?: boolean;\n  extractValue?: boolean;\n  delimiter?: string;\n  options: Options;\n  value: any;\n  onChange: Function;\n  placeholder?: string;\n  hideRoot?: boolean;\n  rootLabel?: string;\n  rootValue?: any;\n\n  // 这个配置名字没取好，目前的含义是，如果这个配置成true，点父级的时候，子级点不会自选中。\n  // 否则点击父级，子节点选中。\n  cascade?: boolean;\n  selfDisabledAffectChildren?: boolean;\n  minLength?: number;\n  maxLength?: number;\n\n  // 是否为内建 增、改、删。当有复杂表单的时候直接抛出去让外层能统一处理\n  bultinCUD?: boolean;\n  rootCreatable?: boolean;\n  rootCreateTip?: string;\n  creatable?: boolean;\n  createTip?: string;\n  onAdd?: (\n    idx?: number | Array<number>,\n    value?: any,\n    skipForm?: boolean\n  ) => void;\n  editable?: boolean;\n  editTip?: string;\n  onEdit?: (value: Option, origin?: Option, skipForm?: boolean) => void;\n  removable?: boolean;\n  removeTip?: string;\n  onDelete?: (value: Option) => void;\n}\n\ninterface TreeSelectorState {\n  value: Array<any>;\n  unfolded: {[propName: string]: string};\n\n  inputValue: string;\n  addingParent: Option | null;\n  isAdding: boolean;\n  isEditing: boolean;\n  editingItem: Option | null;\n}\n\nexport class TreeSelector extends React.Component<\n  TreeSelectorProps,\n  TreeSelectorState\n> {\n  static defaultProps = {\n    showIcon: true,\n    initiallyOpen: true,\n    unfoldedLevel: 0,\n    showRadio: false,\n    multiple: false,\n    disabled: false,\n    withChildren: false,\n    onlyChildren: false,\n    labelField: 'label',\n    valueField: 'value',\n    iconField: 'icon',\n    unfoldedField: 'unfolded',\n    foldedField: 'foled',\n    disabledField: 'disabled',\n    joinValues: true,\n    extractValue: false,\n    delimiter: ',',\n    hideRoot: true,\n    rootLabel: '顶级',\n    rootValue: 0,\n    cascade: false,\n    selfDisabledAffectChildren: true,\n    rootCreateTip: '添加一级节点',\n    createTip: '添加子节点',\n    editTip: '编辑该节点',\n    removeTip: '移除该节点'\n  };\n\n  componentWillMount() {\n    const props = this.props;\n\n    this.setState({\n      value: value2array(props.value, {\n        multiple: props.multiple,\n        delimiter: props.delimiter,\n        valueField: props.valueField,\n        options: props.options\n      }),\n      unfolded: this.syncUnFolded(props),\n\n      inputValue: '',\n      addingParent: null,\n      isAdding: false,\n      isEditing: false,\n      editingItem: null\n    });\n  }\n\n  componentWillReceiveProps(nextProps: TreeSelectorProps) {\n    const toUpdate: any = {};\n\n    if (\n      this.props.value !== nextProps.value ||\n      this.props.options !== nextProps.options\n    ) {\n      toUpdate.value = value2array(nextProps.value, {\n        multiple: nextProps.multiple,\n        delimiter: nextProps.delimiter,\n        valueField: nextProps.valueField,\n        options: nextProps.options\n      });\n    }\n\n    if (this.props.options !== nextProps.options) {\n      toUpdate.unfolded = this.syncUnFolded(nextProps);\n    }\n\n    this.setState(toUpdate);\n  }\n\n  syncUnFolded(props: TreeSelectorProps) {\n    // 初始化树节点的展开状态\n    let unfolded: {[propName: string]: string} = {};\n    const {foldedField, unfoldedField} = this.props;\n\n    eachTree(props.options, (node: Option, index, level) => {\n      if (node.children && node.children.length) {\n        let ret: any = true;\n\n        if (unfoldedField && typeof node[unfoldedField] !== 'undefined') {\n          ret = !!node[unfoldedField];\n        } else if (foldedField && typeof node[foldedField] !== 'undefined') {\n          ret = !node[foldedField];\n        } else {\n          ret = !!props.initiallyOpen;\n          if (!ret && level <= (props.unfoldedLevel as number)) {\n            ret = true;\n          }\n        }\n        unfolded[node[props.valueField as string]] = ret;\n      }\n    });\n\n    return unfolded;\n  }\n\n  @autobind\n  toggleUnfolded(node: any) {\n    this.setState({\n      unfolded: {\n        ...this.state.unfolded,\n        [node[this.props.valueField as string]]: !this.state.unfolded[\n          node[this.props.valueField as string]\n        ]\n      }\n    });\n  }\n\n  @autobind\n  clearSelect() {\n    this.setState(\n      {\n        value: []\n      },\n      () => {\n        const {joinValues, rootValue, onChange} = this.props;\n\n        onChange(joinValues ? rootValue : []);\n      }\n    );\n  }\n\n  @autobind\n  handleSelect(node: any, value?: any) {\n    this.setState(\n      {\n        value: [node]\n      },\n      () => {\n        const {joinValues, valueField, onChange} = this.props;\n\n        onChange(joinValues ? node[valueField as string] : node);\n      }\n    );\n  }\n\n  @autobind\n  handleCheck(item: any, checked: boolean) {\n    const props = this.props;\n    const value = this.state.value.concat();\n    const idx = value.indexOf(item);\n    const onlyChildren = this.props.onlyChildren;\n\n    if (checked) {\n      ~idx || value.push(item);\n      if (!props.cascade) {\n        const children = item.children ? item.children.concat([]) : [];\n\n        if (onlyChildren) {\n          // 父级选中的时候，子节点也都选中，但是自己不选中\n          !~idx && children.length && value.pop();\n\n          while (children.length) {\n            let child = children.shift();\n            let index = value.indexOf(child);\n\n            if (!~index && child.value !== 'undefined') {\n              value.push(child);\n            }\n\n            if (child.children) {\n              children.push.apply(children, child.children);\n            }\n          }\n        } else {\n          // 只要父节点选择了,子节点就不需要了,全部去掉勾选.  withChildren时相反\n          while (children.length) {\n            let child = children.shift();\n            let index = value.indexOf(child);\n\n            if (~index) {\n              value.splice(index, 1);\n            }\n\n            if (props.withChildren) {\n              value.push(child);\n            }\n\n            if (child.children && child.children.length) {\n              children.push.apply(children, child.children);\n            }\n          }\n        }\n      }\n    } else {\n      ~idx && value.splice(idx, 1);\n\n      if (!props.cascade && (props.withChildren || onlyChildren)) {\n        const children = item.children ? item.children.concat([]) : [];\n        while (children.length) {\n          let child = children.shift();\n          let index = value.indexOf(child);\n\n          if (~index) {\n            value.splice(index, 1);\n          }\n\n          if (child.children && child.children.length) {\n            children.push.apply(children, child.children);\n          }\n        }\n      }\n    }\n\n    this.setState(\n      {\n        value\n      },\n      () => {\n        const {\n          joinValues,\n          extractValue,\n          valueField,\n          delimiter,\n          onChange\n        } = this.props;\n\n        onChange(\n          joinValues\n            ? value.map(item => item[valueField as string]).join(delimiter)\n            : extractValue\n            ? value.map(item => item[valueField as string])\n            : value\n        );\n      }\n    );\n  }\n\n  @autobind\n  handleAdd(parent: Option | null = null) {\n    const {bultinCUD, onAdd, options} = this.props;\n    let idx: Array<number> | undefined = undefined;\n\n    if (!bultinCUD) {\n      idx = parent\n        ? findTreeIndex(options, item => item === parent)\n        : undefined;\n      return onAdd && onAdd(idx);\n    } else {\n      this.setState({\n        isEditing: false,\n        isAdding: true,\n        addingParent: parent\n      });\n    }\n  }\n\n  @autobind\n  handleEdit(item: Option) {\n    const {bultinCUD, onEdit, labelField, options} = this.props;\n\n    if (!bultinCUD) {\n      onEdit?.(item);\n    } else {\n      this.setState({\n        isEditing: true,\n        isAdding: false,\n        editingItem: item,\n        inputValue: item[labelField]\n      });\n    }\n  }\n\n  @autobind\n  handleRemove(item: Option) {\n    const {onDelete} = this.props;\n\n    onDelete && onDelete(item);\n  }\n\n  @autobind\n  handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      inputValue: e.currentTarget.value\n    });\n  }\n\n  @autobind\n  handleConfirm() {\n    const {\n      inputValue: value,\n      isAdding,\n      addingParent,\n      editingItem,\n      isEditing\n    } = this.state;\n\n    if (!value) {\n      return;\n    }\n\n    const {labelField, onAdd, options, onEdit} = this.props;\n    this.setState(\n      {\n        inputValue: '',\n        isAdding: false,\n        isEditing: false\n      },\n      () => {\n        if (isAdding && onAdd) {\n          let idx =\n            (addingParent &&\n              findTreeIndex(options, item => item === addingParent)) ||\n            [];\n          onAdd(idx, {[labelField]: value}, true);\n        } else if (isEditing && onEdit) {\n          onEdit(\n            {\n              ...editingItem,\n              [labelField]: value\n            },\n            editingItem!,\n            true\n          );\n        }\n      }\n    );\n  }\n\n  @autobind\n  handleCancel() {\n    this.setState({\n      inputValue: '',\n      isAdding: false,\n      isEditing: false\n    });\n  }\n\n  renderInput(prfix: JSX.Element | null = null) {\n    const {classnames: cx, translate: __} = this.props;\n    const {inputValue} = this.state;\n\n    return (\n      <div className={cx('Tree-itemLabel')}>\n        <div className={cx('Tree-itemInput')}>\n          {prfix}\n          <input\n            onChange={this.handleInputChange}\n            value={inputValue}\n            placeholder={__('请输入')}\n          />\n          <a data-tooltip={__('取消')} onClick={this.handleCancel}>\n            <Icon icon=\"close\" className=\"icon\" />\n          </a>\n          <a data-tooltip={__('确认')} onClick={this.handleConfirm}>\n            <Icon icon=\"check\" className=\"icon\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  @autobind\n  renderList(\n    list: Options,\n    value: Option[],\n    uncheckable: boolean\n  ): {dom: Array<JSX.Element | null>; childrenChecked: number} {\n    const {\n      itemClassName,\n      showIcon,\n      showRadio,\n      multiple,\n      disabled,\n      labelField,\n      valueField,\n      iconField,\n      disabledField,\n      cascade,\n      selfDisabledAffectChildren,\n      onlyChildren,\n      classnames: cx,\n      highlightTxt,\n      options,\n      maxLength,\n      minLength,\n      creatable,\n      editable,\n      removable,\n      createTip,\n      editTip,\n      removeTip,\n      translate: __\n    } = this.props;\n    const {\n      unfolded,\n      value: stateValue,\n      isAdding,\n      addingParent,\n      editingItem,\n      isEditing\n    } = this.state;\n\n    let childrenChecked = 0;\n    let ret = list.map((item, key) => {\n      if (!isVisible(item as any, options)) {\n        return null;\n      }\n\n      const checked = !!~value.indexOf(item);\n      const selfDisabled = item[disabledField];\n      let selfChecked = !!uncheckable || checked;\n\n      let childrenItems = null;\n      let tmpChildrenChecked = false;\n      if (item.children && item.children.length) {\n        childrenItems = this.renderList(\n          item.children,\n          value,\n          cascade\n            ? false\n            : uncheckable ||\n                (selfDisabledAffectChildren ? selfDisabled : false) ||\n                (multiple && checked)\n        );\n        tmpChildrenChecked = !!childrenItems.childrenChecked;\n        if (\n          !selfChecked &&\n          onlyChildren &&\n          item.children.length === childrenItems.childrenChecked\n        ) {\n          selfChecked = true;\n        }\n        childrenItems = childrenItems.dom;\n      }\n\n      if (tmpChildrenChecked || checked) {\n        childrenChecked++;\n      }\n\n      let nodeDisabled = !!uncheckable || !!disabled || selfDisabled;\n\n      if (\n        !nodeDisabled &&\n        ((maxLength && !selfChecked && stateValue.length >= maxLength) ||\n          (minLength && selfChecked && stateValue.length <= minLength))\n      ) {\n        nodeDisabled = true;\n      }\n\n      const checkbox: JSX.Element | null = multiple ? (\n        <Checkbox\n          size=\"sm\"\n          disabled={nodeDisabled}\n          checked={checked}\n          onChange={this.handleCheck.bind(this, item, !selfChecked)}\n        />\n      ) : showRadio ? (\n        <Checkbox\n          size=\"sm\"\n          disabled={nodeDisabled}\n          checked={checked}\n          onChange={this.handleSelect.bind(this, item)}\n        />\n      ) : null;\n\n      const isLeaf =\n        (!item.children || !item.children.length) && !item.placeholder;\n\n      return (\n        <li\n          key={key}\n          className={cx(`Tree-item ${itemClassName || ''}`, {\n            'Tree-item--isLeaf': isLeaf\n          })}\n        >\n          {isEditing && editingItem === item ? (\n            this.renderInput(checkbox)\n          ) : (\n            <div\n              className={cx('Tree-itemLabel', {\n                'is-children-checked':\n                  multiple && !cascade && tmpChildrenChecked && !nodeDisabled,\n                'is-checked': checked,\n                'is-disabled': nodeDisabled\n              })}\n            >\n              {!isLeaf ? (\n                <div\n                  onClick={() => this.toggleUnfolded(item)}\n                  className={cx('Tree-itemArrow', {\n                    'is-folded': !unfolded[item[valueField]]\n                  })}\n                >\n                  <Icon icon=\"right-arrow-bold\" className=\"icon\" />\n                </div>\n              ) : (\n                <span className={cx('Tree-itemArrowPlaceholder')} />\n              )}\n\n              {checkbox}\n\n              {showIcon ? (\n                <i\n                  className={cx(\n                    `Tree-itemIcon ${\n                      item[iconField] ||\n                      (childrenItems ? 'Tree-folderIcon' : 'Tree-leafIcon')\n                    }`\n                  )}\n                  onClick={() =>\n                    !nodeDisabled &&\n                    (multiple\n                      ? this.handleCheck(item, !selfChecked)\n                      : this.handleSelect(item))\n                  }\n                >\n                  <Icon\n                    icon={childrenItems ? 'folder' : 'file'}\n                    className=\"icon\"\n                  />\n                </i>\n              ) : null}\n\n              <span\n                className={cx('Tree-itemText')}\n                onClick={() =>\n                  !nodeDisabled &&\n                  (multiple\n                    ? this.handleCheck(item, !selfChecked)\n                    : this.handleSelect(item))\n                }\n              >\n                {highlightTxt\n                  ? highlight(`${item[labelField]}`, highlightTxt)\n                  : `${item[labelField]}`}\n              </span>\n\n              {!nodeDisabled && !isAdding && !isEditing ? (\n                <div className={cx('Tree-item-icons')}>\n                  {creatable && hasAbility(item, 'creatable') ? (\n                    <a\n                      onClick={this.handleAdd.bind(this, item)}\n                      data-tooltip={__(createTip)}\n                      data-position=\"left\"\n                    >\n                      <Icon icon=\"plus\" className=\"icon\" />\n                    </a>\n                  ) : null}\n\n                  {removable && hasAbility(item, 'removable') ? (\n                    <a\n                      onClick={this.handleRemove.bind(this, item)}\n                      data-tooltip={__(removeTip)}\n                      data-position=\"left\"\n                    >\n                      <Icon icon=\"minus\" className=\"icon\" />\n                    </a>\n                  ) : null}\n\n                  {editable && hasAbility(item, 'editable') ? (\n                    <a\n                      onClick={this.handleEdit.bind(this, item)}\n                      data-tooltip={__(editTip)}\n                      data-position=\"left\"\n                    >\n                      <Icon icon=\"pencil\" className=\"icon\" />\n                    </a>\n                  ) : null}\n                </div>\n              ) : null}\n            </div>\n          )}\n          {/* 有children而且为展开状态 或者 添加child时 */}\n          {(childrenItems && unfolded[item[valueField]]) ||\n          (isAdding && addingParent === item) ? (\n            <ul className={cx('Tree-sublist')}>\n              {isAdding && addingParent === item ? (\n                <li className={cx('Tree-item')}>\n                  {this.renderInput(\n                    checkbox\n                      ? React.cloneElement(checkbox, {\n                          checked: false,\n                          disabled: true\n                        })\n                      : null\n                  )}\n                </li>\n              ) : null}\n              {childrenItems}\n            </ul>\n          ) : !childrenItems &&\n            item.placeholder &&\n            unfolded[item[valueField]] ? (\n            <ul className={cx('Tree-sublist')}>\n              <li className={cx('Tree-item')}>\n                <div className={cx('Tree-placeholder')}>{item.placeholder}</div>\n              </li>\n            </ul>\n          ) : null}\n        </li>\n      );\n    });\n\n    return {\n      dom: ret,\n      childrenChecked\n    };\n  }\n\n  render() {\n    const {\n      className,\n      placeholder,\n      hideRoot,\n      rootLabel,\n      showIcon,\n      classnames: cx,\n      creatable,\n      rootCreatable,\n      rootCreateTip,\n      disabled,\n      translate: __\n    } = this.props;\n    let options = this.props.options;\n    const {value, isAdding, addingParent, isEditing, inputValue} = this.state;\n\n    let addBtn = null;\n\n    if (creatable && rootCreatable !== false && hideRoot) {\n      addBtn = (\n        <a\n          className={cx('Tree-addTopBtn', {\n            'is-disabled': isAdding || isEditing\n          })}\n          onClick={this.handleAdd.bind(this, null)}\n        >\n          <Icon icon=\"plus\" className=\"icon\" />\n          <span>{__(rootCreateTip)}</span>\n        </a>\n      );\n    }\n\n    return (\n      <div className={cx(`Tree ${className || ''}`)}>\n        {options && options.length ? (\n          <ul className={cx('Tree-list')}>\n            {hideRoot ? (\n              <>\n                {addBtn}\n                {isAdding && !addingParent ? (\n                  <li className={cx('Tree-item')}>{this.renderInput()}</li>\n                ) : null}\n                {this.renderList(options, value, false).dom}\n              </>\n            ) : (\n              <li\n                className={cx('Tree-rootItem', {\n                  'is-checked': !value || !value.length\n                })}\n              >\n                <div className={cx('Tree-itemLabel')}>\n                  <span\n                    className={cx('Tree-itemText')}\n                    onClick={this.clearSelect}\n                  >\n                    {showIcon ? (\n                      <i className={cx('Tree-itemIcon Tree-rootIcon')}>\n                        <Icon icon=\"home\" className=\"icon\" />\n                      </i>\n                    ) : null}\n                    {rootLabel}\n                  </span>\n                  {!disabled &&\n                  creatable &&\n                  rootCreatable !== false &&\n                  !isAdding &&\n                  !isEditing ? (\n                    <div className={cx('Tree-item-icons')}>\n                      {creatable ? (\n                        <a\n                          onClick={this.handleAdd.bind(this, null)}\n                          data-tooltip={rootCreateTip}\n                          data-position=\"left\"\n                        >\n                          <Icon icon=\"plus\" className=\"icon\" />\n                        </a>\n                      ) : null}\n                    </div>\n                  ) : null}\n                </div>\n                <ul className={cx('Tree-sublist')}>\n                  {isAdding && !addingParent ? (\n                    <li className={cx('Tree-item')}>{this.renderInput()}</li>\n                  ) : null}\n                  {this.renderList(options, value, false).dom}\n                </ul>\n              </li>\n            )}\n          </ul>\n        ) : (\n          <div className={cx('Tree-placeholder')}>{placeholder}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default themeable(localeable(TreeSelector));\n"
    ]
}