{
    "version": 3,
    "file": "Radios.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Radios.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @file Radios\n * @description\n * @author fex\n *\n * @param 参数说明：\n * options: [\n *   {\n *      label: '显示的名字',\n *      value: '值',\n *      disabled: false\n *   }\n * ]\n */\n\nimport React from 'react';\nimport {uncontrollable} from 'uncontrollable';\nimport Checkbox from './Checkbox';\nimport {value2array, OptionProps, Option} from './Select';\nimport chunk from 'lodash/chunk';\nimport {ClassNamesFn, themeable} from '../theme';\n\ninterface RadioProps extends OptionProps {\n  id?: string;\n  type: string;\n  value?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  inline?: boolean;\n  disabled?: boolean;\n  onChange?: Function;\n  columnsCount: number;\n  itemClassName?: string;\n  labelField?: string;\n  labelClassName?: string;\n  classPrefix: string;\n  classnames: ClassNamesFn;\n}\n\nexport class Radios extends React.Component<RadioProps, any> {\n  static defaultProps = {\n    type: 'radio',\n    joinValues: true,\n    clearable: false,\n    columnsCount: 1 // 一行显示一个\n  };\n\n  toggleOption(option: Option) {\n    const {\n      value,\n      onChange,\n      valueField,\n      clearable,\n      delimiter,\n      options\n    } = this.props;\n\n    let valueArray = value2array(value, {\n      multiple: false,\n      delimiter,\n      valueField,\n      options\n    });\n    const idx = valueArray.indexOf(option);\n\n    if (~idx) {\n      clearable && valueArray.splice(idx, 1);\n    } else {\n      valueArray = [option];\n    }\n\n    let newValue = valueArray[0];\n\n    onChange && onChange(newValue);\n  }\n\n  renderGroup(option: Option, index: number, valueArray: Array<Option>) {\n    const {classnames: cx} = this.props;\n\n    return (\n      <div key={index} className={cx('RadiosControl-group', option.className)}>\n        <label\n          className={cx('RadiosControl-groupLabel', option.labelClassName)}\n        >\n          {option.label}\n        </label>\n\n        {option.children && option.children.length\n          ? option.children.map((option, index) =>\n              this.renderItem(option, index, valueArray)\n            )\n          : null}\n      </div>\n    );\n  }\n\n  renderItem(option: Option, index: number, valueArray: Array<Option>) {\n    if (option.children) {\n      return this.renderGroup(option, index, valueArray);\n    }\n\n    const {\n      disabled,\n      inline,\n      itemClassName,\n      classnames: cx,\n      labelClassName,\n      labelField\n    } = this.props;\n\n    return (\n      <Checkbox\n        type=\"radio\"\n        key={index}\n        onChange={() => this.toggleOption(option)}\n        checked={!!~valueArray.indexOf(option)}\n        className={cx(itemClassName, option.className)}\n        disabled={disabled || option.disabled}\n        description={option.description}\n        inline={inline}\n        labelClassName={labelClassName}\n      >\n        {`${option[labelField || 'label']}`}\n      </Checkbox>\n    );\n  }\n\n  render() {\n    const {\n      value,\n      options,\n      className,\n      classnames: cx,\n      placeholder,\n      columnsCount,\n      joinValues,\n      extractValue,\n      disabled,\n      inline,\n      delimiter,\n      valueField,\n      classPrefix\n    } = this.props;\n\n    let valueArray = value2array(value, {\n      multiple: false,\n      delimiter,\n      valueField,\n      options\n    });\n    let body: Array<React.ReactNode> = [];\n\n    if (options) {\n      body = options.map((option, key) =>\n        this.renderItem(option, key, valueArray)\n      );\n    }\n\n    if (!inline && columnsCount > 1) {\n      let weight = 12 / (columnsCount as number);\n      let cellClassName = `Grid-col--sm${\n        weight === Math.round(weight) ? weight : ''\n      }`;\n      body = chunk(body, columnsCount).map((group, groupIndex) => (\n        <div className={cx('Grid')} key={groupIndex}>\n          {Array.from({length: columnsCount as number}).map((_, index) => (\n            <div key={index} className={cx(cellClassName)}>\n              {group[index]}\n            </div>\n          ))}\n        </div>\n      ));\n    }\n\n    return (\n      <div className={className}>\n        {body && body.length ? body : placeholder}\n      </div>\n    );\n  }\n}\n\nexport default themeable(\n  uncontrollable(Radios, {\n    value: 'onChange'\n  })\n);\n"
    ]
}