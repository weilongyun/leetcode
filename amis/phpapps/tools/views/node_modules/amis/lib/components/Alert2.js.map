{
    "version": 3,
    "file": "Alert2.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/Alert2.tsx"
    ],
    "names": [],
    "mappings": ";AAAA;;;GAGG;;;;AAEH,wDAA0B;AAC1B,kCAAiD;AACjD,iCAA6B;AAe7B;IAA2B,iCAAuC;IAgBhE,eAAY,KAAiB;QAA7B,YACE,kBAAM,KAAK,CAAC,SAMb;QAJC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,IAAI;SACX,CAAC;;IACJ,CAAC;IAED,2BAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CACX;YACE,IAAI,EAAE,KAAK;SACZ,EACD,IAAI,CAAC,KAAK,CAAC,OAAO,CACnB,CAAC;IACJ,CAAC;IAED,sBAAM,GAAN;QACQ,IAAA,KAMF,IAAI,CAAC,KAAK,EALA,EAAE,gBAAA,EACd,SAAS,eAAA,EACT,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,eAAe,qBACH,CAAC;QAEf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CACvB,uCAAK,SAAS,EAAE,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,YAAU,KAAO,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC;YACnE,eAAe,CAAC,CAAC,CAAC,CACjB,0CACE,SAAS,EAAE,EAAE,CAAC,aAAa,CAAC,EAC5B,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,IAAI,EAAC,QAAQ;gBAEb,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CAC/B,CACV,CAAC,CAAC,CAAC,IAAI;YACP,QAAQ,CACL,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAxDM,kBAAY,GAGf;QACF,KAAK,EAAE,MAAM;QACb,SAAS,EAAE,EAAE;QACb,eAAe,EAAE,KAAK;KACvB,CAAC;IACK,eAAS,GAAkB;QAChC,OAAO;QACP,WAAW;QACX,iBAAiB;QACjB,SAAS;KACV,CAAC;IA4CJ,YAAC;CAAA,AA1DD,CAA2B,eAAK,CAAC,SAAS,GA0DzC;AA1DY,sBAAK;AA4DlB,kBAAe,iBAAS,CAAC,KAAK,CAAC,CAAC",
    "sourcesContent": [
        "/**\n * @file Alert2\n * @author fex\n */\n\nimport React from 'react';\nimport {ClassNamesFn, themeable} from '../theme';\nimport {Icon} from './icons';\n\nexport interface AlertProps {\n  level: 'danger' | 'info' | 'success' | 'warning';\n  className: string;\n  showCloseButton: boolean;\n  onClose?: () => void;\n  classnames: ClassNamesFn;\n  classPrefix: string;\n}\n\nexport interface AlertState {\n  show: boolean;\n}\n\nexport class Alert extends React.Component<AlertProps, AlertState> {\n  static defaultProps: Pick<\n    AlertProps,\n    'level' | 'className' | 'showCloseButton'\n  > = {\n    level: 'info',\n    className: '',\n    showCloseButton: false\n  };\n  static propsList: Array<string> = [\n    'level',\n    'className',\n    'showCloseButton',\n    'onClose'\n  ];\n\n  constructor(props: AlertProps) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleClick() {\n    this.setState(\n      {\n        show: false\n      },\n      this.props.onClose\n    );\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      className,\n      level,\n      children,\n      showCloseButton\n    } = this.props;\n\n    return this.state.show ? (\n      <div className={cx('Alert', level ? `Alert--${level}` : '', className)}>\n        {showCloseButton ? (\n          <button\n            className={cx('Alert-close')}\n            onClick={this.handleClick}\n            type=\"button\"\n          >\n            <Icon icon=\"close\" className=\"icon\" />\n          </button>\n        ) : null}\n        {children}\n      </div>\n    ) : null;\n  }\n}\n\nexport default themeable(Alert);\n"
    ]
}