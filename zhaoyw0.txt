 /**
  @desc go面试1-5+基础面试题
  @author:zhaoyw
  @date:2020-12-10
*/
1、结构体比较，匿名结构体可以，满足条件：顺序、字段、类型一致。两个有名结构体，名称不同，不能比较。
2、map中的key，不能有复杂类型，可以有布尔、数字、字符串、指针、管道、数组、结构体。不能有切片、map、函数。
3,结构体属性中，常见的有 bool、数值型、字符、指针、数组等可以比较，像切片、map、函数等是不能比较。
4、defer，是入栈的操作，在panic之前，入栈操作完成，所有数据都会完成出栈。panic之后肯定不能执行。
5、map声明后，必须用make初始化分配内存，才能赋值。
6、make的第二个参数，是已使用几个元素，不赋值，按默认类型占位。第三个参数，代表容量。

/**
  @desc go面试1-5+基础面试题
  @author:weilongyun
  @date:2020-12-13
*/
7、通过结构体指针访问成员变量，可以通过p.name 或者(*p).name
8、type myint1 int 是代表myint1是一个新的类型，由于go是强类型语言，是不允许赋值给其他类型的
type myint2=int 是代表给myint2起了一个int别名，是可以被int类型赋值的
9、iota默认是0，下一行会自增+1
10、nil 只能赋值给指针、chan、func、interface、map 或 slice 类型的变量，不能用于int string之类的类型，error错误类型可以接收nil
11、关于init函数，会在main函数前执行，一个包引入另外一个包的时候，先执行子包的init，在执行外层的init
12、一个go文件可以创建多个init函数，同一个包中不同的文件也可以包含init函数
13、引入包的规则是：首先先go env看下你的gopath路径，默认引入是在gopath/src下
14 、如果golang执行提示goroot错误，此时执行go mod init即可
15、当调用一个函数的时候没有加小括号，返回的则是定义的这个函数的地址
16、切片是引用类型
17、往管道中写数据，必须要带上值，比如ch <- 3，这个是正确的，ch <-这个是错误的

/*
  @desc go 数组+可变参数总结
  @author:weilongyun
  @date:2020-12-16
*/
数组总结：
1、数组在定义的时候中括号必须指定大小
2、数组中存储的类型一定是一样的
3、数组是地址连续的，所以取值可以通过下标来访问
4、数组是值类型
5、一维数组定义的时候，可以通过类型推导，比如[...],但是需要注意的是如果定义二维数组，只有最外层才可以用类型推导，否则会报错 [...][...]或者[3][...]这个是错的


可变参数总结：
func getParams(nums...int)  {
	fmt.Printf("%T",nums)
    fmt.Println(nums)
}
nums实际上是一个切片，调用函数的时候如果直接传递数组切片是错误的，需要在后面加三个点，也可以分别传递用逗号分割

/**
  @desc go面试10-14天+基础面试题
  @author:田力
  @date:2020-12-19
*/
18、var m map[person]int声明一个map，不通过初始化，而通过m[p]去打印该值，
    因为 m 中不存在 p，所以打印 int 类型的零值0；
19、整型和浮点型变量不能同时参入运算，如：a:=5 b:=8.1 不允许做a+b运算，编译通不过；
20、两个类型相同、长度不同的数组不能进行比较，因为数组的长度也是数组类型的组成部分，
    两个类型和长度都相同的数组可以进行比较，通过对应元素进行比较；
21、cap() 函数不适用 map，map也没用容量这一说；
22、当且仅当接口的动态值和动态类型都为 nil 时，接口类型值才为 nil；
23、删除 map 不存在的键值对时，delete(m,"h")不会报错，相当于没有任何作用；
    获取不存在的减值对时，返回值类型对应的零值，所以返回 0；
24、%d表示输出十进制数字，+表示输出数值的符号，不表示取反；
25、知识点：结构体嵌套。在嵌套结构体中，People 称为内部类型，Teacher 称为外部类型；
    通过嵌套，内部类型的属性、方法，可以为外部类型所有，就好像是外部类型自己的一样。
    此外，外部类型还可以定义自己的属性和方法，甚至可以定义与内部相同的方法，这样内
    部类型的方法就会被“屏蔽”。这个例子中的 ShowB() 就是同名方法。
26、知识点：常量，Go 语言中的字符串是只读的；

